{"ast":null,"code":"var _jsxFileName = \"/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s9 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport './section-styles.css';\nimport './sections-3-4-styles.css';\nimport './header-colors.css';\nimport './header-color-picker.css';\nimport HeaderColorPicker from './components/HeaderColorPicker';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3Vendor from './components/Section3Vendor';\nimport Section4ShipTo from './components/Section4ShipTo';\nimport { useAIProvider } from './hooks/useAIProvider';\n\n// Import custom hooks\nimport { useDragAndDropSensors, useCompanyFieldsDragEnd, usePurchaseOrderFieldsDragEnd, useVendorFieldsDragEnd, useShipToFieldsDragEnd } from './hooks/useDragAndDrop';\nimport { DndContext, closestCenter, useDraggable, useDroppable } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n// Draggable Section Wrapper Component for Sections\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DraggableSectionWrapper({\n  children,\n  id,\n  sectionNumber,\n  isSectionHandleDragging = false,\n  showDragHandle = true\n}) {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id,\n    data: {\n      type: 'section',\n      sectionNumber: sectionNumber\n    }\n  });\n\n  // Map section numbers to proper CSS classes\n  const getSectionClass = sectionNum => {\n    switch (sectionNum) {\n      case 1:\n        return 'section-1-company-info';\n      case 2:\n        return 'section-2-purchase-order';\n      default:\n        return `section-${sectionNum}`;\n    }\n  };\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.6 : 1,\n    zIndex: isDragging ? 1000 : 1,\n    cursor: isDragging ? 'grabbing' : 'grab',\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    border: isDragging ? '3px solid #ff6b6b' : '2px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: isDragging ? 'rgba(255, 107, 107, 0.1)' : 'transparent'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: `sortable-section ${getSectionClass(sectionNumber)} ${isDragging ? 'dragging' : ''}`,\n    \"data-section\": sectionNumber,\n    \"data-testid\": `draggable-section-${id}`,\n    \"data-dragging\": isDragging,\n    ...attributes,\n    ...listeners,\n    children: [isDragging && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      style: {\n        position: 'absolute',\n        top: '5px',\n        left: '5px',\n        fontSize: '10px',\n        color: '#666',\n        backgroundColor: 'rgba(255, 255, 255, 0.8)',\n        padding: '2px 4px',\n        borderRadius: '3px',\n        zIndex: 1001\n      },\n      children: [id, \" | Dragging...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-drag-handle\",\n      style: {\n        position: 'absolute',\n        top: '5px',\n        right: '5px',\n        width: '20px',\n        height: '20px',\n        backgroundColor: isDragging ? '#ff6b6b' : '#7c3aed',\n        color: 'white',\n        borderRadius: '50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '12px',\n        cursor: 'grab',\n        zIndex: 1001,\n        opacity: 0.8\n      },\n      children: \"\\u22EE\\u22EE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-content\",\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n// Sortable shipping column header component for shipping details\n_s(DraggableSectionWrapper, \"9J/a3p2iAf7PAeqkD/B/H2PQwgk=\", false, function () {\n  return [useSortable];\n});\n_c = DraggableSectionWrapper;\nfunction SortableShippingColumnHeader({\n  children,\n  id\n}) {\n  _s2();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    className: `sortable-column-header ${isDragging ? 'dragging' : ''}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n// Draggable Section Header Component for Comments and Totals\n_s2(SortableShippingColumnHeader, \"wZ9LrlAdu45h+k5IBlwhyTPFbVs=\", false, function () {\n  return [useSortable];\n});\n_c2 = SortableShippingColumnHeader;\nfunction DraggableSectionHeader({\n  children,\n  id\n}) {\n  _s3();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"section-header\",\n    ...attributes,\n    ...listeners,\n    title: \"Drag to reorder sections\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n\n// Main Purchase Order Form Component\n_s3(DraggableSectionHeader, \"jv8kPLlEaSR8/o9+iCuLK6K7PFU=\", false, function () {\n  return [useSortable];\n});\n_c3 = DraggableSectionHeader;\nfunction PurchaseOrderForm() {\n  _s9();\n  var _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$();\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n\n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([{\n    id: 'company-name',\n    label: 'Company Name:',\n    placeholder: 'Enter company name',\n    value: ''\n  }, {\n    id: 'company-address',\n    label: 'Street Address:',\n    placeholder: 'Enter street address',\n    value: ''\n  }, {\n    id: 'company-city-state',\n    label: 'City, ST ZIP:',\n    placeholder: 'City, State ZIP',\n    value: ''\n  }, {\n    id: 'company-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }, {\n    id: 'company-fax',\n    label: 'Fax:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }, {\n    id: 'company-website',\n    label: 'Website:',\n    placeholder: 'www.example.com',\n    value: ''\n  }]);\n\n  // Debug: Log company fields state changes\n  useEffect(() => {\n    console.log('🔄 Company fields state updated:', companyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n  }, [companyFields]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // ============================================================================\n  // FIELD LIST COMPONENT\n  // ============================================================================\n\n  // Hardcoded list of fields that are not currently on the form\n  const availableFields = [\n  // Company Information Fields\n  {\n    category: 'Company Information',\n    fields: ['Tax ID Number', 'DUNS Number', 'Business License', 'Industry Classification', 'Year Established', 'Employee Count', 'Annual Revenue', 'Parent Company', 'Subsidiaries', 'Business Type (LLC, Corp, etc.)']\n  },\n  // Purchase Order Fields\n  {\n    category: 'Purchase Order Details',\n    fields: ['Delivery Date', 'Payment Terms', 'Currency', 'Purchase Order Type', 'Priority Level', 'Department', 'Project Code', 'Cost Center', 'Approval Status', 'Approved By']\n  },\n  // Vendor Fields\n  {\n    category: 'Vendor Information',\n    fields: ['Vendor Tax ID', 'Vendor DUNS', 'Vendor Rating', 'Payment History', 'Contract Terms', 'Insurance Certificate', 'Bond Information', 'Quality Rating', 'Delivery Performance', 'Warranty Terms']\n  },\n  // Shipping Fields\n  {\n    category: 'Shipping & Delivery',\n    fields: ['Expected Delivery', 'Carrier Information', 'Tracking Number', 'Delivery Instructions', 'Special Handling', 'Packaging Requirements', 'Delivery Confirmation', 'Return Policy', 'Damage Claims', 'Freight Class']\n  },\n  // Financial Fields\n  {\n    category: 'Financial Details',\n    fields: ['Discount Percentage', 'Early Payment Discount', 'Late Payment Penalty', 'Installment Terms', 'Security Deposit', 'Performance Bond', 'Liquidated Damages', 'Retention Amount', 'Change Order Process', 'Budget Approval']\n  },\n  // Compliance Fields\n  {\n    category: 'Compliance & Legal',\n    fields: ['Regulatory Compliance', 'Safety Requirements', 'Environmental Standards', 'Quality Certifications', 'Audit Requirements', 'Documentation Standards', 'Record Retention', 'Confidentiality Terms', 'Non-Compete Clauses', 'Dispute Resolution']\n  }];\n\n  // State for sidebar visibility on mobile\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n\n  // Toggle sidebar visibility\n  const toggleSidebar = () => {\n    setSidebarVisible(!sidebarVisible);\n  };\n\n  // Helper: slugify and ensure unique id for new fields\n  const generateUniqueFieldId = (baseLabel, existingIds) => {\n    const slugBase = String(baseLabel).toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');\n    let candidate = slugBase || 'field';\n    let counter = 1;\n    while (existingIds.includes(candidate)) {\n      candidate = `${slugBase}-${counter++}`;\n    }\n    return candidate;\n  };\n\n  // dnd-kit: palette draggable item\n  const PaletteDraggable = ({\n    label,\n    category\n  }) => {\n    _s4();\n    const id = `palette-${category}-${label}`;\n    const {\n      attributes,\n      listeners,\n      setNodeRef,\n      transform,\n      isDragging\n    } = useDraggable({\n      id,\n      data: {\n        source: 'palette',\n        label,\n        category\n      }\n    });\n    const style = {\n      transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n      cursor: 'grab',\n      opacity: isDragging ? 0.6 : 1\n    };\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      ref: setNodeRef,\n      style: style,\n      className: \"field-item\",\n      ...attributes,\n      ...listeners,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"field-name\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-field-btn\",\n        title: `Add ${label} to form`,\n        onClick: e => {\n          e.stopPropagation();\n          showNotification(`➕ ${label} field added to form`, 'info');\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  };\n\n  // dnd-kit: droppable wrapper for sections\n  _s4(PaletteDraggable, \"uZNJ3/8UzXAvFYh/tqZxqBQOH0I=\", false, function () {\n    return [useDraggable];\n  });\n  const DroppableZone = ({\n    id,\n    children\n  }) => {\n    _s5();\n    const {\n      isOver,\n      setNodeRef\n    } = useDroppable({\n      id\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: setNodeRef,\n      className: `droppable-zone ${isOver ? 'droppable-over' : ''}`,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Special droppable component for Vendor/Ship To sections\n  _s5(DroppableZone, \"fT702R7NW3L8KUJObOwGrnMsXMQ=\", false, function () {\n    return [useDroppable];\n  });\n  const VendorShipToDroppableInline = ({\n    id,\n    children\n  }) => {\n    _s6();\n    const {\n      isOver,\n      setNodeRef\n    } = useDroppable({\n      id\n    });\n    console.log(`🎯 Droppable zone ${id} registered, isOver: ${isOver}`);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: setNodeRef,\n      className: `droppable-zone ${isOver ? 'droppable-over' : ''}`,\n      style: {\n        padding: '10px',\n        position: 'relative',\n        border: '3px solid green',\n        backgroundColor: isOver ? 'rgba(0, 255, 0, 0.1)' : 'rgba(0, 255, 0, 0.05)'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Handle palette drag end to add fields to target sections\n  _s6(VendorShipToDroppableInline, \"fT702R7NW3L8KUJObOwGrnMsXMQ=\", false, function () {\n    return [useDroppable];\n  });\n  const handlePaletteDragEnd = event => {\n    var _active$data;\n    const {\n      active,\n      over\n    } = event;\n    console.log('🎯 Palette drag end:', {\n      active,\n      over\n    });\n    if (!(active !== null && active !== void 0 && (_active$data = active.data) !== null && _active$data !== void 0 && _active$data.current) || !(over !== null && over !== void 0 && over.id)) {\n      console.log('❌ Missing active data or over id');\n      return;\n    }\n    const data = active.data.current;\n    if (data.source !== 'palette') {\n      console.log('❌ Not a palette source:', data.source);\n      return;\n    }\n    const baseLabel = data.label;\n    console.log('🎯 Dropping on zone:', over.id);\n    if (over.id === 'drop-company') {\n      console.log('✅ Adding to company section');\n      const existingIds = companyFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddCompanyField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Company Info`, 'success');\n    } else if (over.id === 'drop-po') {\n      console.log('✅ Adding to purchase order section');\n      const existingIds = purchaseOrderFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddPurchaseOrderField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Purchase Order`, 'success');\n    } else if (over.id === 'drop-vendor') {\n      console.log('✅ Adding to vendor section');\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddVendorField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else if (over.id === 'drop-ship-to') {\n      console.log('✅ Adding to ship-to section');\n      const existingIds = shipToFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddShipToField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Ship-To section`, 'success');\n    } else if (over.id === 'drop-zone-vendor-ship-to') {\n      console.log('✅ Adding to vendor section (legacy)');\n      // Legacy support - add to vendor section by default\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddVendorField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else if (over.id === 'drop-vendor-ship-to') {\n      console.log('✅ Adding to vendor section (legacy)');\n      // Legacy support - add to vendor section by default  \n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddVendorField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else {\n      console.log('❌ Unknown drop zone:', over.id);\n    }\n  };\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([{\n    id: 'po-title',\n    label: 'Purchase Order',\n    placeholder: '',\n    isTitle: true,\n    value: 'Purchase Order'\n  }, {\n    id: 'po-date',\n    label: 'DATE:',\n    placeholder: 'MM/DD/YYYY',\n    value: ''\n  }, {\n    id: 'po-number',\n    label: 'PO #:',\n    placeholder: 'PO#123456',\n    value: ''\n  }]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([{\n    id: 'vendor-company',\n    label: 'Company:',\n    placeholder: 'Vendor name',\n    value: ''\n  }, {\n    id: 'vendor-contact',\n    label: 'Contact:',\n    placeholder: 'Contact person',\n    value: ''\n  }, {\n    id: 'vendor-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: ''\n  }, {\n    id: 'vendor-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: ''\n  }, {\n    id: 'vendor-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([{\n    id: 'ship-to-name',\n    label: 'Name:',\n    placeholder: 'Contact name',\n    value: ''\n  }, {\n    id: 'ship-to-company',\n    label: 'Company:',\n    placeholder: 'Shipping company',\n    value: ''\n  }, {\n    id: 'ship-to-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: ''\n  }, {\n    id: 'ship-to-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: ''\n  }, {\n    id: 'ship-to-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([{\n    id: 'subtotal',\n    label: 'SUBTOTAL:',\n    placeholder: '$0.00',\n    value: '$0.00',\n    isCalculated: true\n  }, {\n    id: 'tax',\n    label: 'TAX:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'shipping',\n    label: 'SHIPPING:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'other',\n    label: 'OTHER:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'total',\n    label: 'TOTAL:',\n    placeholder: '$0.00',\n    value: '$0.00',\n    isCalculated: true\n  }]);\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n\n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = newField => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    logChange('field-add', newField.id, '', newField.label, 'company');\n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = fieldId => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed company field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n\n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n\n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'vendor') {\n      const field = vendorFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'ship-to') {\n      const field = shipToFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n\n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n\n  // Function to display XML output in a modal\n  const displayXMLOutput = xml => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n\n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n\n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n\n  // Function to download XML file\n  const downloadXML = () => {\n    var _purchaseOrderFields$;\n    const blob = new Blob([xmlOutput], {\n      type: 'application/xml'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${((_purchaseOrderFields$ = purchaseOrderFields.find(f => f.id === 'po-number')) === null || _purchaseOrderFields$ === void 0 ? void 0 : _purchaseOrderFields$.value) || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // =========================================================================\n  // AI SUGGESTIONS\n  // =========================================================================\n  const {\n    getFieldSuggestions\n  } = useAIProvider();\n  const applySuggestionsToFields = (suggestionsMap, fields) => {\n    if (!Array.isArray(fields)) return fields;\n    return fields.map(f => {\n      const newVal = suggestionsMap === null || suggestionsMap === void 0 ? void 0 : suggestionsMap[f.id];\n      if (typeof newVal === 'string') {\n        return {\n          ...f,\n          value: newVal\n        };\n      }\n      return f;\n    });\n  };\n  const handleAIFill = async () => {\n    try {\n      showNotification('🤖 Fetching AI suggestions...', 'info');\n      const payload = {\n        context: 'purchase_order',\n        companyFields,\n        purchaseOrderFields,\n        vendorFields,\n        shipToFields,\n        shippingFields: [{\n          id: 'requisitioner',\n          label: 'Requisitioner name'\n        }, {\n          id: 'shipVia',\n          label: 'Shipping method'\n        }, {\n          id: 'fob',\n          label: 'FOB terms'\n        }, {\n          id: 'shippingTerms',\n          label: 'Shipping terms'\n        }]\n      };\n      const {\n        suggestions\n      } = await getFieldSuggestions(payload);\n      try {\n        console.debug('🧪 AI suggestions keys:', Object.keys(suggestions || {}));\n        // Preview a few critical values to verify mapping\n        console.debug('🧪 AI preview:', {\n          company: {\n            name: suggestions === null || suggestions === void 0 ? void 0 : suggestions['company-name'],\n            phone: suggestions === null || suggestions === void 0 ? void 0 : suggestions['company-phone']\n          },\n          po: {\n            date: suggestions === null || suggestions === void 0 ? void 0 : suggestions['po-date'],\n            number: suggestions === null || suggestions === void 0 ? void 0 : suggestions['po-number']\n          },\n          shipping: {\n            requisitioner: suggestions === null || suggestions === void 0 ? void 0 : suggestions.requisitioner,\n            shipVia: suggestions === null || suggestions === void 0 ? void 0 : suggestions.shipVia\n          },\n          totals: {\n            subtotal: suggestions === null || suggestions === void 0 ? void 0 : suggestions.subtotal,\n            tax: suggestions === null || suggestions === void 0 ? void 0 : suggestions.tax,\n            total: suggestions === null || suggestions === void 0 ? void 0 : suggestions.total\n          },\n          line1: {\n            item: suggestions === null || suggestions === void 0 ? void 0 : suggestions.itemNumber1,\n            desc: suggestions === null || suggestions === void 0 ? void 0 : suggestions.description1,\n            qty: suggestions === null || suggestions === void 0 ? void 0 : suggestions.qty1,\n            rate: suggestions === null || suggestions === void 0 ? void 0 : suggestions.rate1,\n            amount: suggestions === null || suggestions === void 0 ? void 0 : suggestions.amount1\n          }\n        });\n      } catch {}\n\n      // 1) Apply to Section 1–3 states (company/po/vendor/ship-to) with mapping logs\n      setCompanyFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(companyFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setPurchaseOrderFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(purchaseOrderFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setVendorFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(vendorFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setShipToFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(shipToFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // 2) Shipping details (DOM spans)\n      const write = (el, val) => {\n        if (el && typeof val === 'string') el.textContent = val;\n      };\n      const shipSelectors = key => [`.shipping-details [data-field=\"${key}\"] .editable-field`, `.shipping-field[data-field=\"${key}\"] .editable-field`, `#shipping-${key}`, `.shipping-field-${key} .editable-field`];\n      const shipOrder = ['requisitioner', 'shipVia', 'fob', 'shippingTerms'];\n      shipOrder.forEach((key, idx) => {\n        let el = null,\n          used = '';\n        for (const sel of shipSelectors(key)) {\n          el = document.querySelector(sel);\n          if (el) {\n            used = sel;\n            break;\n          }\n        }\n        // Fallback to positional selector used in your JSX\n        if (!el) {\n          const nth = idx + 1; // 1-based\n          // Prefer :nth-of-type within container to ignore headers\n          const selA = `.shipping-details .shipping-field:nth-of-type(${nth}) .editable-field`;\n          el = document.querySelector(selA);\n          if (el) {\n            used = selA;\n          } else {\n            // Last resort: original child-based selector\n            const selB = `.shipping-field:nth-child(${nth}) .editable-field`;\n            el = document.querySelector(selB);\n            if (el) used = selB;\n          }\n        }\n        write(el, suggestions[key]);\n        try {\n          const count = document.querySelectorAll('.shipping-details .shipping-field').length;\n          console.debug('🧭 map(shippingDetails):', {\n            key,\n            selector: used || '(not found)',\n            value: suggestions[key],\n            fieldsInDOM: count\n          });\n        } catch {}\n      });\n\n      // 3) Line items (first 3 rows only)\n      // Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\n      const setCell = (row, col, val) => {\n        const selector = `.itemtable tbody tr:nth-child(${row}) td[data-column=\"${col}\"] .editable-field`;\n        const cell = document.querySelector(selector);\n        if (cell && typeof val === 'string') {\n          cell.textContent = val;\n        }\n        try {\n          console.debug('🧭 map(lineItem):', {\n            row,\n            col,\n            selector,\n            value: val\n          });\n        } catch {}\n      };\n      const li = (i, k) => suggestions === null || suggestions === void 0 ? void 0 : suggestions[`${k}${i}`];\n      for (let i = 1; i <= 3; i++) {\n        setCell(i, 'itemNumber', li(i, 'itemNumber'));\n        setCell(i, 'description', li(i, 'description'));\n        setCell(i, 'qty', li(i, 'qty'));\n        setCell(i, 'rate', li(i, 'rate'));\n        setCell(i, 'amount', li(i, 'amount'));\n      }\n\n      // 4) Totals (state + DOM)\n      setTotalsFields(prev => {\n        const map = {\n          subtotal: suggestions.subtotal,\n          tax: suggestions.tax,\n          shipping: suggestions.shipping,\n          other: suggestions.other,\n          total: suggestions.total\n        };\n        const next = prev.map(f => map[f.id] ? {\n          ...f,\n          value: map[f.id]\n        } : f);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && map[id] !== undefined) {\n              console.debug('🧭 map(totalsFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // Write editable totals into DOM for non-calculated rows\n      const domTotals = field => document.querySelector(`.totals-section .total-row[data-field=\"${field}\"] .editable-field`);\n      ['tax', 'shipping', 'other'].forEach(key => {\n        const sel = `.totals-section .total-row[data-field=\"${key}\"] .editable-field`;\n        write(domTotals(key), suggestions[key]);\n        try {\n          console.debug('🧭 map(totalsDOM):', {\n            key,\n            selector: sel,\n            value: suggestions[key]\n          });\n        } catch {}\n      });\n\n      // Calculated-looking spans (subtotal, total) in your layout use .calculated-field\n      const calcTotal = document.querySelector(`.totals-section .total-row[data-field=\"total\"] .total-field`);\n      const calcSub = document.querySelector(`.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`);\n      write(calcSub, suggestions.subtotal);\n      write(calcTotal, suggestions.total);\n      try {\n        console.debug('🧭 map(totalsDOM):', {\n          key: 'subtotal',\n          selector: `.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`,\n          value: suggestions.subtotal\n        });\n        console.debug('🧭 map(totalsDOM):', {\n          key: 'total',\n          selector: `.totals-section .total-row[data-field=\"total\"] .total-field`,\n          value: suggestions.total\n        });\n      } catch {}\n\n      // 5) Comments, Contact Info (DOM)\n      const commentsEl = document.querySelector('.comments-content .editable-field');\n      const contactEl = document.querySelector('.contact-section .editable-field');\n      write(commentsEl, suggestions.comments);\n      write(contactEl, suggestions.contactInfo);\n      try {\n        console.debug('🧭 map(comments):', {\n          selector: '.comments-content .editable-field',\n          value: suggestions.comments\n        });\n        console.debug('🧭 map(contactInfo):', {\n          selector: '.contact-section .editable-field',\n          value: suggestions.contactInfo\n        });\n      } catch {}\n\n      // 6) Bump timestamps\n      updateCompanyFieldsTimestamp();\n      updatePurchaseOrderFieldsTimestamp();\n      showNotification('✅ AI suggestions applied', 'success');\n    } catch (e) {\n      console.error('AI fill failed:', e);\n      showNotification(`❌ AI fill failed: ${e.message}`, 'error');\n    }\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n\n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('📄 Starting XML generation...');\n\n      // Capture current field values first\n      const capturedData = captureFieldValues();\n\n      // Prepare data for XML generation\n      // Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\n      const headerSections = Array.from(document.querySelectorAll('.header-section .sortable-section'));\n      const visualSections1And2 = headerSections.map(el => el.id).filter(id => id === 'section1' || id === 'section2');\n      const sections1And2ForExport = visualSections1And2.length === 2 ? visualSections1And2 : sections1And2Order;\n\n      // Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\n      const vendorShipToSections = Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));\n      const visualSections3And4 = vendorShipToSections.map(el => el.id).filter(id => id === 'section3' || id === 'section4');\n      const sections3And4ForExport = visualSections3And4.length === 2 ? visualSections3And4 : vendorShipToSectionOrder;\n\n      // Helpers for DOM reads\n      const getText = sel => {\n        var _document$querySelect, _document$querySelect2;\n        return ((_document$querySelect = document.querySelector(sel)) === null || _document$querySelect === void 0 ? void 0 : (_document$querySelect2 = _document$querySelect.textContent) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.trim()) || '';\n      };\n\n      // Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\n      const normalizedLineItems = (capturedData.lineItems || []).map(row => ({\n        // original UI keys\n        itemNumber: row.itemNumber || '',\n        description: row.description || '',\n        qty: row.qty || row.quantity || '',\n        rate: row.rate || row.unitPrice || '',\n        amount: row.amount || row.total || '',\n        // template-expected keys\n        quantity: row.quantity || row.qty || '',\n        unitPrice: row.unitPrice || row.rate || '',\n        total: row.total || row.amount || ''\n      }));\n      const exportData = {\n        ...capturedData,\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2ForExport,\n          // Use current visual order to ensure XML matches UI\n          sections3And4: sections3And4ForExport,\n          // Use current visual order to ensure XML matches UI\n          sections5And6: sections5And6Order,\n          // Use actual state for sections 5&6\n          sections3And4And5And6: vendorShipToAndShippingDetailsOrder,\n          // Vendor-ShipTo and Shipping Details order\n          sections8And9: commentsTotalsSectionOrder,\n          // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder,\n          // Use actual state for line item columns\n          shippingColumns: shippingColumnOrder // Use actual state for shipping columns\n        },\n        // CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\n        fieldOrder: {\n          company: companyFieldOrder,\n          // Preserve company field order independently of section position\n          purchaseOrder: purchaseOrderFieldOrder,\n          // Preserve PO field order independently of section position\n          vendor: vendorFields.map(f => f.id),\n          // Vendor field order\n          shipTo: shipToFields.map(f => f.id) // Ship-to field order\n        },\n        // Add normalized line items (support both key schemes)\n        lineItems: normalizedLineItems,\n        // Shipping details (prefer data-field; fall back handled in XML builder too)\n        requisitioner: getText('.shipping-details [data-field=\"requisitioner\"] .editable-field'),\n        shipVia: getText('.shipping-details [data-field=\"shipVia\"] .editable-field'),\n        fob: getText('.shipping-details [data-field=\"fob\"] .editable-field'),\n        shippingTerms: getText('.shipping-details [data-field=\"shippingTerms\"] .editable-field'),\n        // Totals: read what the user sees\n        subtotal: getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field') || '$0.00',\n        tax: getText('.totals-section .total-row[data-field=\"tax\"] .editable-field') || '$0.00',\n        shipping: getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field') || '$0.00',\n        other: getText('.totals-section .total-row[data-field=\"other\"] .editable-field') || '$0.00',\n        total: getText('.totals-section .total-row[data-field=\"total\"] .total-field') || '$0.00',\n        comments: getText('.comments-content .editable-field'),\n        contactInfo: getText('.contact-section .editable-field')\n      };\n      console.debug('🔎 Export DOM reads:', {\n        requisitioner: exportData.requisitioner,\n        shipVia: exportData.shipVia,\n        fob: exportData.fob,\n        shippingTerms: exportData.shippingTerms,\n        subtotal: exportData.subtotal,\n        tax: exportData.tax,\n        shipping: exportData.shipping,\n        other: exportData.other,\n        total: exportData.total\n      });\n      console.log('📄 Export data prepared:', exportData);\n      console.log('🔀 Section order being sent to XML:', exportData.sectionOrder);\n      console.log('🔀 Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('🔀 Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('🔀 Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n      console.log('🔀 Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('🔀 Shipping columns order:', exportData.sectionOrder.shippingColumns);\n      console.log('🔀 Line items data:', exportData.lineItems);\n\n      // CRITICAL: Log field order information\n      console.log('🔀 Field order being sent to XML:', exportData.fieldOrder);\n      console.log('🔀 Company field order:', exportData.fieldOrder.company);\n      console.log('🔀 Purchase order field order:', exportData.fieldOrder.purchaseOrder);\n      console.log('🔀 Vendor field order:', exportData.fieldOrder.vendor);\n      console.log('🔀 Ship-to field order:', exportData.fieldOrder.shipTo);\n\n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n\n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n\n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add to notification container\n    const container = document.getElementById('notification-container');\n    if (container) {\n      container.appendChild(notification);\n    } else {\n      // Fallback to body if container not found\n      document.body.appendChild(notification);\n    }\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = event => {\n    _s7();\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n\n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setCompanyFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        console.log('🔄 Company field order updated:', {\n          oldIndex,\n          newIndex,\n          newOrder\n        });\n        return newOrder;\n      });\n      console.log('🔄 Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n\n  // Function to log a summary of all field states\n  _s7(handleCompanyDragEnd, \"Z4WIFLscuzsxuDjcfj/36TQtLNg=\", false, function () {\n    return [useCompanyFieldsDragEnd];\n  });\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({\n          id: f.id,\n          label: f.label\n        }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({\n          id: f.id,\n          label: f.label,\n          isTitle: f.isTitle\n        }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = newField => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = fieldId => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed purchase order field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // VENDOR FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Add new vendor field\n  const handleAddVendorField = newField => {\n    setVendorFields(prevFields => [...prevFields, newField]);\n    console.log('➕ Added new vendor field:', newField);\n    showNotification(`➕ Added vendor field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove vendor field\n  const handleRemoveVendorField = fieldId => {\n    setVendorFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed vendor field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed vendor field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle vendor field label changes\n  const handleVendorFieldLabelChange = (fieldId, newLabel) => {\n    setVendorFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'vendor');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n  };\n\n  // ============================================================================\n  // SHIP-TO FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Add new ship-to field\n  const handleAddShipToField = newField => {\n    setShipToFields(prevFields => [...prevFields, newField]);\n    console.log('➕ Added new ship-to field:', newField);\n    showNotification(`➕ Added ship-to field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove ship-to field\n  const handleRemoveShipToField = fieldId => {\n    setShipToFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed ship-to field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed ship-to field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle ship-to field label changes\n  const handleShipToFieldLabelChange = (fieldId, newLabel) => {\n    setShipToFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'ship-to');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = event => {\n    _s8();\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n\n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setPurchaseOrderFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        console.log('🔄 Purchase order field order updated:', {\n          oldIndex,\n          newIndex,\n          newOrder\n        });\n        return newOrder;\n      });\n      console.log('🔄 Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n\n  // State for vendor/ship-to section order\n  _s8(handlePurchaseOrderDragEnd, \"v6fWquKCV6fyV8vMqH2r576JyB4=\", false, function () {\n    return [usePurchaseOrderFieldsDragEnd];\n  });\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n\n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n\n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5', 'section6']);\n\n  // State for vendor-ship-to and shipping-details sections order\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['sections3And4', 'sections5And6']);\n\n  // CRITICAL: Add field order state management (same pattern as section order)\n  // State for company field order (preserves drag-and-drop order independently of section position)\n  const [companyFieldOrder, setCompanyFieldOrder] = useState([]);\n\n  // State for purchase order field order (preserves drag-and-drop order independently of section position)\n  const [purchaseOrderFieldOrder, setPurchaseOrderFieldOrder] = useState([]);\n\n  // Initialize field order states with current field IDs\n  React.useEffect(() => {\n    setCompanyFieldOrder(companyFields.map(field => field.id));\n  }, [companyFields]);\n  React.useEffect(() => {\n    setPurchaseOrderFieldOrder(purchaseOrderFields.map(field => field.id));\n  }, [purchaseOrderFields]);\n\n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState(['itemNumber', 'description', 'qty', 'rate', 'amount']);\n\n  // Shipping column order state\n  const [shippingColumnOrder, setShippingColumnOrder] = useState(['requisitioner', 'shipVia', 'fob', 'shippingTerms']);\n\n  // Log line item column order changes\n  useEffect(() => {\n    console.log('🔀 Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n\n  // Log shipping column order changes\n  useEffect(() => {\n    console.log('🚢 Shipping column order updated:', shippingColumnOrder);\n  }, [shippingColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle drag start\n  const handleDragStart = event => {\n    var _active$data2;\n    const {\n      active\n    } = event;\n    console.log('🚀 DRAG START:', {\n      active: active.id,\n      activeData: active === null || active === void 0 ? void 0 : (_active$data2 = active.data) === null || _active$data2 === void 0 ? void 0 : _active$data2.current,\n      timestamp: new Date().toISOString()\n    });\n    updateDebugPanel('DRAG START', active.id);\n\n    // Add dragging state to the dragged element\n    if (active.id === 'section1' || active.id === 'section2') {\n      const element = document.getElementById(active.id);\n      if (element) {\n        element.setAttribute('data-is-dragging', 'true');\n        console.log('✅ Added dragging state to:', active.id);\n\n        // Add visual feedback\n        element.style.border = '3px solid #ff6b6b';\n        element.style.backgroundColor = 'rgba(255, 107, 107, 0.1)';\n      }\n    }\n  };\n\n  // Function to handle drag over\n  const handleDragOver = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id === 'section1' || active.id === 'section2') {\n      if (over && (over.id === 'section1' || over.id === 'section2')) {\n        console.log('🎯 DRAG OVER:', {\n          active: active.id,\n          over: over.id,\n          timestamp: new Date().toISOString()\n        });\n        updateDebugPanel('DRAG OVER', `${active.id} → ${over.id}`);\n\n        // Add over state to the target element\n        const targetElement = document.getElementById(over.id);\n        if (targetElement) {\n          targetElement.setAttribute('data-is-over', 'true');\n\n          // Add visual feedback for drop target\n          targetElement.style.border = '3px solid #4ecdc4';\n          targetElement.style.backgroundColor = 'rgba(78, 205, 196, 0.1)';\n        }\n      }\n    }\n  };\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = event => {\n    var _active$data3, _over$data;\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 SECTION DRAG DEBUG - Event received:', {\n      activeId: active === null || active === void 0 ? void 0 : active.id,\n      overId: over === null || over === void 0 ? void 0 : over.id,\n      activeData: active === null || active === void 0 ? void 0 : (_active$data3 = active.data) === null || _active$data3 === void 0 ? void 0 : _active$data3.current,\n      overData: over === null || over === void 0 ? void 0 : (_over$data = over.data) === null || _over$data === void 0 ? void 0 : _over$data.current,\n      timestamp: new Date().toISOString()\n    });\n    updateDebugPanel('DRAG END', `${active === null || active === void 0 ? void 0 : active.id} → ${over === null || over === void 0 ? void 0 : over.id}`);\n    if (!active || !over) {\n      console.log('❌ Missing active or over in section drag');\n      return;\n    }\n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSections1And2Order(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        if (oldIndex === -1 || newIndex === -1) {\n          console.log('❌ Invalid indices found');\n          return prevOrder;\n        }\n        const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\n        console.log('🔄 New section order:', newOrder);\n        console.log('✅ Section swap successful!');\n        showNotification('🔄 Sections swapped successfully!', 'success');\n        console.log('✅ Sections swapped via drag & drop!');\n        return newOrder;\n      });\n\n      // Clean up data attributes and visual feedback\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    } else {\n      console.log('🔍 No section swap - same position');\n\n      // Clean up data attributes and visual feedback even if no swap\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New sections 5&6 order:', newOrder);\n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:', {\n      active: active.id,\n      over: over.id\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Line item column swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setLineItemColumnOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        console.log('🔄 Previous line item column order:', items);\n        console.log('🔀 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        console.log('🔄 New line item column order:', newOrder);\n        showNotification('🔄 Line item columns reordered!', 'info');\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No line item column swap - same position');\n    }\n  };\n\n  // Handle shipping column drag end\n  const handleShippingColumnDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 SHIPPING COLUMN DRAG DEBUG - Event received:', {\n      active: active.id,\n      over: over.id\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Shipping column swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setShippingColumnOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        console.log('🔄 Previous shipping column order:', items);\n        console.log('🔀 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        console.log('🔄 New shipping column order:', newOrder);\n        showNotification('🚢 Shipping columns reordered!', 'info');\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No shipping column swap - same position');\n    }\n  };\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New vendor/ship-to order:', newOrder);\n\n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('🔄 Previous vendor-shipTo + shipping details order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New vendor-shipTo + shipping details order:', newOrder);\n        showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n\n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle,\n        // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n\n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n\n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    showNotification('🔄 Sections swapped!', 'info');\n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n\n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      }))\n    });\n  };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n\n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n\n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n\n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n\n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n\n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n\n    // Capture company field values - PRESERVE CURRENT ORDER\n    console.log('🔍 DEBUG: Current company fields order before capture:', companyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n    console.log('🔍 DEBUG: Updated company fields order after capture:', updatedCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n\n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('📝 Line items captured:', capturedLineItems);\n\n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n\n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      console.log(`📝 Totals field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    console.log('📝 Field values captured and state updated!');\n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n\n  // Unified drag end dispatcher for a single top-level DndContext\n  const handleRootDragEnd = event => {\n    var _active$data4, _active$data4$current;\n    const {\n      active\n    } = event;\n    const activeId = (active === null || active === void 0 ? void 0 : active.id) || '';\n    const source = active === null || active === void 0 ? void 0 : (_active$data4 = active.data) === null || _active$data4 === void 0 ? void 0 : (_active$data4$current = _active$data4.current) === null || _active$data4$current === void 0 ? void 0 : _active$data4$current.source;\n\n    // Reset section handle dragging state\n    setIsSectionHandleDragging(false);\n    if (source === 'palette') {\n      handlePaletteDragEnd(event);\n      return;\n    }\n\n    // Sections 1 & 2 swap\n    if (activeId === 'section1' || activeId === 'section2') {\n      handleSectionDragEnd(event);\n      return;\n    }\n    // Vendor-ShipTo + ShippingDetails container swap\n    if (activeId === 'sections3And4' || activeId === 'sections5And6') {\n      handleVendorShipToAndShippingDetailsDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To section reordering\n    if (activeId === 'section3' || activeId === 'section4') {\n      handleVendorShipToSectionDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To individual field drags\n    if (String(activeId).startsWith('vendor-')) {\n      handleVendorDragEnd(event);\n      return;\n    }\n    if (String(activeId).startsWith('ship-to-')) {\n      handleShipToDragEnd(event);\n      return;\n    }\n    // Line item column reorder\n    if (['itemNumber', 'description', 'qty', 'rate', 'amount'].includes(activeId)) {\n      handleLineItemColumnDragEnd(event);\n      return;\n    }\n    // Comments & totals sections reorder\n    if (activeId === 'section8' || activeId === 'section9') {\n      handleCommentsTotalsDragEnd(event);\n      return;\n    }\n  };\n\n  // State for tracking section handle drag operations (simplified)\n  const [isSectionHandleDragging, setIsSectionHandleDragging] = useState(false);\n\n  // Debug state\n  const [dragCount, setDragCount] = useState(0);\n  const [lastDragEvent, setLastDragEvent] = useState('None');\n\n  // Function to update debug panel\n  const updateDebugPanel = (eventType, details) => {\n    setLastDragEvent(`${eventType}: ${details}`);\n    setDragCount(prev => prev + 1);\n\n    // Update DOM elements for real-time display\n    const lastDragEventElement = document.getElementById('last-drag-event');\n    const dragCountElement = document.getElementById('drag-count');\n    if (lastDragEventElement) {\n      lastDragEventElement.textContent = `${eventType}: ${details}`;\n    }\n    if (dragCountElement) {\n      dragCountElement.textContent = dragCount + 1;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `purchase-order-container ${!sidebarVisible ? 'sidebar-hidden' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      collisionDetection: closestCenter,\n      onDragStart: handleDragStart,\n      onDragOver: handleDragOver,\n      onDragEnd: handleRootDragEnd,\n      onDragCancel: () => {\n        console.log('❌ Drag cancelled');\n        updateDebugPanel('DRAG CANCEL', 'Drag operation cancelled');\n      },\n      onDragMove: event => {\n        console.log('🔄 Drag move:', event);\n        updateDebugPanel('DRAG MOVE', `${event.active.id} moving`);\n      },\n      children: [console.log('🔧 DndContext rendering with:', {\n        sensors: sensors,\n        collisionDetection: closestCenter,\n        hasDragStart: !!handleDragStart,\n        hasDragOver: !!handleDragOver,\n        hasDragEnd: !!handleRootDragEnd,\n        timestamp: new Date().toISOString()\n      }), sidebarVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-list-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCCB Available Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1953,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Fields not currently on the form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1954,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1952,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-list-content\",\n          children: availableFields.map((category, categoryIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-category\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"category-title\",\n              children: category.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1959,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"field-list\",\n              children: category.fields.map((field, fieldIndex) => /*#__PURE__*/_jsxDEV(PaletteDraggable, {\n                label: field,\n                category: category.category\n              }, `${categoryIndex}-${fieldIndex}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1962,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1960,\n              columnNumber: 17\n            }, this)]\n          }, categoryIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1958,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1956,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1951,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"page-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Purchase Order Management System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1973,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create, edit, and manage purchase orders with ease\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1974,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 10,\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sidebar-toggle-btn\",\n            onClick: toggleSidebar,\n            title: sidebarVisible ? \"Hide Field List\" : \"Show Field List\",\n            children: sidebarVisible ? \"📋 Hide Fields\" : \"📋 Show Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1976,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1975,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1972,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-panel\",\n        style: {\n          position: 'fixed',\n          top: '100px',\n          left: '20px',\n          backgroundColor: 'rgba(0, 0, 0, 0.9)',\n          color: 'white',\n          padding: '15px',\n          borderRadius: '8px',\n          fontSize: '12px',\n          fontFamily: 'monospace',\n          zIndex: 10000,\n          maxWidth: '300px',\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: '0 0 10px 0',\n            color: '#4ecdc4'\n          },\n          children: \"\\uD83D\\uDC1B Debug Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2001,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Sections 1&2 Order:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2003,\n            columnNumber: 11\n          }, this), \" \", JSON.stringify(sections1And2Order)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2002,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Section Handle Dragging:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2006,\n            columnNumber: 11\n          }, this), \" \", isSectionHandleDragging ? 'YES' : 'NO']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2005,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Drag Event:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2009,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"last-drag-event\",\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2009,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2008,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Drag Count:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2012,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"drag-count\",\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2012,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2011,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log('🔍 Debug: Current state:', {\n              sections1And2Order,\n              isSectionHandleDragging,\n              companyFields: companyFields.length,\n              purchaseOrderFields: purchaseOrderFields.length\n            });\n          },\n          style: {\n            backgroundColor: '#4ecdc4',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '10px'\n          },\n          children: \"Log State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2014,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log('🧪 Testing section swap...');\n            setSections1And2Order(prev => {\n              const newOrder = [...prev].reverse();\n              console.log('🔄 Manual swap:', prev, '→', newOrder);\n              updateDebugPanel('MANUAL SWAP', `${prev.join('→')} → ${newOrder.join('→')}`);\n              return newOrder;\n            });\n          },\n          style: {\n            backgroundColor: '#ff6b6b',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '10px',\n            marginLeft: '5px'\n          },\n          children: \"Test Swap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2036,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log('🧪 Testing drag simulation...');\n            // Simulate a drag start event\n            const mockEvent = {\n              active: {\n                id: 'section1',\n                data: {\n                  current: {\n                    type: 'section',\n                    sectionNumber: 1\n                  }\n                }\n              },\n              over: {\n                id: 'section2',\n                data: {\n                  current: {\n                    type: 'section',\n                    sectionNumber: 2\n                  }\n                }\n              }\n            };\n            console.log('🧪 Simulating drag end event:', mockEvent);\n            handleSectionDragEnd(mockEvent);\n          },\n          style: {\n            backgroundColor: '#ffa500',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '10px',\n            marginLeft: '5px'\n          },\n          children: \"Test Drag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2060,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '15px',\n            padding: '10px',\n            border: '1px solid #666',\n            borderRadius: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              margin: '0 0 8px 0',\n              color: '#4ecdc4'\n            },\n            children: \"\\uD83E\\uDDEA DND Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2087,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '10px',\n              marginBottom: '5px'\n            },\n            children: \"Try dragging this test item:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2088,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '30px',\n              backgroundColor: '#7c3aed',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              cursor: 'grab',\n              borderRadius: '4px',\n              fontSize: '10px'\n            },\n            draggable: \"true\",\n            onDragStart: e => {\n              console.log('🧪 Test drag start:', e);\n              e.dataTransfer.setData('text/plain', 'test');\n            },\n            onDragOver: e => {\n              e.preventDefault();\n              console.log('🧪 Test drag over:', e);\n            },\n            onDrop: e => {\n              e.preventDefault();\n              console.log('🧪 Test drop:', e);\n            },\n            children: \"\\uD83E\\uDDEA Test Drag Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2091,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2086,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1987,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-section vendor-shipping-columns\",\n              children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                items: sections1And2Order,\n                strategy: horizontalListSortingStrategy,\n                children: [console.log('🔧 SortableContext for sections 1&2:', {\n                  items: sections1And2Order,\n                  strategy: 'horizontalListSortingStrategy',\n                  sections1And2OrderType: typeof sections1And2Order,\n                  sections1And2OrderLength: sections1And2Order === null || sections1And2Order === void 0 ? void 0 : sections1And2Order.length,\n                  itemsArray: Array.isArray(sections1And2Order) ? sections1And2Order : 'NOT ARRAY',\n                  timestamp: new Date().toISOString()\n                }), console.log('🔧 SortableContext items validation:', {\n                  itemsValid: Array.isArray(sections1And2Order) && sections1And2Order.length > 0,\n                  itemsContent: sections1And2Order,\n                  strategyValid: horizontalListSortingStrategy !== undefined,\n                  timestamp: new Date().toISOString()\n                }), sections1And2Order.map((sectionId, index) => {\n                  console.log(`🔧 Rendering section: ${sectionId} at index ${index}`);\n                  if (sectionId === 'section1') {\n                    return /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                      id: \"section1\",\n                      sectionNumber: \"1\",\n                      isSectionHandleDragging: isSectionHandleDragging,\n                      showDragHandle: true,\n                      children: /*#__PURE__*/_jsxDEV(Section1CompanyInfo, {\n                        companyFields: companyFields,\n                        sensors: sensors,\n                        onCompanyDragEnd: handleCompanyDragEnd,\n                        onAddCompanyField: handleAddCompanyField,\n                        onRemoveCompanyField: handleRemoveCompanyField,\n                        onLabelChange: handleCompanyFieldLabelChange,\n                        onContentChange: handleContentChange,\n                        lastModified: lastModified\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2157,\n                        columnNumber: 25\n                      }, this)\n                    }, \"section1\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2156,\n                      columnNumber: 23\n                    }, this);\n                  } else if (sectionId === 'section2') {\n                    return /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                      id: \"section2\",\n                      sectionNumber: \"2\",\n                      isSectionHandleDragging: isSectionHandleDragging,\n                      showDragHandle: true,\n                      children: /*#__PURE__*/_jsxDEV(Section2PurchaseOrder, {\n                        purchaseOrderFields: purchaseOrderFields,\n                        sensors: sensors,\n                        onPurchaseOrderDragEnd: handlePurchaseOrderDragEnd,\n                        onAddPurchaseOrderField: handleAddPurchaseOrderField,\n                        onRemovePurchaseOrderField: handleRemovePurchaseOrderField,\n                        onLabelChange: handlePurchaseOrderFieldLabelChange,\n                        onContentChange: handleContentChange,\n                        lastModified: poLastModified\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2172,\n                        columnNumber: 25\n                      }, this)\n                    }, \"section2\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2171,\n                      columnNumber: 23\n                    }, this);\n                  }\n                  return null;\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2132,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2130,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: vendorShipToAndShippingDetailsOrder,\n            strategy: verticalListSortingStrategy,\n            children: vendorShipToAndShippingDetailsOrder.map(sectionId => {\n              if (sectionId === 'sections3And4') {\n                return /*#__PURE__*/ /* Vendor and Ship To Sections - Side by Side */_jsxDEV(\"div\", {\n                  className: \"vendor-shipping-columns\",\n                  children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                    items: vendorShipToSectionOrder,\n                    strategy: horizontalListSortingStrategy,\n                    children: vendorShipToSectionOrder.map(innerSectionId => {\n                      if (innerSectionId === 'section3') {\n                        return /*#__PURE__*/_jsxDEV(DroppableZone, {\n                          id: \"drop-vendor\",\n                          children: /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                            id: \"section3\",\n                            sectionNumber: \"3\",\n                            isSectionHandleDragging: isSectionHandleDragging,\n                            showDragHandle: false,\n                            children: /*#__PURE__*/_jsxDEV(Section3Vendor, {\n                              vendorFields: vendorFields,\n                              sensors: sensors,\n                              onVendorDragEnd: handleVendorDragEnd,\n                              onAddVendorField: handleAddVendorField,\n                              onRemoveVendorField: handleRemoveVendorField,\n                              onLabelChange: handleVendorFieldLabelChange,\n                              onContentChange: handleContentChange,\n                              lastModified: Date.now()\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2210,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2209,\n                            columnNumber: 31\n                          }, this)\n                        }, \"section3\", false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2208,\n                          columnNumber: 29\n                        }, this);\n                      } else if (innerSectionId === 'section4') {\n                        return /*#__PURE__*/_jsxDEV(DroppableZone, {\n                          id: \"drop-ship-to\",\n                          children: /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                            id: \"section4\",\n                            sectionNumber: \"4\",\n                            isSectionHandleDragging: isSectionHandleDragging,\n                            showDragHandle: false,\n                            children: /*#__PURE__*/_jsxDEV(Section4ShipTo, {\n                              shipToFields: shipToFields,\n                              sensors: sensors,\n                              onShipToDragEnd: handleShipToDragEnd,\n                              onAddShipToField: handleAddShipToField,\n                              onRemoveShipToField: handleRemoveShipToField,\n                              onLabelChange: handleShipToFieldLabelChange,\n                              onContentChange: handleContentChange,\n                              lastModified: Date.now()\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2227,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2226,\n                            columnNumber: 31\n                          }, this)\n                        }, \"section4\", false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2225,\n                          columnNumber: 29\n                        }, this);\n                      }\n                      return null;\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2201,\n                    columnNumber: 21\n                  }, this)\n                }, \"sections3And4\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2200,\n                  columnNumber: 19\n                }, this);\n              } else if (sectionId === 'sections5And6') {\n                return /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                  id: \"sections5And6\",\n                  sectionNumber: \"5&6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"shipping-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"REQUISITIONER\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2251,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"SHIP VIA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2252,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"F.O.B.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2253,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"SHIPPING TERMS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2254,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      \"data-field\": \"requisitioner\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"Requisitioner name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2255,\n                        columnNumber: 82\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2255,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      \"data-field\": \"shipVia\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"Shipping method\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2256,\n                        columnNumber: 76\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2256,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      \"data-field\": \"fob\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"FOB terms\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2257,\n                        columnNumber: 72\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2257,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      \"data-field\": \"shippingTerms\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"Shipping terms\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2258,\n                        columnNumber: 82\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2258,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2250,\n                    columnNumber: 21\n                  }, this)\n                }, \"sections5And6\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2248,\n                  columnNumber: 19\n                }, this);\n              }\n              return null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2192,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: lineItemColumnOrder,\n            strategy: verticalListSortingStrategy,\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"itemtable\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2272,\n                    columnNumber: 19\n                  }, this), lineItemColumnOrder.map(columnId => {\n                    const columnConfig = {\n                      itemNumber: {\n                        label: 'Item#',\n                        colSpan: 3\n                      },\n                      description: {\n                        label: 'Description',\n                        colSpan: 12\n                      },\n                      qty: {\n                        label: 'Qty',\n                        colSpan: 2\n                      },\n                      rate: {\n                        label: 'Rate',\n                        colSpan: 3\n                      },\n                      amount: {\n                        label: 'Amount',\n                        colSpan: 3\n                      }\n                    };\n                    const config = columnConfig[columnId];\n                    return /*#__PURE__*/_jsxDEV(\"th\", {\n                      colSpan: config.colSpan,\n                      children: config.label\n                    }, columnId, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2284,\n                      columnNumber: 23\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2271,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2270,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [1, 2, 3, 4, 5].map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"draggable-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2294,\n                    columnNumber: 21\n                  }, this), lineItemColumnOrder.map(columnId => {\n                    const columnConfig = {\n                      itemNumber: {\n                        colSpan: 3,\n                        placeholder: 'Item number'\n                      },\n                      description: {\n                        colSpan: 12,\n                        placeholder: 'Item description'\n                      },\n                      qty: {\n                        colSpan: 2,\n                        placeholder: 'Qty'\n                      },\n                      rate: {\n                        colSpan: 3,\n                        placeholder: '$0.00'\n                      },\n                      amount: {\n                        colSpan: 3,\n                        placeholder: '$0.00'\n                      }\n                    };\n                    const config = columnConfig[columnId];\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: config.colSpan,\n                      \"data-column\": columnId,\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": config.placeholder\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2307,\n                        columnNumber: 27\n                      }, this)\n                    }, `${row}-${columnId}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2306,\n                      columnNumber: 25\n                    }, this);\n                  })]\n                }, row, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2293,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2291,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2269,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2268,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: commentsTotalsSectionOrder,\n            strategy: horizontalListSortingStrategy,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-totals-section\",\n              style: {\n                display: 'flex',\n                gap: '20px'\n              },\n              children: commentsTotalsSectionOrder.map(sectionId => {\n                if (sectionId === 'section8') {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"section8\",\n                    className: \"sortable-section comments-section\",\n                    style: {\n                      flex: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DraggableSectionHeader, {\n                      id: \"section8\",\n                      children: \"Comments or Special Instructions ::\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2324,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-content\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"comments-content\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"Enter comments or special instructions...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2329,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2328,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2327,\n                      columnNumber: 23\n                    }, this)]\n                  }, \"section8\", true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2323,\n                    columnNumber: 21\n                  }, this);\n                } else if (sectionId === 'section9') {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"section9\",\n                    className: \"sortable-section totals-section\",\n                    style: {\n                      flex: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DraggableSectionHeader, {\n                      id: \"section9\",\n                      children: \"Totals ::\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2337,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"subtotal\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"SUBTOTAL:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2342,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"calculated-field\",\n                          children: \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2343,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2341,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"tax\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"TAX:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2346,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2347,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2345,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"shipping\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"SHIPPING:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2350,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2351,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2349,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"other\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"OTHER:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2354,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2355,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2353,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row total-final\",\n                        \"data-field\": \"total\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"TOTAL:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2358,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"calculated-field total-field\",\n                          children: \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2359,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2357,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2340,\n                      columnNumber: 23\n                    }, this)]\n                  }, \"section9\", true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2336,\n                    columnNumber: 21\n                  }, this);\n                }\n                return null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2319,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2318,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Contact Information:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2375,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"Enter contact information here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2376,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2374,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2373,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn preview-btn\",\n              onClick: togglePreviewMode,\n              children: isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2382,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: handleAIFill,\n              children: \"\\uD83E\\uDD16 AI Fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2385,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn export-btn\",\n              onClick: exportToXML,\n              children: \"\\uD83D\\uDCC4 Generate XML\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2388,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2381,\n            columnNumber: 11\n          }, this), changeHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-history-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              children: [\"\\uD83D\\uDCDD Change History (\", changeHistory.length, \" changes)\", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-history-btn\",\n                onClick: clearChangeHistory,\n                children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2398,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-list\",\n              children: [changeHistory.slice(0, 10).map(change => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"change-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-time\",\n                  children: new Date(change.timestamp).toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2405,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-type\",\n                  children: change.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2408,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-field\",\n                  children: change.fieldId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2409,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-old\",\n                  children: change.oldValue || 'empty'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2410,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-arrow\",\n                  children: \"\\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-new\",\n                  children: change.newValue || 'empty'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2412,\n                  columnNumber: 21\n                }, this)]\n              }, change.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2404,\n                columnNumber: 19\n              }, this)), changeHistory.length > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"change-more\",\n                children: [\"... and \", changeHistory.length - 10, \" more changes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2416,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2402,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2395,\n            columnNumber: 13\n          }, this), showXMLModal && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"xml-modal-overlay\",\n            onClick: closeXMLModal,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"xml-modal\",\n              onClick: e => e.stopPropagation(),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-modal-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"\\uD83D\\uDCC4 Generated XML Output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2429,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"xml-modal-close\",\n                  onClick: closeXMLModal,\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2430,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2428,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-modal-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"xml-output-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                    className: \"xml-code\",\n                    children: xmlOutput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2434,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2433,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2432,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-modal-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn copy-btn\",\n                  onClick: copyXMLToClipboard,\n                  children: \"\\uD83D\\uDCCB Copy XML\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2438,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn download-btn\",\n                  onClick: downloadXML,\n                  children: \"\\uD83D\\uDCE5 Download XML\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2441,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn close-btn\",\n                  onClick: closeXMLModal,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2444,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2437,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2427,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2426,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2127,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2126,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1926,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notification-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1925,\n    columnNumber: 5\n  }, this);\n}\n_s9(PurchaseOrderForm, \"I3/JLz4paCfMUcvIxGdGY2DFGYY=\", false, function () {\n  return [useDragAndDropSensors, useVendorFieldsDragEnd, useShipToFieldsDragEnd, useAIProvider];\n});\n_c4 = PurchaseOrderForm;\nexport default PurchaseOrderForm;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"DraggableSectionWrapper\");\n$RefreshReg$(_c2, \"SortableShippingColumnHeader\");\n$RefreshReg$(_c3, \"DraggableSectionHeader\");\n$RefreshReg$(_c4, \"PurchaseOrderForm\");","map":{"version":3,"names":["React","useState","useEffect","HeaderColorPicker","generatePurchaseOrderXML","Section1CompanyInfo","Section2PurchaseOrder","Section3Vendor","Section4ShipTo","useAIProvider","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","useDraggable","useDroppable","SortableContext","verticalListSortingStrategy","horizontalListSortingStrategy","useSortable","CSS","arrayMove","jsxDEV","_jsxDEV","DraggableSectionWrapper","children","id","sectionNumber","isSectionHandleDragging","showDragHandle","_s","attributes","listeners","setNodeRef","transform","transition","isDragging","data","type","getSectionClass","sectionNum","style","Transform","toString","opacity","zIndex","cursor","position","width","height","border","borderRadius","backgroundColor","ref","className","top","left","fontSize","color","padding","fileName","_jsxFileName","lineNumber","columnNumber","right","display","alignItems","justifyContent","_c","SortableShippingColumnHeader","_s2","userSelect","_c2","DraggableSectionHeader","_s3","title","_c3","PurchaseOrderForm","_s9","_s4","$RefreshSig$","_s5","_s6","_s7","_s8","companyFields","setCompanyFields","label","placeholder","value","console","log","map","f","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","availableFields","category","fields","sidebarVisible","setSidebarVisible","toggleSidebar","generateUniqueFieldId","baseLabel","existingIds","slugBase","String","toLowerCase","replace","candidate","counter","includes","PaletteDraggable","source","x","y","undefined","onClick","e","stopPropagation","showNotification","DroppableZone","isOver","VendorShipToDroppableInline","handlePaletteDragEnd","event","_active$data","active","over","current","newField","handleAddCompanyField","purchaseOrderFields","handleAddPurchaseOrderField","vendorFields","handleAddVendorField","shipToFields","handleAddShipToField","setPurchaseOrderFields","isTitle","setVendorFields","setShipToFields","totalsFields","setTotalsFields","isCalculated","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","prevFields","logChange","handleRemoveCompanyField","fieldId","fieldToRemove","find","field","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","changeType","oldValue","newValue","section","change","now","timestamp","prev","slice","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","togglePreviewMode","clearChangeHistory","showXMLModal","setShowXMLModal","xmlOutput","setXmlOutput","displayXMLOutput","xml","closeXMLModal","copyXMLToClipboard","navigator","clipboard","writeText","then","catch","downloadXML","_purchaseOrderFields$","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","getFieldSuggestions","applySuggestionsToFields","suggestionsMap","Array","isArray","newVal","handleAIFill","payload","context","shippingFields","suggestions","debug","Object","keys","company","name","phone","po","date","number","shipping","requisitioner","shipVia","totals","subtotal","tax","total","line1","item","itemNumber1","desc","description1","qty","qty1","rate","rate1","amount","amount1","next","before","fromEntries","after","forEach","from","to","sourceKey","write","el","val","textContent","shipSelectors","key","shipOrder","idx","used","sel","querySelector","nth","selA","selB","count","querySelectorAll","length","selector","fieldsInDOM","setCell","row","col","cell","li","i","k","other","domTotals","calcTotal","calcSub","commentsEl","contactEl","comments","contactInfo","error","message","exportToXML","capturedData","captureFieldValues","headerSections","visualSections1And2","sections1And2ForExport","sections1And2Order","vendorShipToSections","visualSections3And4","sections3And4ForExport","vendorShipToSectionOrder","getText","_document$querySelect","_document$querySelect2","trim","normalizedLineItems","lineItems","itemNumber","description","quantity","unitPrice","exportData","sectionOrder","sections1And2","sections3And4","sections5And6","sections5And6Order","sections3And4And5And6","vendorShipToAndShippingDetailsOrder","sections8And9","commentsTotalsSectionOrder","lineItemColumns","lineItemColumnOrder","shippingColumns","shippingColumnOrder","fieldOrder","companyFieldOrder","purchaseOrder","purchaseOrderFieldOrder","vendor","shipTo","fob","shippingTerms","existingNotification","remove","notification","innerHTML","container","getElementById","setTimeout","parentElement","getFormStats","totalFields","totalChanges","Math","max","getTime","handleCompanyDragEnd","setCompanyFieldOrder","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","logFieldSummary","toLocaleString","handleRemovePurchaseOrderField","handleRemoveVendorField","handleVendorFieldLabelChange","handleRemoveShipToField","handleShipToFieldLabelChange","handlePurchaseOrderDragEnd","setPurchaseOrderFieldOrder","setVendorShipToSectionOrder","setSections1And2Order","setSections5And6Order","setVendorShipToAndShippingDetailsOrder","setLineItemColumnOrder","setShippingColumnOrder","setCommentsTotalsSectionOrder","handleDragStart","_active$data2","activeData","updateDebugPanel","element","setAttribute","handleDragOver","targetElement","handleSectionDragEnd","_active$data3","_over$data","activeId","overId","overData","section1Element","section2Element","removeAttribute","handleSections5And6DragEnd","handleLineItemColumnDragEnd","items","handleShippingColumnDragEnd","handleCommentsTotalsDragEnd","handleVendorShipToSectionDragEnd","handleVendorShipToAndShippingDetailsDragEnd","handleSwapSections","companyFieldValues","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSwapVendorShipTo","vendorFieldValues","shipToFieldValues","reverse","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","capturedLineItems","rowIndex","rowData","columnId","cellSelector","push","updatedTotalsFields","handleRootDragEnd","_active$data4","_active$data4$current","setIsSectionHandleDragging","startsWith","dragCount","setDragCount","lastDragEvent","setLastDragEvent","eventType","details","lastDragEventElement","dragCountElement","collisionDetection","onDragStart","onDragOver","onDragEnd","onDragCancel","onDragMove","hasDragStart","hasDragOver","hasDragEnd","categoryIndex","fieldIndex","gap","marginTop","fontFamily","maxWidth","boxShadow","margin","marginBottom","JSON","stringify","join","marginLeft","mockEvent","draggable","dataTransfer","setData","preventDefault","onDrop","strategy","sections1And2OrderType","sections1And2OrderLength","itemsArray","itemsValid","itemsContent","strategyValid","sectionId","index","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","innerSectionId","onVendorDragEnd","onAddVendorField","onRemoveVendorField","onShipToDragEnd","onAddShipToField","onRemoveShipToField","contentEditable","columnConfig","colSpan","config","flex","toLocaleTimeString","_c4","$RefreshReg$"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport './section-styles.css';\nimport './sections-3-4-styles.css';\nimport './header-colors.css';\nimport './header-color-picker.css';\nimport HeaderColorPicker from './components/HeaderColorPicker';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3Vendor from './components/Section3Vendor';\nimport Section4ShipTo from './components/Section4ShipTo';\nimport { useAIProvider } from './hooks/useAIProvider';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter, useDraggable, useDroppable } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n\n// Draggable Section Wrapper Component for Sections\nfunction DraggableSectionWrapper({ children, id, sectionNumber, isSectionHandleDragging = false, showDragHandle = true }) {\n\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({ \n    id, \n    data: {\n      type: 'section',\n      sectionNumber: sectionNumber\n    }\n  });\n\n  // Map section numbers to proper CSS classes\n  const getSectionClass = (sectionNum) => {\n    switch(sectionNum) {\n      case 1:\n        return 'section-1-company-info';\n      case 2:\n        return 'section-2-purchase-order';\n      default:\n        return `section-${sectionNum}`;\n    }\n  };\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.6 : 1,\n    zIndex: isDragging ? 1000 : 1,\n    cursor: isDragging ? 'grabbing' : 'grab',\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    border: isDragging ? '3px solid #ff6b6b' : '2px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: isDragging ? 'rgba(255, 107, 107, 0.1)' : 'transparent'\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className={`sortable-section ${getSectionClass(sectionNumber)} ${isDragging ? 'dragging' : ''}`}\n      data-section={sectionNumber}\n      data-testid={`draggable-section-${id}`}\n      data-dragging={isDragging}\n      {...attributes} \n      {...listeners}\n    >\n      {/* Debug Info - Only show when dragging */}\n      {isDragging && (\n        <div className=\"debug-info\" style={{\n          position: 'absolute',\n          top: '5px',\n          left: '5px',\n          fontSize: '10px',\n          color: '#666',\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          padding: '2px 4px',\n          borderRadius: '3px',\n          zIndex: 1001\n        }}>\n          {id} | Dragging...\n        </div>\n      )}\n      \n      {/* Visual Drag Handle */}\n      <div className=\"section-drag-handle\" style={{\n        position: 'absolute',\n        top: '5px',\n        right: '5px',\n        width: '20px',\n        height: '20px',\n        backgroundColor: isDragging ? '#ff6b6b' : '#7c3aed',\n        color: 'white',\n        borderRadius: '50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '12px',\n        cursor: 'grab',\n        zIndex: 1001,\n        opacity: 0.8\n      }}>\n        ⋮⋮\n      </div>\n      \n      <div \n        className=\"section-content\"\n        style={{ position: 'relative', width: '100%', height: '100%' }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\n\n\n// Sortable shipping column header component for shipping details\nfunction SortableShippingColumnHeader({ children, id }) {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\n  \n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      {...attributes} \n      {...listeners}\n      className={`sortable-column-header ${isDragging ? 'dragging' : ''}`}\n    >\n      {children}\n    </div>\n  );\n}\n\n// Draggable Section Header Component for Comments and Totals\nfunction DraggableSectionHeader({ children, id }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className=\"section-header\"\n      {...attributes} \n      {...listeners} \n      title=\"Drag to reorder sections\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: '' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: '' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: '' }\n  ]);\n\n  // Debug: Log company fields state changes\n  useEffect(() => {\n    console.log('🔄 Company fields state updated:', companyFields.map(f => ({ id: f.id, label: f.label })));\n  }, [companyFields]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // ============================================================================\n  // FIELD LIST COMPONENT\n  // ============================================================================\n  \n  // Hardcoded list of fields that are not currently on the form\n  const availableFields = [\n    // Company Information Fields\n    { category: 'Company Information', fields: [\n      'Tax ID Number',\n      'DUNS Number',\n      'Business License',\n      'Industry Classification',\n      'Year Established',\n      'Employee Count',\n      'Annual Revenue',\n      'Parent Company',\n      'Subsidiaries',\n      'Business Type (LLC, Corp, etc.)'\n    ]},\n    // Purchase Order Fields\n    { category: 'Purchase Order Details', fields: [\n      'Delivery Date',\n      'Payment Terms',\n      'Currency',\n      'Purchase Order Type',\n      'Priority Level',\n      'Department',\n      'Project Code',\n      'Cost Center',\n      'Approval Status',\n      'Approved By'\n    ]},\n    // Vendor Fields\n    { category: 'Vendor Information', fields: [\n      'Vendor Tax ID',\n      'Vendor DUNS',\n      'Vendor Rating',\n      'Payment History',\n      'Contract Terms',\n      'Insurance Certificate',\n      'Bond Information',\n      'Quality Rating',\n      'Delivery Performance',\n      'Warranty Terms'\n    ]},\n    // Shipping Fields\n    { category: 'Shipping & Delivery', fields: [\n      'Expected Delivery',\n      'Carrier Information',\n      'Tracking Number',\n      'Delivery Instructions',\n      'Special Handling',\n      'Packaging Requirements',\n      'Delivery Confirmation',\n      'Return Policy',\n      'Damage Claims',\n      'Freight Class'\n    ]},\n    // Financial Fields\n    { category: 'Financial Details', fields: [\n      'Discount Percentage',\n      'Early Payment Discount',\n      'Late Payment Penalty',\n      'Installment Terms',\n      'Security Deposit',\n      'Performance Bond',\n      'Liquidated Damages',\n      'Retention Amount',\n      'Change Order Process',\n      'Budget Approval'\n    ]},\n    // Compliance Fields\n    { category: 'Compliance & Legal', fields: [\n      'Regulatory Compliance',\n      'Safety Requirements',\n      'Environmental Standards',\n      'Quality Certifications',\n      'Audit Requirements',\n      'Documentation Standards',\n      'Record Retention',\n      'Confidentiality Terms',\n      'Non-Compete Clauses',\n      'Dispute Resolution'\n    ]}\n  ];\n\n  // State for sidebar visibility on mobile\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n\n  // Toggle sidebar visibility\n  const toggleSidebar = () => {\n    setSidebarVisible(!sidebarVisible);\n  };\n\n  // Helper: slugify and ensure unique id for new fields\n  const generateUniqueFieldId = (baseLabel, existingIds) => {\n    const slugBase = String(baseLabel)\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n    let candidate = slugBase || 'field';\n    let counter = 1;\n    while (existingIds.includes(candidate)) {\n      candidate = `${slugBase}-${counter++}`;\n    }\n    return candidate;\n  };\n\n  // dnd-kit: palette draggable item\n  const PaletteDraggable = ({ label, category }) => {\n    const id = `palette-${category}-${label}`;\n    const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({\n      id,\n      data: { source: 'palette', label, category }\n    });\n    const style = {\n      transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n      cursor: 'grab',\n      opacity: isDragging ? 0.6 : 1\n    };\n    return (\n      <li ref={setNodeRef} style={style} className=\"field-item\" {...attributes} {...listeners}>\n        <span className=\"field-name\">{label}</span>\n        <button className=\"add-field-btn\" title={`Add ${label} to form`} onClick={(e) => { e.stopPropagation(); showNotification(`➕ ${label} field added to form`, 'info'); }}>+\n        </button>\n      </li>\n    );\n  };\n\n  // dnd-kit: droppable wrapper for sections\n  const DroppableZone = ({ id, children }) => {\n    const { isOver, setNodeRef } = useDroppable({ id });\n    return (\n      <div ref={setNodeRef} className={`droppable-zone ${isOver ? 'droppable-over' : ''}`}>\n        {children}\n      </div>\n    );\n  };\n\n  // Special droppable component for Vendor/Ship To sections\n  const VendorShipToDroppableInline = ({ id, children }) => {\n    const { isOver, setNodeRef } = useDroppable({ id });\n    console.log(`🎯 Droppable zone ${id} registered, isOver: ${isOver}`);\n    \n    return (\n      <div \n        ref={setNodeRef} \n        className={`droppable-zone ${isOver ? 'droppable-over' : ''}`}\n        style={{ \n          padding: '10px', \n          position: 'relative',\n          border: '3px solid green',\n          backgroundColor: isOver ? 'rgba(0, 255, 0, 0.1)' : 'rgba(0, 255, 0, 0.05)'\n        }}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  // Handle palette drag end to add fields to target sections\n  const handlePaletteDragEnd = (event) => {\n    const { active, over } = event;\n    console.log('🎯 Palette drag end:', { active, over });\n    \n    if (!active?.data?.current || !over?.id) {\n      console.log('❌ Missing active data or over id');\n      return;\n    }\n    const data = active.data.current;\n    if (data.source !== 'palette') {\n      console.log('❌ Not a palette source:', data.source);\n      return;\n    }\n\n    const baseLabel = data.label;\n    console.log('🎯 Dropping on zone:', over.id);\n    \n    if (over.id === 'drop-company') {\n      console.log('✅ Adding to company section');\n      const existingIds = companyFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddCompanyField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Company Info`, 'success');\n    } else if (over.id === 'drop-po') {\n      console.log('✅ Adding to purchase order section');\n      const existingIds = purchaseOrderFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddPurchaseOrderField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Purchase Order`, 'success');\n    } else if (over.id === 'drop-vendor') {\n      console.log('✅ Adding to vendor section');\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddVendorField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else if (over.id === 'drop-ship-to') {\n      console.log('✅ Adding to ship-to section');\n      const existingIds = shipToFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddShipToField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Ship-To section`, 'success');\n\n    } else if (over.id === 'drop-zone-vendor-ship-to') {\n      console.log('✅ Adding to vendor section (legacy)');\n      // Legacy support - add to vendor section by default\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddVendorField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else if (over.id === 'drop-vendor-ship-to') {\n      console.log('✅ Adding to vendor section (legacy)');\n      // Legacy support - add to vendor section by default  \n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddVendorField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else {\n      console.log('❌ Unknown drop zone:', over.id);\n    }\n  };\n\n\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: '' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: '' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: '' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: '' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: '' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([\n    { id: 'subtotal', label: 'SUBTOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true },\n    { id: 'tax', label: 'TAX:', placeholder: '$0.00', value: '' },\n    { id: 'shipping', label: 'SHIPPING:', placeholder: '$0.00', value: '' },\n    { id: 'other', label: 'OTHER:', placeholder: '$0.00', value: '' },\n    { id: 'total', label: 'TOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true }\n  ]);\n\n\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChange('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      showNotification(`🗑️ Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'vendor') {\n      const field = vendorFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'ship-to') {\n      const field = shipToFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n  \n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n  \n  \n  // Function to display XML output in a modal\n  const displayXMLOutput = (xml) => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n  \n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n  \n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n  \n  // Function to download XML file\n  const downloadXML = () => {\n    const blob = new Blob([xmlOutput], { type: 'application/xml' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${purchaseOrderFields.find(f => f.id === 'po-number')?.value || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // =========================================================================\n  // AI SUGGESTIONS\n  // =========================================================================\n  const { getFieldSuggestions } = useAIProvider();\n\n  const applySuggestionsToFields = (suggestionsMap, fields) => {\n    if (!Array.isArray(fields)) return fields;\n    return fields.map(f => {\n      const newVal = suggestionsMap?.[f.id];\n      if (typeof newVal === 'string') {\n        return { ...f, value: newVal };\n      }\n      return f;\n    });\n  };\n\n  const handleAIFill = async () => {\n    try {\n      showNotification('🤖 Fetching AI suggestions...', 'info');\n\n      const payload = {\n        context: 'purchase_order',\n        companyFields,\n        purchaseOrderFields,\n        vendorFields,\n        shipToFields,\n        shippingFields: [\n          { id: 'requisitioner', label: 'Requisitioner name' },\n          { id: 'shipVia', label: 'Shipping method' },\n          { id: 'fob', label: 'FOB terms' },\n          { id: 'shippingTerms', label: 'Shipping terms' }\n        ]\n      };\n\n      const { suggestions } = await getFieldSuggestions(payload);\n      try {\n        console.debug('🧪 AI suggestions keys:', Object.keys(suggestions || {}));\n        // Preview a few critical values to verify mapping\n        console.debug('🧪 AI preview:', {\n          company: {\n            name: suggestions?.['company-name'],\n            phone: suggestions?.['company-phone']\n          },\n          po: {\n            date: suggestions?.['po-date'],\n            number: suggestions?.['po-number']\n          },\n          shipping: {\n            requisitioner: suggestions?.requisitioner,\n            shipVia: suggestions?.shipVia\n          },\n          totals: {\n            subtotal: suggestions?.subtotal,\n            tax: suggestions?.tax,\n            total: suggestions?.total\n          },\n          line1: {\n            item: suggestions?.itemNumber1,\n            desc: suggestions?.description1,\n            qty: suggestions?.qty1,\n            rate: suggestions?.rate1,\n            amount: suggestions?.amount1\n          }\n        });\n      } catch {}\n\n      // 1) Apply to Section 1–3 states (company/po/vendor/ship-to) with mapping logs\n      setCompanyFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(companyFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setPurchaseOrderFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(purchaseOrderFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setVendorFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(vendorFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setShipToFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(shipToFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // 2) Shipping details (DOM spans)\n      const write = (el, val) => { if (el && typeof val === 'string') el.textContent = val; };\n\n      const shipSelectors = (key) => [\n        `.shipping-details [data-field=\"${key}\"] .editable-field`,\n        `.shipping-field[data-field=\"${key}\"] .editable-field`,\n        `#shipping-${key}`,\n        `.shipping-field-${key} .editable-field`\n      ];\n\n      const shipOrder = ['requisitioner','shipVia','fob','shippingTerms'];\n      shipOrder.forEach((key, idx) => {\n        let el = null, used = '';\n        for (const sel of shipSelectors(key)) {\n          el = document.querySelector(sel);\n          if (el) { used = sel; break; }\n        }\n        // Fallback to positional selector used in your JSX\n        if (!el) {\n          const nth = idx + 1; // 1-based\n          // Prefer :nth-of-type within container to ignore headers\n          const selA = `.shipping-details .shipping-field:nth-of-type(${nth}) .editable-field`;\n          el = document.querySelector(selA);\n          if (el) {\n            used = selA;\n          } else {\n            // Last resort: original child-based selector\n            const selB = `.shipping-field:nth-child(${nth}) .editable-field`;\n            el = document.querySelector(selB);\n            if (el) used = selB;\n          }\n        }\n        write(el, suggestions[key]);\n        try {\n          const count = document.querySelectorAll('.shipping-details .shipping-field').length;\n          console.debug('🧭 map(shippingDetails):', { key, selector: used || '(not found)', value: suggestions[key], fieldsInDOM: count });\n        } catch {}\n      });\n\n      // 3) Line items (first 3 rows only)\n      // Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\n      const setCell = (row, col, val) => {\n        const selector = `.itemtable tbody tr:nth-child(${row}) td[data-column=\"${col}\"] .editable-field`;\n        const cell = document.querySelector(selector);\n        if (cell && typeof val === 'string') {\n          cell.textContent = val;\n        }\n        try { console.debug('🧭 map(lineItem):', { row, col, selector, value: val }); } catch {}\n      };\n\n      const li = (i, k) => suggestions?.[`${k}${i}`];\n\n      for (let i = 1; i <= 3; i++) {\n        setCell(i, 'itemNumber', li(i, 'itemNumber'));\n        setCell(i, 'description', li(i, 'description'));\n        setCell(i, 'qty', li(i, 'qty'));\n        setCell(i, 'rate', li(i, 'rate'));\n        setCell(i, 'amount', li(i, 'amount'));\n      }\n\n      // 4) Totals (state + DOM)\n      setTotalsFields(prev => {\n        const map = {\n          subtotal: suggestions.subtotal,\n          tax: suggestions.tax,\n          shipping: suggestions.shipping,\n          other: suggestions.other,\n          total: suggestions.total,\n        };\n        const next = prev.map(f => (map[f.id] ? { ...f, value: map[f.id] } : f));\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && map[id] !== undefined) {\n              console.debug('🧭 map(totalsFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // Write editable totals into DOM for non-calculated rows\n      const domTotals = (field) => document.querySelector(`.totals-section .total-row[data-field=\"${field}\"] .editable-field`);\n      ['tax','shipping','other'].forEach(key => {\n        const sel = `.totals-section .total-row[data-field=\"${key}\"] .editable-field`;\n        write(domTotals(key), suggestions[key]);\n        try { console.debug('🧭 map(totalsDOM):', { key, selector: sel, value: suggestions[key] }); } catch {}\n      });\n\n      // Calculated-looking spans (subtotal, total) in your layout use .calculated-field\n      const calcTotal = document.querySelector(`.totals-section .total-row[data-field=\"total\"] .total-field`);\n      const calcSub   = document.querySelector(`.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`);\n      write(calcSub, suggestions.subtotal);\n      write(calcTotal, suggestions.total);\n      try {\n        console.debug('🧭 map(totalsDOM):', { key: 'subtotal', selector: `.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`, value: suggestions.subtotal });\n        console.debug('🧭 map(totalsDOM):', { key: 'total', selector: `.totals-section .total-row[data-field=\"total\"] .total-field`, value: suggestions.total });\n      } catch {}\n\n      // 5) Comments, Contact Info (DOM)\n      const commentsEl = document.querySelector('.comments-content .editable-field');\n      const contactEl  = document.querySelector('.contact-section .editable-field');\n      write(commentsEl, suggestions.comments);\n      write(contactEl, suggestions.contactInfo);\n      try {\n        console.debug('🧭 map(comments):', { selector: '.comments-content .editable-field', value: suggestions.comments });\n        console.debug('🧭 map(contactInfo):', { selector: '.contact-section .editable-field', value: suggestions.contactInfo });\n      } catch {}\n\n      // 6) Bump timestamps\n      updateCompanyFieldsTimestamp();\n      updatePurchaseOrderFieldsTimestamp();\n\n      showNotification('✅ AI suggestions applied', 'success');\n    } catch (e) {\n      console.error('AI fill failed:', e);\n      showNotification(`❌ AI fill failed: ${e.message}`, 'error');\n    }\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n  \n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('📄 Starting XML generation...');\n      \n      // Capture current field values first\n      const capturedData = captureFieldValues();\n      \n      // Prepare data for XML generation\n      // Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\n      const headerSections = Array.from(document.querySelectorAll('.header-section .sortable-section'));\n      const visualSections1And2 = headerSections\n        .map(el => el.id)\n        .filter(id => id === 'section1' || id === 'section2');\n      const sections1And2ForExport = (visualSections1And2.length === 2) ? visualSections1And2 : sections1And2Order;\n      \n      // Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\n      const vendorShipToSections = Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));\n      const visualSections3And4 = vendorShipToSections\n        .map(el => el.id)\n        .filter(id => id === 'section3' || id === 'section4');\n      const sections3And4ForExport = (visualSections3And4.length === 2) ? visualSections3And4 : vendorShipToSectionOrder;\n      \n      // Helpers for DOM reads\n      const getText = (sel) => document.querySelector(sel)?.textContent?.trim() || '';\n      \n      // Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\n      const normalizedLineItems = (capturedData.lineItems || []).map(row => ({\n        // original UI keys\n        itemNumber: row.itemNumber || '',\n        description: row.description || '',\n        qty: row.qty || row.quantity || '',\n        rate: row.rate || row.unitPrice || '',\n        amount: row.amount || row.total || '',\n        // template-expected keys\n        quantity: row.quantity || row.qty || '',\n        unitPrice: row.unitPrice || row.rate || '',\n        total: row.total || row.amount || ''\n      }));\n\n      const exportData = {\n        ...capturedData,\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2ForExport, // Use current visual order to ensure XML matches UI\n          sections3And4: sections3And4ForExport, // Use current visual order to ensure XML matches UI\n          sections5And6: sections5And6Order, // Use actual state for sections 5&6\n          sections3And4And5And6: vendorShipToAndShippingDetailsOrder, // Vendor-ShipTo and Shipping Details order\n          sections8And9: commentsTotalsSectionOrder, // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder, // Use actual state for line item columns\n          shippingColumns: shippingColumnOrder // Use actual state for shipping columns\n        },\n        // CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\n        fieldOrder: {\n          company: companyFieldOrder, // Preserve company field order independently of section position\n          purchaseOrder: purchaseOrderFieldOrder, // Preserve PO field order independently of section position\n          vendor: vendorFields.map(f => f.id), // Vendor field order\n          shipTo: shipToFields.map(f => f.id) // Ship-to field order\n        },\n        // Add normalized line items (support both key schemes)\n        lineItems: normalizedLineItems,\n        // Shipping details (prefer data-field; fall back handled in XML builder too)\n        requisitioner: getText('.shipping-details [data-field=\"requisitioner\"] .editable-field'),\n        shipVia: getText('.shipping-details [data-field=\"shipVia\"] .editable-field'),\n        fob: getText('.shipping-details [data-field=\"fob\"] .editable-field'),\n        shippingTerms: getText('.shipping-details [data-field=\"shippingTerms\"] .editable-field'),\n        // Totals: read what the user sees\n        subtotal: getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field') || '$0.00',\n        tax: getText('.totals-section .total-row[data-field=\"tax\"] .editable-field') || '$0.00',\n        shipping: getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field') || '$0.00',\n        other: getText('.totals-section .total-row[data-field=\"other\"] .editable-field') || '$0.00',\n        total: getText('.totals-section .total-row[data-field=\"total\"] .total-field') || '$0.00',\n        comments: getText('.comments-content .editable-field'),\n        contactInfo: getText('.contact-section .editable-field')\n      };\n      \n      console.debug('🔎 Export DOM reads:', {\n        requisitioner: exportData.requisitioner,\n        shipVia: exportData.shipVia,\n        fob: exportData.fob,\n        shippingTerms: exportData.shippingTerms,\n        subtotal: exportData.subtotal,\n        tax: exportData.tax,\n        shipping: exportData.shipping,\n        other: exportData.other,\n        total: exportData.total\n      });\n\n      console.log('📄 Export data prepared:', exportData);\n      console.log('🔀 Section order being sent to XML:', exportData.sectionOrder);\n      console.log('🔀 Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('🔀 Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('🔀 Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n      console.log('🔀 Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('🔀 Shipping columns order:', exportData.sectionOrder.shippingColumns);\n      console.log('🔀 Line items data:', exportData.lineItems);\n      \n      // CRITICAL: Log field order information\n      console.log('🔀 Field order being sent to XML:', exportData.fieldOrder);\n      console.log('🔀 Company field order:', exportData.fieldOrder.company);\n      console.log('🔀 Purchase order field order:', exportData.fieldOrder.purchaseOrder);\n      console.log('🔀 Vendor field order:', exportData.fieldOrder.vendor);\n      console.log('🔀 Ship-to field order:', exportData.fieldOrder.shipTo);\n      \n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n      \n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n      \n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      \n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n      \n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n\n\n\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add to notification container\n    const container = document.getElementById('notification-container');\n    if (container) {\n      container.appendChild(notification);\n    } else {\n      // Fallback to body if container not found\n      document.body.appendChild(notification);\n    }\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setCompanyFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('🔄 Company field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('🔄 Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed purchase order field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // VENDOR FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Add new vendor field\n  const handleAddVendorField = (newField) => {\n    setVendorFields(prevFields => [...prevFields, newField]);\n    console.log('➕ Added new vendor field:', newField);\n    showNotification(`➕ Added vendor field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove vendor field\n  const handleRemoveVendorField = (fieldId) => {\n    setVendorFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed vendor field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('🗑️ Removed vendor field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle vendor field label changes\n  const handleVendorFieldLabelChange = (fieldId, newLabel) => {\n    setVendorFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'vendor');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n  };\n\n  // ============================================================================\n  // SHIP-TO FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Add new ship-to field\n  const handleAddShipToField = (newField) => {\n    setShipToFields(prevFields => [...prevFields, newField]);\n    console.log('➕ Added new ship-to field:', newField);\n    showNotification(`➕ Added ship-to field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove ship-to field\n  const handleRemoveShipToField = (fieldId) => {\n    setShipToFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed ship-to field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('🗑️ Removed ship-to field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle ship-to field label changes\n  const handleShipToFieldLabelChange = (fieldId, newLabel) => {\n    setShipToFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'ship-to');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setPurchaseOrderFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('🔄 Purchase order field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('🔄 Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for vendor/ship-to section order\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n  \n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n  \n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5', 'section6']);\n  \n  // State for vendor-ship-to and shipping-details sections order\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['sections3And4', 'sections5And6']);\n  \n  // CRITICAL: Add field order state management (same pattern as section order)\n  // State for company field order (preserves drag-and-drop order independently of section position)\n  const [companyFieldOrder, setCompanyFieldOrder] = useState([]);\n  \n  // State for purchase order field order (preserves drag-and-drop order independently of section position)\n  const [purchaseOrderFieldOrder, setPurchaseOrderFieldOrder] = useState([]);\n  \n  // Initialize field order states with current field IDs\n  React.useEffect(() => {\n    setCompanyFieldOrder(companyFields.map(field => field.id));\n  }, [companyFields]);\n  \n  React.useEffect(() => {\n    setPurchaseOrderFieldOrder(purchaseOrderFields.map(field => field.id));\n  }, [purchaseOrderFields]);\n  \n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState([\n    'itemNumber',\n    'description', \n    'qty',\n    'rate',\n    'amount'\n  ]);\n  \n  // Shipping column order state\n  const [shippingColumnOrder, setShippingColumnOrder] = useState([\n    'requisitioner',\n    'shipVia',\n    'fob',\n    'shippingTerms'\n  ]);\n  \n  // Log line item column order changes\n  useEffect(() => {\n    console.log('🔀 Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n  \n  // Log shipping column order changes\n  useEffect(() => {\n    console.log('🚢 Shipping column order updated:', shippingColumnOrder);\n  }, [shippingColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle drag start\n  const handleDragStart = (event) => {\n    const { active } = event;\n    console.log('🚀 DRAG START:', { \n      active: active.id, \n      activeData: active?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n    updateDebugPanel('DRAG START', active.id);\n    \n    // Add dragging state to the dragged element\n    if (active.id === 'section1' || active.id === 'section2') {\n      const element = document.getElementById(active.id);\n      if (element) {\n        element.setAttribute('data-is-dragging', 'true');\n        console.log('✅ Added dragging state to:', active.id);\n        \n        // Add visual feedback\n        element.style.border = '3px solid #ff6b6b';\n        element.style.backgroundColor = 'rgba(255, 107, 107, 0.1)';\n      }\n    }\n  };\n\n  // Function to handle drag over\n  const handleDragOver = (event) => {\n    const { active, over } = event;\n    \n    if (active.id === 'section1' || active.id === 'section2') {\n      if (over && (over.id === 'section1' || over.id === 'section2')) {\n        console.log('🎯 DRAG OVER:', { \n          active: active.id, \n          over: over.id,\n          timestamp: new Date().toISOString()\n        });\n        \n        updateDebugPanel('DRAG OVER', `${active.id} → ${over.id}`);\n        \n        // Add over state to the target element\n        const targetElement = document.getElementById(over.id);\n        if (targetElement) {\n          targetElement.setAttribute('data-is-over', 'true');\n          \n          // Add visual feedback for drop target\n          targetElement.style.border = '3px solid #4ecdc4';\n          targetElement.style.backgroundColor = 'rgba(78, 205, 196, 0.1)';\n        }\n      }\n    }\n  };\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SECTION DRAG DEBUG - Event received:', { \n      activeId: active?.id, \n      overId: over?.id,\n      activeData: active?.data?.current,\n      overData: over?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n    updateDebugPanel('DRAG END', `${active?.id} → ${over?.id}`);\n    \n    if (!active || !over) {\n      console.log('❌ Missing active or over in section drag');\n      return;\n    }\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', { active: active.id, over: over.id });\n      \n      setSections1And2Order((prevOrder) => {\n        console.log('🔄 Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        if (oldIndex === -1 || newIndex === -1) {\n          console.log('❌ Invalid indices found');\n          return prevOrder;\n        }\n        \n        const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\n        \n        console.log('🔄 New section order:', newOrder);\n        console.log('✅ Section swap successful!');\n        \n        showNotification('🔄 Sections swapped successfully!', 'success');\n        console.log('✅ Sections swapped via drag & drop!');\n        \n        return newOrder;\n      });\n      \n      // Clean up data attributes and visual feedback\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    } else {\n      console.log('🔍 No section swap - same position');\n      \n      // Clean up data attributes and visual feedback even if no swap\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', { active: active.id, over: over.id });\n      \n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New sections 5&6 order:', newOrder);\n        \n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Line item column swap detected!', { active: active.id, over: over.id });\n      \n      setLineItemColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('🔄 Previous line item column order:', items);\n        console.log('🔀 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('🔄 New line item column order:', newOrder);\n        showNotification('🔄 Line item columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No line item column swap - same position');\n    }\n  };\n\n  // Handle shipping column drag end\n  const handleShippingColumnDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SHIPPING COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Shipping column swap detected!', { active: active.id, over: over.id });\n      \n      setShippingColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('🔄 Previous shipping column order:', items);\n        console.log('🔀 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('🔄 New shipping column order:', newOrder);\n        showNotification('🚢 Shipping columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No shipping column swap - same position');\n    }\n  };\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor/ship-to order:', newOrder);\n        \n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('🔄 Previous vendor-shipTo + shipping details order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor-shipTo + shipping details order:', newOrder);\n        \n        showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n              showNotification('🔄 Sections swapped!', 'info');\n    \n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n    };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n    \n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n    \n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n    \n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    \n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    \n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n    \n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n    \n    // Capture company field values - PRESERVE CURRENT ORDER\n    console.log('🔍 DEBUG: Current company fields order before capture:', companyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    console.log('🔍 DEBUG: Updated company fields order after capture:', updatedCompanyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('📝 Line items captured:', capturedLineItems);\n    \n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n      \n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      \n      console.log(`📝 Totals field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    \n    console.log('📝 Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n\n  // Unified drag end dispatcher for a single top-level DndContext\n  const handleRootDragEnd = (event) => {\n    const { active } = event;\n    const activeId = active?.id || '';\n    const source = active?.data?.current?.source;\n\n    // Reset section handle dragging state\n    setIsSectionHandleDragging(false);\n\n    if (source === 'palette') {\n      handlePaletteDragEnd(event);\n      return;\n    }\n\n    // Sections 1 & 2 swap\n    if (activeId === 'section1' || activeId === 'section2') {\n      handleSectionDragEnd(event);\n      return;\n    }\n    // Vendor-ShipTo + ShippingDetails container swap\n    if (activeId === 'sections3And4' || activeId === 'sections5And6') {\n      handleVendorShipToAndShippingDetailsDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To section reordering\n    if (activeId === 'section3' || activeId === 'section4') {\n      handleVendorShipToSectionDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To individual field drags\n    if (String(activeId).startsWith('vendor-')) {\n      handleVendorDragEnd(event);\n      return;\n    }\n    if (String(activeId).startsWith('ship-to-')) {\n      handleShipToDragEnd(event);\n      return;\n    }\n    // Line item column reorder\n    if (['itemNumber','description','qty','rate','amount'].includes(activeId)) {\n      handleLineItemColumnDragEnd(event);\n      return;\n    }\n    // Comments & totals sections reorder\n    if (activeId === 'section8' || activeId === 'section9') {\n      handleCommentsTotalsDragEnd(event);\n      return;\n    }\n  };\n\n\n\n  // State for tracking section handle drag operations (simplified)\n  const [isSectionHandleDragging, setIsSectionHandleDragging] = useState(false);\n  \n  // Debug state\n  const [dragCount, setDragCount] = useState(0);\n  const [lastDragEvent, setLastDragEvent] = useState('None');\n\n  // Function to update debug panel\n  const updateDebugPanel = (eventType, details) => {\n    setLastDragEvent(`${eventType}: ${details}`);\n    setDragCount(prev => prev + 1);\n    \n    // Update DOM elements for real-time display\n    const lastDragEventElement = document.getElementById('last-drag-event');\n    const dragCountElement = document.getElementById('drag-count');\n    \n    if (lastDragEventElement) {\n      lastDragEventElement.textContent = `${eventType}: ${details}`;\n    }\n    if (dragCountElement) {\n      dragCountElement.textContent = dragCount + 1;\n    }\n  };\n\n  return (\n    <div className={`purchase-order-container ${!sidebarVisible ? 'sidebar-hidden' : ''}`}>\n      <DndContext \n        sensors={sensors} \n        collisionDetection={closestCenter} \n        onDragStart={handleDragStart}\n        onDragOver={handleDragOver}\n        onDragEnd={handleRootDragEnd}\n        onDragCancel={() => {\n          console.log('❌ Drag cancelled');\n          updateDebugPanel('DRAG CANCEL', 'Drag operation cancelled');\n        }}\n        onDragMove={(event) => {\n          console.log('🔄 Drag move:', event);\n          updateDebugPanel('DRAG MOVE', `${event.active.id} moving`);\n        }}\n      >\n        {console.log('🔧 DndContext rendering with:', {\n          sensors: sensors,\n          collisionDetection: closestCenter,\n          hasDragStart: !!handleDragStart,\n          hasDragOver: !!handleDragOver,\n          hasDragEnd: !!handleRootDragEnd,\n          timestamp: new Date().toISOString()\n        })}\n      {/* Field List Sidebar - Positioned on the far left */}\n      {sidebarVisible && (\n        <div className=\"field-list-sidebar\">\n          <div className=\"field-list-header\">\n            <h3>📋 Available Fields</h3>\n            <p>Fields not currently on the form</p>\n          </div>\n          <div className=\"field-list-content\">\n            {availableFields.map((category, categoryIndex) => (\n              <div key={categoryIndex} className=\"field-category\">\n                <h4 className=\"category-title\">{category.category}</h4>\n                <ul className=\"field-list\">\n                  {category.fields.map((field, fieldIndex) => (\n                    <PaletteDraggable key={`${categoryIndex}-${fieldIndex}`} label={field} category={category.category} />\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n        <div style={{ display: 'flex', alignItems: 'center', gap: 10, marginTop: 8 }}>\n          <button \n            className=\"sidebar-toggle-btn\"\n            onClick={toggleSidebar}\n            title={sidebarVisible ? \"Hide Field List\" : \"Show Field List\"}\n          >\n            {sidebarVisible ? \"📋 Hide Fields\" : \"📋 Show Fields\"}\n          </button>\n        </div>\n      </header>\n\n      {/* Debug Panel */}\n      <div className=\"debug-panel\" style={{\n        position: 'fixed',\n        top: '100px',\n        left: '20px',\n        backgroundColor: 'rgba(0, 0, 0, 0.9)',\n        color: 'white',\n        padding: '15px',\n        borderRadius: '8px',\n        fontSize: '12px',\n        fontFamily: 'monospace',\n        zIndex: 10000,\n        maxWidth: '300px',\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\n      }}>\n        <h4 style={{ margin: '0 0 10px 0', color: '#4ecdc4' }}>🐛 Debug Panel</h4>\n        <div style={{ marginBottom: '8px' }}>\n          <strong>Sections 1&2 Order:</strong> {JSON.stringify(sections1And2Order)}\n        </div>\n        <div style={{ marginBottom: '8px' }}>\n          <strong>Section Handle Dragging:</strong> {isSectionHandleDragging ? 'YES' : 'NO'}\n        </div>\n        <div style={{ marginBottom: '8px' }}>\n          <strong>Last Drag Event:</strong> <span id=\"last-drag-event\">None</span>\n        </div>\n        <div style={{ marginBottom: '8px' }}>\n          <strong>Drag Count:</strong> <span id=\"drag-count\">0</span>\n        </div>\n        <button \n          onClick={() => {\n            console.log('🔍 Debug: Current state:', {\n              sections1And2Order,\n              isSectionHandleDragging,\n              companyFields: companyFields.length,\n              purchaseOrderFields: purchaseOrderFields.length\n            });\n          }}\n          style={{\n            backgroundColor: '#4ecdc4',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '10px'\n          }}\n        >\n          Log State\n        </button>\n        \n        <button \n          onClick={() => {\n            console.log('🧪 Testing section swap...');\n            setSections1And2Order(prev => {\n              const newOrder = [...prev].reverse();\n              console.log('🔄 Manual swap:', prev, '→', newOrder);\n              updateDebugPanel('MANUAL SWAP', `${prev.join('→')} → ${newOrder.join('→')}`);\n              return newOrder;\n            });\n          }}\n          style={{\n            backgroundColor: '#ff6b6b',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '10px',\n            marginLeft: '5px'\n          }}\n        >\n          Test Swap\n        </button>\n        \n        <button \n          onClick={() => {\n            console.log('🧪 Testing drag simulation...');\n            // Simulate a drag start event\n            const mockEvent = {\n              active: { id: 'section1', data: { current: { type: 'section', sectionNumber: 1 } } },\n              over: { id: 'section2', data: { current: { type: 'section', sectionNumber: 2 } } }\n            };\n            console.log('🧪 Simulating drag end event:', mockEvent);\n            handleSectionDragEnd(mockEvent);\n          }}\n          style={{\n            backgroundColor: '#ffa500',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '10px',\n            marginLeft: '5px'\n          }}\n        >\n          Test Drag\n        </button>\n        \n        {/* Simple DND Test */}\n        <div style={{ marginTop: '15px', padding: '10px', border: '1px solid #666', borderRadius: '4px' }}>\n          <h5 style={{ margin: '0 0 8px 0', color: '#4ecdc4' }}>🧪 DND Test</h5>\n          <div style={{ fontSize: '10px', marginBottom: '5px' }}>\n            Try dragging this test item:\n          </div>\n          <div \n            style={{\n              width: '100%',\n              height: '30px',\n              backgroundColor: '#7c3aed',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              cursor: 'grab',\n              borderRadius: '4px',\n              fontSize: '10px'\n            }}\n            draggable=\"true\"\n            onDragStart={(e) => {\n              console.log('🧪 Test drag start:', e);\n              e.dataTransfer.setData('text/plain', 'test');\n            }}\n            onDragOver={(e) => {\n              e.preventDefault();\n              console.log('🧪 Test drag over:', e);\n            }}\n            onDrop={(e) => {\n              e.preventDefault();\n              console.log('🧪 Test drop:', e);\n            }}\n          >\n            🧪 Test Drag Item\n          </div>\n        </div>\n      </div>\n\n      {/* Real-time Status Indicator removed per request */}\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section vendor-shipping-columns\">\n              {/* Section-level Drag and Drop */}\n              <SortableContext \n                items={sections1And2Order}\n                strategy={horizontalListSortingStrategy}\n              >\n                {console.log('🔧 SortableContext for sections 1&2:', { \n                  items: sections1And2Order, \n                  strategy: 'horizontalListSortingStrategy',\n                  sections1And2OrderType: typeof sections1And2Order,\n                  sections1And2OrderLength: sections1And2Order?.length,\n                  itemsArray: Array.isArray(sections1And2Order) ? sections1And2Order : 'NOT ARRAY',\n                  timestamp: new Date().toISOString()\n                })}\n                {console.log('🔧 SortableContext items validation:', {\n                  itemsValid: Array.isArray(sections1And2Order) && sections1And2Order.length > 0,\n                  itemsContent: sections1And2Order,\n                  strategyValid: horizontalListSortingStrategy !== undefined,\n                  timestamp: new Date().toISOString()\n                })}\n                {/* CRITICAL: Render sections dynamically based on sections1And2Order state */}\n                {sections1And2Order.map((sectionId, index) => {\n                  console.log(`🔧 Rendering section: ${sectionId} at index ${index}`);\n                  \n                  if (sectionId === 'section1') {\n                    return (\n                      <DraggableSectionWrapper key=\"section1\" id=\"section1\" sectionNumber=\"1\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n                        <Section1CompanyInfo \n                          companyFields={companyFields}\n                          sensors={sensors}\n                          onCompanyDragEnd={handleCompanyDragEnd}\n                          onAddCompanyField={handleAddCompanyField}\n                          onRemoveCompanyField={handleRemoveCompanyField}\n                          onLabelChange={handleCompanyFieldLabelChange}\n                          onContentChange={handleContentChange}\n                          lastModified={lastModified}\n                        />\n                      </DraggableSectionWrapper>\n                    );\n                  } else if (sectionId === 'section2') {\n                    return (\n                      <DraggableSectionWrapper key=\"section2\" id=\"section2\" sectionNumber=\"2\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n                        <Section2PurchaseOrder \n                          purchaseOrderFields={purchaseOrderFields}\n                          sensors={sensors}\n                          onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                          onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                          onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                          onLabelChange={handlePurchaseOrderFieldLabelChange}\n                          onContentChange={handleContentChange}\n                          lastModified={poLastModified}\n                        />\n                      </DraggableSectionWrapper>\n                    );\n                  }\n                  return null;\n                })}\n              </SortableContext>\n            </div>\n          </div>\n\n          {/* Vendor-ShipTo and Shipping Details Sections (Vertically Swappable) */}\n          <SortableContext \n            items={vendorShipToAndShippingDetailsOrder}\n            strategy={verticalListSortingStrategy}\n          >\n            {vendorShipToAndShippingDetailsOrder.map(sectionId => {\n              if (sectionId === 'sections3And4') {\n                return (\n                  /* Vendor and Ship To Sections - Side by Side */\n                  <div key=\"sections3And4\" className=\"vendor-shipping-columns\">\n                    <SortableContext \n                      items={vendorShipToSectionOrder}\n                      strategy={horizontalListSortingStrategy}\n                    >\n                      {vendorShipToSectionOrder.map(innerSectionId => {\n                        if (innerSectionId === 'section3') {\n                          return (\n                            <DroppableZone key=\"section3\" id=\"drop-vendor\">\n                              <DraggableSectionWrapper id=\"section3\" sectionNumber=\"3\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={false}>\n                                <Section3Vendor \n                                  vendorFields={vendorFields}\n                                  sensors={sensors}\n                                  onVendorDragEnd={handleVendorDragEnd}\n                                  onAddVendorField={handleAddVendorField}\n                                  onRemoveVendorField={handleRemoveVendorField}\n                                  onLabelChange={handleVendorFieldLabelChange}\n                                  onContentChange={handleContentChange}\n                                  lastModified={Date.now()}\n                                />\n                              </DraggableSectionWrapper>\n                            </DroppableZone>\n                          );\n                        } else if (innerSectionId === 'section4') {\n                          return (\n                            <DroppableZone key=\"section4\" id=\"drop-ship-to\">\n                              <DraggableSectionWrapper id=\"section4\" sectionNumber=\"4\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={false}>\n                                <Section4ShipTo \n                                  shipToFields={shipToFields}\n                                  sensors={sensors}\n                                  onShipToDragEnd={handleShipToDragEnd}\n                                  onAddShipToField={handleAddShipToField}\n                                  onRemoveShipToField={handleRemoveShipToField}\n                                  onLabelChange={handleShipToFieldLabelChange}\n                                  onContentChange={handleContentChange}\n                                  lastModified={Date.now()}\n                                />\n                              </DraggableSectionWrapper>\n                            </DroppableZone>\n                          );\n                        }\n                        return null;\n                      })}\n                    </SortableContext>\n                  </div>\n                );\n              } else if (sectionId === 'sections5And6') {\n                return (\n                  <DraggableSectionWrapper key=\"sections5And6\" id=\"sections5And6\" sectionNumber=\"5&6\">\n                    {/* Shipping Details Section */}\n                    <div className=\"shipping-details\">\n                      <div className=\"section-header\">REQUISITIONER</div>\n                      <div className=\"section-header\">SHIP VIA</div>\n                      <div className=\"section-header\">F.O.B.</div>\n                      <div className=\"section-header\">SHIPPING TERMS</div>\n                      <div className=\"shipping-field\" data-field=\"requisitioner\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Requisitioner name\" /></div>\n                      <div className=\"shipping-field\" data-field=\"shipVia\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping method\" /></div>\n                      <div className=\"shipping-field\" data-field=\"fob\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"FOB terms\" /></div>\n                      <div className=\"shipping-field\" data-field=\"shippingTerms\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping terms\" /></div>\n                    </div>\n                  </DraggableSectionWrapper>\n                );\n              }\n              return null;\n            })}\n          </SortableContext>\n\n          {/* Items Table */}\n          <SortableContext items={lineItemColumnOrder} strategy={verticalListSortingStrategy}>\n            <table className=\"itemtable\">\n              <thead>\n                <tr>\n                  <th></th>\n                  {lineItemColumnOrder.map((columnId) => {\n                    const columnConfig = {\n                      itemNumber: { label: 'Item#', colSpan: 3 },\n                      description: { label: 'Description', colSpan: 12 },\n                      qty: { label: 'Qty', colSpan: 2 },\n                      rate: { label: 'Rate', colSpan: 3 },\n                      amount: { label: 'Amount', colSpan: 3 }\n                    };\n                    \n                    const config = columnConfig[columnId];\n                    return (\n                      <th key={columnId} colSpan={config.colSpan}>\n                        {config.label}\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {[1, 2, 3, 4, 5].map((row) => (\n                  <tr key={row} className=\"draggable-row\">\n                    <td></td>\n                    {lineItemColumnOrder.map((columnId) => {\n                      const columnConfig = {\n                        itemNumber: { colSpan: 3, placeholder: 'Item number' },\n                        description: { colSpan: 12, placeholder: 'Item description' },\n                        qty: { colSpan: 2, placeholder: 'Qty' },\n                        rate: { colSpan: 3, placeholder: '$0.00' },\n                        amount: { colSpan: 3, placeholder: '$0.00' }\n                      };\n                      \n                      const config = columnConfig[columnId];\n                      return (\n                        <td key={`${row}-${columnId}`} colSpan={config.colSpan} data-column={columnId}>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder={config.placeholder} />\n                        </td>\n                      );\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </SortableContext>\n\n          {/* Comments and Totals - Sections 8 & 9 */}\n          <SortableContext items={commentsTotalsSectionOrder} strategy={horizontalListSortingStrategy}>\n            <div className=\"comments-totals-section\" style={{ display: 'flex', gap: '20px' }}>\n              {commentsTotalsSectionOrder.map((sectionId) => {\n                if (sectionId === 'section8') {\n                  return (\n                    <div key=\"section8\" id=\"section8\" className=\"sortable-section comments-section\" style={{ flex: 1 }}>\n                      <DraggableSectionHeader id=\"section8\">\n                        Comments or Special Instructions ::\n                      </DraggableSectionHeader>\n                      <div className=\"section-content\">\n                        <div className=\"comments-content\">\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n                        </div>\n                      </div>\n                    </div>\n                  );\n                } else if (sectionId === 'section9') {\n                  return (\n                    <div key=\"section9\" id=\"section9\" className=\"sortable-section totals-section\" style={{ flex: 1 }}>\n                      <DraggableSectionHeader id=\"section9\">\n                        Totals ::\n                      </DraggableSectionHeader>\n                      <div className=\"section-content\">\n                        <div className=\"total-row\" data-field=\"subtotal\">\n                          <span>SUBTOTAL:</span>\n                          <span className=\"calculated-field\">$0.00</span>\n                        </div>\n                        <div className=\"total-row\" data-field=\"tax\">\n                          <span>TAX:</span>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                        </div>\n                        <div className=\"total-row\" data-field=\"shipping\">\n                          <span>SHIPPING:</span>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                        </div>\n                        <div className=\"total-row\" data-field=\"other\">\n                          <span>OTHER:</span>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                        </div>\n                        <div className=\"total-row total-final\" data-field=\"total\">\n                          <span>TOTAL:</span>\n                          <span className=\"calculated-field total-field\">$0.00</span>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }\n                return null;\n              })}\n            </div>\n          </SortableContext>\n\n\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <div className=\"contact-content\">\n              <strong>Contact Information:</strong>\n              <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"button-section\">\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'}\n            </button>\n            <button className=\"btn\" onClick={handleAIFill}>\n              🤖 AI Fill\n            </button>\n            <button className=\"btn export-btn\" onClick={exportToXML}>\n              📄 Generate XML\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                📝 Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  🗑️ Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change) => (\n                  <div key={change.id} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">→</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* XML Output Modal */}\n          {showXMLModal && (\n            <div className=\"xml-modal-overlay\" onClick={closeXMLModal}>\n              <div className=\"xml-modal\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"xml-modal-header\">\n                  <h3>📄 Generated XML Output</h3>\n                  <button className=\"xml-modal-close\" onClick={closeXMLModal}>×</button>\n                </div>\n                <div className=\"xml-modal-content\">\n                  <div className=\"xml-output-container\">\n                    <pre className=\"xml-code\">{xmlOutput}</pre>\n                  </div>\n                </div>\n                <div className=\"xml-modal-actions\">\n                  <button className=\"btn copy-btn\" onClick={copyXMLToClipboard}>\n                    📋 Copy XML\n                  </button>\n                  <button className=\"btn download-btn\" onClick={downloadXML}>\n                    📥 Download XML\n                  </button>\n                  <button className=\"btn close-btn\" onClick={closeXMLModal}>\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n\n\n\n\n        </div>\n      </div>\n      </DndContext>\n      \n      {/* Notification Container */}\n      <div id=\"notification-container\"></div>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}