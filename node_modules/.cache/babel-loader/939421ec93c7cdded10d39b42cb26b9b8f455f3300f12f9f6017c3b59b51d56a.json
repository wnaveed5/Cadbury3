{"ast":null,"code":"var _jsxFileName = \"/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\nimport { useAIProvider } from './hooks/useAIProvider';\n\n// Import custom hooks\nimport { useDragAndDropSensors, useCompanyFieldsDragEnd, usePurchaseOrderFieldsDragEnd, useVendorFieldsDragEnd, useShipToFieldsDragEnd } from './hooks/useDragAndDrop';\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n// Draggable Section Wrapper Component for Sections 5 & 6\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DraggableSectionWrapper({\n  children,\n  id,\n  sectionNumber\n}) {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: `sortable-section section-${sectionNumber}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-drag-handle\",\n      ...attributes,\n      ...listeners,\n      title: \"Drag to reorder sections\",\n      style: {\n        // DEBUG: Add inline styles to override any CSS issues\n        position: 'absolute',\n        left: '-30px',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        background: '#ff0000',\n        border: '3px solid #00ff00',\n        color: '#ffffff',\n        padding: '6px 8px',\n        borderRadius: '4px',\n        cursor: 'grab',\n        fontSize: '18px',\n        fontWeight: 'bold',\n        zIndex: 9999,\n        opacity: 1,\n        visibility: 'visible',\n        display: 'block'\n      },\n      onClick: () => console.log('🎯 Drag handle clicked for section:', sectionNumber),\n      children: \"::\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n// Sortable column header component for line items\n_s(DraggableSectionWrapper, \"jv8kPLlEaSR8/o9+iCuLK6K7PFU=\", false, function () {\n  return [useSortable];\n});\n_c = DraggableSectionWrapper;\nfunction SortableColumnHeader({\n  children,\n  id\n}) {\n  _s2();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    className: `sortable-column-header ${isDragging ? 'dragging' : ''}`,\n    children: [children, \" ::\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n// Draggable Section Header Component for Comments and Totals\n_s2(SortableColumnHeader, \"wZ9LrlAdu45h+k5IBlwhyTPFbVs=\", false, function () {\n  return [useSortable];\n});\n_c2 = SortableColumnHeader;\nfunction DraggableSectionHeader({\n  children,\n  id\n}) {\n  _s3();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"section-header\",\n    ...attributes,\n    ...listeners,\n    title: \"Drag to reorder sections\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n// Main Purchase Order Form Component\n_s3(DraggableSectionHeader, \"jv8kPLlEaSR8/o9+iCuLK6K7PFU=\", false, function () {\n  return [useSortable];\n});\n_c3 = DraggableSectionHeader;\nfunction PurchaseOrderForm() {\n  _s6();\n  var _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n\n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([{\n    id: 'company-name',\n    label: 'Company Name:',\n    placeholder: 'Enter company name',\n    value: ''\n  }, {\n    id: 'company-address',\n    label: 'Street Address:',\n    placeholder: 'Enter street address',\n    value: ''\n  }, {\n    id: 'company-city-state',\n    label: 'City, ST ZIP:',\n    placeholder: 'City, State ZIP',\n    value: ''\n  }, {\n    id: 'company-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }, {\n    id: 'company-fax',\n    label: 'Fax:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }, {\n    id: 'company-website',\n    label: 'Website:',\n    placeholder: 'www.example.com',\n    value: ''\n  }]);\n\n  // Debug: Log company fields state changes\n  useEffect(() => {\n    console.log('🔄 Company fields state updated:', companyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n  }, [companyFields]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([{\n    id: 'po-title',\n    label: 'Purchase Order',\n    placeholder: '',\n    isTitle: true,\n    value: 'Purchase Order'\n  }, {\n    id: 'po-date',\n    label: 'DATE:',\n    placeholder: 'MM/DD/YYYY',\n    value: ''\n  }, {\n    id: 'po-number',\n    label: 'PO #:',\n    placeholder: 'PO#123456',\n    value: ''\n  }]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([{\n    id: 'vendor-company',\n    label: 'Company:',\n    placeholder: 'Vendor name',\n    value: ''\n  }, {\n    id: 'vendor-contact',\n    label: 'Contact:',\n    placeholder: 'Contact person',\n    value: ''\n  }, {\n    id: 'vendor-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: ''\n  }, {\n    id: 'vendor-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: ''\n  }, {\n    id: 'vendor-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([{\n    id: 'ship-to-name',\n    label: 'Name:',\n    placeholder: 'Contact name',\n    value: ''\n  }, {\n    id: 'ship-to-company',\n    label: 'Company:',\n    placeholder: 'Shipping company',\n    value: ''\n  }, {\n    id: 'ship-to-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: ''\n  }, {\n    id: 'ship-to-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: ''\n  }, {\n    id: 'ship-to-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([{\n    id: 'subtotal',\n    label: 'SUBTOTAL:',\n    placeholder: '$0.00',\n    value: '$0.00',\n    isCalculated: true\n  }, {\n    id: 'tax',\n    label: 'TAX:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'shipping',\n    label: 'SHIPPING:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'other',\n    label: 'OTHER:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'total',\n    label: 'TOTAL:',\n    placeholder: '$0.00',\n    value: '$0.00',\n    isCalculated: true\n  }]);\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n\n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = newField => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    logChange('field-add', newField.id, '', newField.label, 'company');\n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = fieldId => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed company field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n\n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n\n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n\n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n  // UI toggle: show field pills (placeholders) vs live values\n  const [showFieldPills, setShowFieldPills] = useState(false);\n\n  // When showing field pills, set data-placeholder attributes to NS-style tokens\n  useEffect(() => {\n    if (!showFieldPills) return;\n    const setPH = (selector, token) => {\n      const el = document.querySelector(selector);\n      if (el) el.setAttribute('data-placeholder', token);\n    };\n\n    // Company\n    setPH('#company-name, [data-field=\"company-name\"] .editable-field', '$company_name');\n    setPH('#company-address, [data-field=\"company-address\"] .editable-field', '$company_address');\n    setPH('#company-city-state, [data-field=\"company-city-state\"] .editable-field', '$company_city_state');\n    setPH('#company-phone, [data-field=\"company-phone\"] .editable-field', '$phone');\n    setPH('#company-fax, [data-field=\"company-fax\"] .editable-field', '$fax');\n    setPH('#company-website, [data-field=\"company-website\"] .editable-field', '$website');\n\n    // PO header\n    setPH('#po-date, [data-field=\"po-date\"] .editable-field, [data-field=\"po-date\"]', '$po_date');\n    setPH('#po-number, [data-field=\"po-number\"] .editable-field, [data-field=\"po-number\"]', '$po_number');\n\n    // Vendor\n    setPH('#vendor-company, [data-field=\"vendor-company\"] .editable-field', '$vendor_company');\n    setPH('#vendor-contact, [data-field=\"vendor-contact\"] .editable-field', '$vendor_contact');\n    setPH('#vendor-address, [data-field=\"vendor-address\"] .editable-field', '$vendor_address');\n    setPH('#vendor-city-state, [data-field=\"vendor-city-state\"] .editable-field', '$vendor_city_state');\n    setPH('#vendor-phone, [data-field=\"vendor-phone\"] .editable-field', '$vendor_phone');\n\n    // Ship-To\n    setPH('#ship-to-name, [data-field=\"ship-to-name\"] .editable-field', '$ship_to_name');\n    setPH('#ship-to-company, [data-field=\"ship-to-company\"] .editable-field', '$ship_to_company');\n    setPH('#ship-to-address, [data-field=\"ship-to-address\"] .editable-field', '$ship_to_address');\n    setPH('#ship-to-city-state, [data-field=\"ship-to-city-state\"] .editable-field', '$ship_to_city_state');\n    setPH('#ship-to-phone, [data-field=\"ship-to-phone\"] .editable-field', '$ship_to_phone');\n\n    // Shipping details\n    setPH('.shipping-details [data-field=\"requisitioner\"] .editable-field', '$requisitioner');\n    setPH('.shipping-details [data-field=\"shipVia\"] .editable-field', '$ship_via');\n    setPH('.shipping-details [data-field=\"fob\"] .editable-field', '$fob');\n    setPH('.shipping-details [data-field=\"shippingTerms\"] .editable-field', '$shipping_terms');\n\n    // Line items (first 5 rows)\n    for (let i = 1; i <= 5; i++) {\n      setPH(`.itemtable tbody tr:nth-child(${i}) td[data-column=\"itemNumber\"] .editable-field`, `$item_number${i}`);\n      setPH(`.itemtable tbody tr:nth-child(${i}) td[data-column=\"description\"] .editable-field`, `$description${i}`);\n      setPH(`.itemtable tbody tr:nth-child(${i}) td[data-column=\"qty\"] .editable-field`, `$qty${i}`);\n      setPH(`.itemtable tbody tr:nth-child(${i}) td[data-column=\"rate\"] .editable-field`, `$rate${i}`);\n      setPH(`.itemtable tbody tr:nth-child(${i}) td[data-column=\"amount\"] .editable-field`, `$amount${i}`);\n    }\n\n    // Totals (editable ones)\n    setPH('.totals-section .total-row[data-field=\"tax\"] .editable-field', '$tax');\n    setPH('.totals-section .total-row[data-field=\"shipping\"] .editable-field', '$shipping');\n    setPH('.totals-section .total-row[data-field=\"other\"] .editable-field', '$other');\n\n    // Comments & contact\n    setPH('.comments-content .editable-field', '$comments');\n    setPH('.contact-section .editable-field', '$contact_info');\n  }, [showFieldPills]);\n\n  // Function to display XML output in a modal\n  const displayXMLOutput = xml => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n\n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n\n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n\n  // Function to download XML file\n  const downloadXML = () => {\n    var _purchaseOrderFields$;\n    const blob = new Blob([xmlOutput], {\n      type: 'application/xml'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${((_purchaseOrderFields$ = purchaseOrderFields.find(f => f.id === 'po-number')) === null || _purchaseOrderFields$ === void 0 ? void 0 : _purchaseOrderFields$.value) || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // =========================================================================\n  // AI SUGGESTIONS\n  // =========================================================================\n  const {\n    getFieldSuggestions\n  } = useAIProvider();\n  const applySuggestionsToFields = (suggestionsMap, fields) => {\n    if (!Array.isArray(fields)) return fields;\n    return fields.map(f => {\n      const newVal = suggestionsMap === null || suggestionsMap === void 0 ? void 0 : suggestionsMap[f.id];\n      if (typeof newVal === 'string') {\n        return {\n          ...f,\n          value: newVal\n        };\n      }\n      return f;\n    });\n  };\n  const handleAIFill = async () => {\n    try {\n      showNotification('🤖 Fetching AI suggestions...', 'info');\n      const payload = {\n        context: 'purchase_order',\n        companyFields,\n        purchaseOrderFields,\n        vendorFields,\n        shipToFields,\n        shippingFields: [{\n          id: 'requisitioner',\n          label: 'Requisitioner name'\n        }, {\n          id: 'shipVia',\n          label: 'Shipping method'\n        }, {\n          id: 'fob',\n          label: 'FOB terms'\n        }, {\n          id: 'shippingTerms',\n          label: 'Shipping terms'\n        }]\n      };\n      const {\n        suggestions\n      } = await getFieldSuggestions(payload);\n      try {\n        console.debug('🧪 AI suggestions keys:', Object.keys(suggestions || {}));\n        // Preview a few critical values to verify mapping\n        console.debug('🧪 AI preview:', {\n          company: {\n            name: suggestions === null || suggestions === void 0 ? void 0 : suggestions['company-name'],\n            phone: suggestions === null || suggestions === void 0 ? void 0 : suggestions['company-phone']\n          },\n          po: {\n            date: suggestions === null || suggestions === void 0 ? void 0 : suggestions['po-date'],\n            number: suggestions === null || suggestions === void 0 ? void 0 : suggestions['po-number']\n          },\n          shipping: {\n            requisitioner: suggestions === null || suggestions === void 0 ? void 0 : suggestions.requisitioner,\n            shipVia: suggestions === null || suggestions === void 0 ? void 0 : suggestions.shipVia\n          },\n          totals: {\n            subtotal: suggestions === null || suggestions === void 0 ? void 0 : suggestions.subtotal,\n            tax: suggestions === null || suggestions === void 0 ? void 0 : suggestions.tax,\n            total: suggestions === null || suggestions === void 0 ? void 0 : suggestions.total\n          },\n          line1: {\n            item: suggestions === null || suggestions === void 0 ? void 0 : suggestions.itemNumber1,\n            desc: suggestions === null || suggestions === void 0 ? void 0 : suggestions.description1,\n            qty: suggestions === null || suggestions === void 0 ? void 0 : suggestions.qty1,\n            rate: suggestions === null || suggestions === void 0 ? void 0 : suggestions.rate1,\n            amount: suggestions === null || suggestions === void 0 ? void 0 : suggestions.amount1\n          }\n        });\n      } catch {}\n\n      // 1) Apply to Section 1–3 states (company/po/vendor/ship-to) with mapping logs\n      setCompanyFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(companyFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setPurchaseOrderFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(purchaseOrderFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setVendorFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(vendorFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setShipToFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(shipToFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // 2) Shipping details (DOM spans)\n      const write = (el, val) => {\n        if (el && typeof val === 'string') el.textContent = val;\n      };\n      const shipSelectors = key => [`.shipping-details [data-field=\"${key}\"] .editable-field`, `.shipping-field[data-field=\"${key}\"] .editable-field`, `#shipping-${key}`, `.shipping-field-${key} .editable-field`];\n      const shipOrder = ['requisitioner', 'shipVia', 'fob', 'shippingTerms'];\n      shipOrder.forEach((key, idx) => {\n        let el = null,\n          used = '';\n        for (const sel of shipSelectors(key)) {\n          el = document.querySelector(sel);\n          if (el) {\n            used = sel;\n            break;\n          }\n        }\n        // Fallback to positional selector used in your JSX\n        if (!el) {\n          const nth = idx + 1; // 1-based\n          // Prefer :nth-of-type within container to ignore headers\n          const selA = `.shipping-details .shipping-field:nth-of-type(${nth}) .editable-field`;\n          el = document.querySelector(selA);\n          if (el) {\n            used = selA;\n          } else {\n            // Last resort: original child-based selector\n            const selB = `.shipping-field:nth-child(${nth}) .editable-field`;\n            el = document.querySelector(selB);\n            if (el) used = selB;\n          }\n        }\n        write(el, suggestions[key]);\n        try {\n          const count = document.querySelectorAll('.shipping-details .shipping-field').length;\n          console.debug('🧭 map(shippingDetails):', {\n            key,\n            selector: used || '(not found)',\n            value: suggestions[key],\n            fieldsInDOM: count\n          });\n        } catch {}\n      });\n\n      // 3) Line items (first 3 rows only)\n      // Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\n      const setCell = (row, col, val) => {\n        const selector = `.itemtable tbody tr:nth-child(${row}) td[data-column=\"${col}\"] .editable-field`;\n        const cell = document.querySelector(selector);\n        if (cell && typeof val === 'string') {\n          cell.textContent = val;\n        }\n        try {\n          console.debug('🧭 map(lineItem):', {\n            row,\n            col,\n            selector,\n            value: val\n          });\n        } catch {}\n      };\n      const li = (i, k) => suggestions === null || suggestions === void 0 ? void 0 : suggestions[`${k}${i}`];\n      for (let i = 1; i <= 3; i++) {\n        setCell(i, 'itemNumber', li(i, 'itemNumber'));\n        setCell(i, 'description', li(i, 'description'));\n        setCell(i, 'qty', li(i, 'qty'));\n        setCell(i, 'rate', li(i, 'rate'));\n        setCell(i, 'amount', li(i, 'amount'));\n      }\n\n      // 4) Totals (state + DOM)\n      setTotalsFields(prev => {\n        const map = {\n          subtotal: suggestions.subtotal,\n          tax: suggestions.tax,\n          shipping: suggestions.shipping,\n          other: suggestions.other,\n          total: suggestions.total\n        };\n        const next = prev.map(f => map[f.id] ? {\n          ...f,\n          value: map[f.id]\n        } : f);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && map[id] !== undefined) {\n              console.debug('🧭 map(totalsFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // Write editable totals into DOM for non-calculated rows\n      const domTotals = field => document.querySelector(`.totals-section .total-row[data-field=\"${field}\"] .editable-field`);\n      ['tax', 'shipping', 'other'].forEach(key => {\n        const sel = `.totals-section .total-row[data-field=\"${key}\"] .editable-field`;\n        write(domTotals(key), suggestions[key]);\n        try {\n          console.debug('🧭 map(totalsDOM):', {\n            key,\n            selector: sel,\n            value: suggestions[key]\n          });\n        } catch {}\n      });\n\n      // Calculated-looking spans (subtotal, total) in your layout use .calculated-field\n      const calcTotal = document.querySelector(`.totals-section .total-row[data-field=\"total\"] .total-field`);\n      const calcSub = document.querySelector(`.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`);\n      write(calcSub, suggestions.subtotal);\n      write(calcTotal, suggestions.total);\n      try {\n        console.debug('🧭 map(totalsDOM):', {\n          key: 'subtotal',\n          selector: `.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`,\n          value: suggestions.subtotal\n        });\n        console.debug('🧭 map(totalsDOM):', {\n          key: 'total',\n          selector: `.totals-section .total-row[data-field=\"total\"] .total-field`,\n          value: suggestions.total\n        });\n      } catch {}\n\n      // 5) Comments, Contact Info (DOM)\n      const commentsEl = document.querySelector('.comments-content .editable-field');\n      const contactEl = document.querySelector('.contact-section .editable-field');\n      write(commentsEl, suggestions.comments);\n      write(contactEl, suggestions.contactInfo);\n      try {\n        console.debug('🧭 map(comments):', {\n          selector: '.comments-content .editable-field',\n          value: suggestions.comments\n        });\n        console.debug('🧭 map(contactInfo):', {\n          selector: '.contact-section .editable-field',\n          value: suggestions.contactInfo\n        });\n      } catch {}\n\n      // 6) Bump timestamps\n      updateCompanyFieldsTimestamp();\n      updatePurchaseOrderFieldsTimestamp();\n      showNotification('✅ AI suggestions applied', 'success');\n    } catch (e) {\n      console.error('AI fill failed:', e);\n      showNotification(`❌ AI fill failed: ${e.message}`, 'error');\n    }\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n\n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('📄 Starting XML generation...');\n\n      // Capture current field values first\n      const capturedData = captureFieldValues();\n\n      // Prepare data for XML generation\n      // Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\n      const headerSections = Array.from(document.querySelectorAll('.header-section .sortable-section'));\n      const visualSections1And2 = headerSections.map(el => el.id).filter(id => id === 'section1' || id === 'section2');\n      const sections1And2ForExport = visualSections1And2.length === 2 ? visualSections1And2 : sections1And2Order;\n\n      // Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\n      const vendorShipToSections = Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));\n      const visualSections3And4 = vendorShipToSections.map(el => el.id).filter(id => id === 'section3' || id === 'section4');\n      const sections3And4ForExport = visualSections3And4.length === 2 ? visualSections3And4 : vendorShipToSectionOrder;\n\n      // Helpers for DOM reads\n      const getText = sel => {\n        var _document$querySelect, _document$querySelect2;\n        return ((_document$querySelect = document.querySelector(sel)) === null || _document$querySelect === void 0 ? void 0 : (_document$querySelect2 = _document$querySelect.textContent) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.trim()) || '';\n      };\n\n      // Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\n      const normalizedLineItems = (capturedData.lineItems || []).map(row => ({\n        // original UI keys\n        itemNumber: row.itemNumber || '',\n        description: row.description || '',\n        qty: row.qty || row.quantity || '',\n        rate: row.rate || row.unitPrice || '',\n        amount: row.amount || row.total || '',\n        // template-expected keys\n        quantity: row.quantity || row.qty || '',\n        unitPrice: row.unitPrice || row.rate || '',\n        total: row.total || row.amount || ''\n      }));\n      const exportData = {\n        ...capturedData,\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2ForExport,\n          // Use current visual order to ensure XML matches UI\n          sections3And4: sections3And4ForExport,\n          // Use current visual order to ensure XML matches UI\n          sections5And6: sections5And6Order,\n          // Use actual state for sections 5&6\n          sections3And4And5And6: vendorShipToAndShippingDetailsOrder,\n          // Vendor-ShipTo and Shipping Details order\n          sections8And9: commentsTotalsSectionOrder,\n          // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder // Use actual state for line item columns\n        },\n        // CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\n        fieldOrder: {\n          company: companyFieldOrder,\n          // Preserve company field order independently of section position\n          purchaseOrder: purchaseOrderFieldOrder,\n          // Preserve PO field order independently of section position\n          vendor: vendorFields.map(f => f.id),\n          // Vendor field order\n          shipTo: shipToFields.map(f => f.id) // Ship-to field order\n        },\n        // Add normalized line items (support both key schemes)\n        lineItems: normalizedLineItems,\n        // Shipping details (prefer data-field; fall back handled in XML builder too)\n        requisitioner: getText('.shipping-details [data-field=\"requisitioner\"] .editable-field'),\n        shipVia: getText('.shipping-details [data-field=\"shipVia\"] .editable-field'),\n        fob: getText('.shipping-details [data-field=\"fob\"] .editable-field'),\n        shippingTerms: getText('.shipping-details [data-field=\"shippingTerms\"] .editable-field'),\n        // Totals: read what the user sees\n        subtotal: getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field') || '$0.00',\n        tax: getText('.totals-section .total-row[data-field=\"tax\"] .editable-field') || '$0.00',\n        shipping: getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field') || '$0.00',\n        other: getText('.totals-section .total-row[data-field=\"other\"] .editable-field') || '$0.00',\n        total: getText('.totals-section .total-row[data-field=\"total\"] .total-field') || '$0.00',\n        comments: getText('.comments-content .editable-field'),\n        contactInfo: getText('.contact-section .editable-field')\n      };\n      console.debug('🔎 Export DOM reads:', {\n        requisitioner: exportData.requisitioner,\n        shipVia: exportData.shipVia,\n        fob: exportData.fob,\n        shippingTerms: exportData.shippingTerms,\n        subtotal: exportData.subtotal,\n        tax: exportData.tax,\n        shipping: exportData.shipping,\n        other: exportData.other,\n        total: exportData.total\n      });\n      console.log('📄 Export data prepared:', exportData);\n      console.log('🔀 Section order being sent to XML:', exportData.sectionOrder);\n      console.log('🔀 Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('🔀 Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('🔀 Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n      console.log('🔀 Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('🔀 Line items data:', exportData.lineItems);\n\n      // CRITICAL: Log field order information\n      console.log('🔀 Field order being sent to XML:', exportData.fieldOrder);\n      console.log('🔀 Company field order:', exportData.fieldOrder.company);\n      console.log('🔀 Purchase order field order:', exportData.fieldOrder.purchaseOrder);\n      console.log('🔀 Vendor field order:', exportData.fieldOrder.vendor);\n      console.log('🔀 Ship-to field order:', exportData.fieldOrder.shipTo);\n\n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n\n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n\n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = event => {\n    _s4();\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n\n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setCompanyFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        console.log('🔄 Company field order updated:', {\n          oldIndex,\n          newIndex,\n          newOrder\n        });\n        return newOrder;\n      });\n      console.log('🔄 Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n\n  // Function to log a summary of all field states\n  _s4(handleCompanyDragEnd, \"Z4WIFLscuzsxuDjcfj/36TQtLNg=\", false, function () {\n    return [useCompanyFieldsDragEnd];\n  });\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({\n          id: f.id,\n          label: f.label\n        }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({\n          id: f.id,\n          label: f.label,\n          isTitle: f.isTitle\n        }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = newField => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = fieldId => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = event => {\n    _s5();\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n\n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setPurchaseOrderFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        console.log('🔄 Purchase order field order updated:', {\n          oldIndex,\n          newIndex,\n          newOrder\n        });\n        return newOrder;\n      });\n      console.log('🔄 Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n\n  // State for vendor/ship-to section order\n  _s5(handlePurchaseOrderDragEnd, \"v6fWquKCV6fyV8vMqH2r576JyB4=\", false, function () {\n    return [usePurchaseOrderFieldsDragEnd];\n  });\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n\n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n\n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5', 'section6']);\n\n  // State for vendor-ship-to and shipping-details sections order\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['sections3And4', 'sections5And6']);\n\n  // CRITICAL: Add field order state management (same pattern as section order)\n  // State for company field order (preserves drag-and-drop order independently of section position)\n  const [companyFieldOrder, setCompanyFieldOrder] = useState([]);\n\n  // State for purchase order field order (preserves drag-and-drop order independently of section position)\n  const [purchaseOrderFieldOrder, setPurchaseOrderFieldOrder] = useState([]);\n\n  // Initialize field order states with current field IDs\n  React.useEffect(() => {\n    setCompanyFieldOrder(companyFields.map(field => field.id));\n  }, [companyFields]);\n  React.useEffect(() => {\n    setPurchaseOrderFieldOrder(purchaseOrderFields.map(field => field.id));\n  }, [purchaseOrderFields]);\n\n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState(['itemNumber', 'description', 'qty', 'rate', 'amount']);\n\n  // Log line item column order changes\n  useEffect(() => {\n    console.log('🔀 Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', {\n        active: active.id,\n        over: active.id\n      });\n      setSections1And2Order(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New section order:', newOrder);\n\n        // CRITICAL: Only swap section positions, preserve field content and order\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2 (POSITION ONLY)');\n          console.log('🔄 Company fields remain company fields (with custom order)');\n          console.log('🔄 Purchase Order fields remain PO fields (with custom order)');\n          showNotification('🔄 Sections swapped! (Field content preserved)', 'info');\n          console.log('🔄 Sections swapped via drag & drop! (Field content preserved)');\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1 (POSITION ONLY)');\n          console.log('🔄 Company fields remain company fields (with custom order)');\n          console.log('🔄 Purchase Order fields remain PO fields (with custom order)');\n          showNotification('🔄 Sections swapped! (Field content preserved)', 'info');\n          console.log('🔄 Sections swapped via drag & drop! (Field content preserved)');\n        }\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New sections 5&6 order:', newOrder);\n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:', {\n      active: active.id,\n      over: over.id\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Line item column swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setLineItemColumnOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        console.log('🔄 Previous line item column order:', items);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        console.log('🔄 New line item column order:', newOrder);\n        showNotification('🔄 Line item columns reordered!', 'info');\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No line item column swap - same position');\n    }\n  };\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New vendor/ship-to order:', newOrder);\n\n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('🔄 Previous vendor-shipTo + shipping details order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New vendor-shipTo + shipping details order:', newOrder);\n        showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n\n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle,\n        // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n\n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n\n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    showNotification('🔄 Sections swapped!', 'info');\n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n\n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      }))\n    });\n  };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n\n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n\n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n\n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n\n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n\n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n\n    // Capture company field values - PRESERVE CURRENT ORDER\n    console.log('🔍 DEBUG: Current company fields order before capture:', companyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n    console.log('🔍 DEBUG: Updated company fields order after capture:', updatedCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n\n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('📝 Line items captured:', capturedLineItems);\n\n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n\n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      console.log(`📝 Totals field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    console.log('📝 Field values captured and state updated!');\n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `purchase-order-container ${showFieldPills ? 'show-field-pills' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Purchase Order Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create, edit, and manage purchase orders with ease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 10,\n          marginTop: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"toggle-pills\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Show Field Pills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1466,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"toggle-pills\",\n          type: \"checkbox\",\n          checked: showFieldPills,\n          onChange: e => setShowFieldPills(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1467,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1465,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1462,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-section\",\n            children: /*#__PURE__*/_jsxDEV(DndContext, {\n              sensors: sensors,\n              collisionDetection: closestCenter,\n              onDragEnd: handleSectionDragEnd,\n              children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                items: sections1And2Order,\n                strategy: verticalListSortingStrategy,\n                children: sections1And2Order.map(sectionId => {\n                  if (sectionId === 'section1') {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      id: \"section1\",\n                      className: \"sortable-section\",\n                      children: /*#__PURE__*/_jsxDEV(Section1CompanyInfo, {\n                        companyFields: companyFields,\n                        sensors: sensors,\n                        onCompanyDragEnd: handleCompanyDragEnd,\n                        onAddCompanyField: handleAddCompanyField,\n                        onRemoveCompanyField: handleRemoveCompanyField,\n                        onLabelChange: handleCompanyFieldLabelChange,\n                        onContentChange: handleContentChange,\n                        lastModified: lastModified\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1499,\n                        columnNumber: 27\n                      }, this)\n                    }, \"section1\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1498,\n                      columnNumber: 25\n                    }, this);\n                  } else if (sectionId === 'section2') {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      id: \"section2\",\n                      className: \"sortable-section\",\n                      children: /*#__PURE__*/_jsxDEV(Section2PurchaseOrder, {\n                        purchaseOrderFields: purchaseOrderFields,\n                        sensors: sensors,\n                        onPurchaseOrderDragEnd: handlePurchaseOrderDragEnd,\n                        onAddPurchaseOrderField: handleAddPurchaseOrderField,\n                        onRemovePurchaseOrderField: handleRemovePurchaseOrderField,\n                        onLabelChange: handlePurchaseOrderFieldLabelChange,\n                        onContentChange: handleContentChange,\n                        lastModified: poLastModified\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1514,\n                        columnNumber: 27\n                      }, this)\n                    }, \"section2\", false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1513,\n                      columnNumber: 25\n                    }, this);\n                  }\n                  return null;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1490,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1485,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1483,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n          sensors: sensors,\n          collisionDetection: closestCenter,\n          onDragEnd: handleVendorShipToAndShippingDetailsDragEnd,\n          children: /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: vendorShipToAndShippingDetailsOrder,\n            strategy: verticalListSortingStrategy,\n            children: vendorShipToAndShippingDetailsOrder.map(sectionId => {\n              if (sectionId === 'sections3And4') {\n                return /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                  id: \"sections3And4\",\n                  sectionNumber: \"3&4\",\n                  children: /*#__PURE__*/_jsxDEV(Section3VendorShipTo, {\n                    vendorFields: vendorFields,\n                    shipToFields: shipToFields,\n                    sensors: sensors,\n                    onVendorDragEnd: handleVendorDragEnd,\n                    onShipToDragEnd: handleShipToDragEnd,\n                    onVendorShipToSectionDragEnd: handleVendorShipToSectionDragEnd,\n                    vendorShipToSectionOrder: vendorShipToSectionOrder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1549,\n                    columnNumber: 23\n                  }, this)\n                }, \"sections3And4\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1547,\n                  columnNumber: 21\n                }, this);\n              } else if (sectionId === 'sections5And6') {\n                return /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                  id: \"sections5And6\",\n                  sectionNumber: \"5&6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"shipping-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"REQUISITIONER\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1565,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"SHIP VIA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1566,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"F.O.B.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1567,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"SHIPPING TERMS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1568,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      \"data-field\": \"requisitioner\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"Requisitioner name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1569,\n                        columnNumber: 84\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1569,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      \"data-field\": \"shipVia\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"Shipping method\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1570,\n                        columnNumber: 78\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1570,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      \"data-field\": \"fob\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"FOB terms\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1571,\n                        columnNumber: 74\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1571,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      \"data-field\": \"shippingTerms\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"Shipping terms\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1572,\n                        columnNumber: 84\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1572,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1564,\n                    columnNumber: 23\n                  }, this)\n                }, \"sections5And6\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1562,\n                  columnNumber: 21\n                }, this);\n              }\n              return null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1540,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n          sensors: sensors,\n          collisionDetection: closestCenter,\n          onDragEnd: handleLineItemColumnDragEnd,\n          children: /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: lineItemColumnOrder,\n            strategy: verticalListSortingStrategy,\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"itemtable\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1592,\n                    columnNumber: 21\n                  }, this), lineItemColumnOrder.map(columnId => {\n                    const columnConfig = {\n                      itemNumber: {\n                        label: 'Item#',\n                        colSpan: 3\n                      },\n                      description: {\n                        label: 'Description',\n                        colSpan: 12\n                      },\n                      qty: {\n                        label: 'Qty',\n                        colSpan: 2\n                      },\n                      rate: {\n                        label: 'Rate',\n                        colSpan: 3\n                      },\n                      amount: {\n                        label: 'Amount',\n                        colSpan: 3\n                      }\n                    };\n                    const config = columnConfig[columnId];\n                    return /*#__PURE__*/_jsxDEV(\"th\", {\n                      colSpan: config.colSpan,\n                      className: \"draggable-column-header\",\n                      children: /*#__PURE__*/_jsxDEV(SortableColumnHeader, {\n                        id: columnId,\n                        children: config.label\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1605,\n                        columnNumber: 27\n                      }, this)\n                    }, columnId, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1604,\n                      columnNumber: 25\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1591,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1590,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [1, 2, 3, 4, 5].map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: \"draggable-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1616,\n                    columnNumber: 23\n                  }, this), lineItemColumnOrder.map(columnId => {\n                    const columnConfig = {\n                      itemNumber: {\n                        colSpan: 3,\n                        placeholder: 'Item number'\n                      },\n                      description: {\n                        colSpan: 12,\n                        placeholder: 'Item description'\n                      },\n                      qty: {\n                        colSpan: 2,\n                        placeholder: 'Qty'\n                      },\n                      rate: {\n                        colSpan: 3,\n                        placeholder: '$0.00'\n                      },\n                      amount: {\n                        colSpan: 3,\n                        placeholder: '$0.00'\n                      }\n                    };\n                    const config = columnConfig[columnId];\n                    return /*#__PURE__*/_jsxDEV(\"td\", {\n                      colSpan: config.colSpan,\n                      \"data-column\": columnId,\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": config.placeholder\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1629,\n                        columnNumber: 29\n                      }, this)\n                    }, `${row}-${columnId}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1628,\n                      columnNumber: 27\n                    }, this);\n                  })]\n                }, row, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1615,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1613,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1589,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1588,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n          sensors: sensors,\n          collisionDetection: closestCenter,\n          onDragEnd: handleCommentsTotalsDragEnd,\n          children: /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: commentsTotalsSectionOrder,\n            strategy: horizontalListSortingStrategy,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-totals-section\",\n              style: {\n                display: 'flex',\n                gap: '20px'\n              },\n              children: commentsTotalsSectionOrder.map(sectionId => {\n                if (sectionId === 'section8') {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"section8\",\n                    className: \"sortable-section comments-section\",\n                    style: {\n                      flex: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DraggableSectionHeader, {\n                      id: \"section8\",\n                      children: \"Comments or Special Instructions ::\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1652,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-content\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"comments-content\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"Enter comments or special instructions...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1657,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1656,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1655,\n                      columnNumber: 25\n                    }, this)]\n                  }, \"section8\", true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1651,\n                    columnNumber: 23\n                  }, this);\n                } else if (sectionId === 'section9') {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"section9\",\n                    className: \"sortable-section totals-section\",\n                    style: {\n                      flex: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DraggableSectionHeader, {\n                      id: \"section9\",\n                      children: \"Totals ::\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1665,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"subtotal\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"SUBTOTAL:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1670,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"calculated-field\",\n                          children: \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1671,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1669,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"tax\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"TAX:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1674,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1675,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1673,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"shipping\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"SHIPPING:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1678,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1679,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1677,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"other\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"OTHER:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1682,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1683,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1681,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row total-final\",\n                        \"data-field\": \"total\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"TOTAL:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1686,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"calculated-field total-field\",\n                          children: \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1687,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1685,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1668,\n                      columnNumber: 25\n                    }, this)]\n                  }, \"section9\", true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1664,\n                    columnNumber: 23\n                  }, this);\n                }\n                return null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1647,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1646,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Contact Information:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1702,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editable-field\",\n              contentEditable: \"true\",\n              \"data-placeholder\": \"Enter contact information here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1703,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1701,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1700,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn preview-btn\",\n            onClick: togglePreviewMode,\n            children: isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1709,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: handleAIFill,\n            children: \"\\uD83E\\uDD16 AI Fill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1712,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn export-btn\",\n            onClick: exportToXML,\n            children: \"\\uD83D\\uDCC4 Generate XML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1715,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1708,\n          columnNumber: 11\n        }, this), changeHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-history-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [\"\\uD83D\\uDCDD Change History (\", changeHistory.length, \" changes)\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-history-btn\",\n              onClick: clearChangeHistory,\n              children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1725,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1723,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-list\",\n            children: [changeHistory.slice(0, 10).map(change => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-time\",\n                children: new Date(change.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1732,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-type\",\n                children: change.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1735,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-field\",\n                children: change.fieldId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1736,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-old\",\n                children: change.oldValue || 'empty'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1737,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-arrow\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1738,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-new\",\n                children: change.newValue || 'empty'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1739,\n                columnNumber: 21\n              }, this)]\n            }, change.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1731,\n              columnNumber: 19\n            }, this)), changeHistory.length > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-more\",\n              children: [\"... and \", changeHistory.length - 10, \" more changes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1743,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1729,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1722,\n          columnNumber: 13\n        }, this), showXMLModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"xml-modal-overlay\",\n          onClick: closeXMLModal,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"xml-modal\",\n            onClick: e => e.stopPropagation(),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"xml-modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\uD83D\\uDCC4 Generated XML Output\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1756,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"xml-modal-close\",\n                onClick: closeXMLModal,\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1757,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1755,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"xml-modal-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-output-container\",\n                children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                  className: \"xml-code\",\n                  children: xmlOutput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1761,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1760,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1759,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"xml-modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn copy-btn\",\n                onClick: copyXMLToClipboard,\n                children: \"\\uD83D\\uDCCB Copy XML\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1765,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn download-btn\",\n                onClick: downloadXML,\n                children: \"\\uD83D\\uDCE5 Download XML\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1768,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn close-btn\",\n                onClick: closeXMLModal,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1771,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1764,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1754,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1753,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1480,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1479,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1460,\n    columnNumber: 5\n  }, this);\n}\n_s6(PurchaseOrderForm, \"8MHH5fTknHJekmLxA9HCltwgNYM=\", false, function () {\n  return [useDragAndDropSensors, useVendorFieldsDragEnd, useShipToFieldsDragEnd, useAIProvider];\n});\n_c4 = PurchaseOrderForm;\nexport default PurchaseOrderForm;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"DraggableSectionWrapper\");\n$RefreshReg$(_c2, \"SortableColumnHeader\");\n$RefreshReg$(_c3, \"DraggableSectionHeader\");\n$RefreshReg$(_c4, \"PurchaseOrderForm\");","map":{"version":3,"names":["React","useState","useEffect","generatePurchaseOrderXML","Section1CompanyInfo","Section2PurchaseOrder","Section3VendorShipTo","useAIProvider","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","SortableContext","verticalListSortingStrategy","horizontalListSortingStrategy","useSortable","CSS","arrayMove","jsxDEV","_jsxDEV","DraggableSectionWrapper","children","id","sectionNumber","_s","attributes","listeners","setNodeRef","transform","transition","style","Transform","toString","ref","className","title","position","left","top","background","border","color","padding","borderRadius","cursor","fontSize","fontWeight","zIndex","opacity","visibility","display","onClick","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","SortableColumnHeader","_s2","isDragging","userSelect","_c2","DraggableSectionHeader","_s3","_c3","PurchaseOrderForm","_s6","_s4","$RefreshSig$","_s5","companyFields","setCompanyFields","label","placeholder","value","map","f","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","purchaseOrderFields","setPurchaseOrderFields","isTitle","vendorFields","setVendorFields","shipToFields","setShipToFields","totalsFields","setTotalsFields","isCalculated","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","handleAddCompanyField","newField","prevFields","logChange","handleRemoveCompanyField","fieldId","fieldToRemove","find","field","showNotification","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","changeType","oldValue","newValue","section","change","now","timestamp","type","prev","slice","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","togglePreviewMode","clearChangeHistory","showXMLModal","setShowXMLModal","xmlOutput","setXmlOutput","showFieldPills","setShowFieldPills","setPH","selector","token","el","document","querySelector","setAttribute","i","displayXMLOutput","xml","closeXMLModal","copyXMLToClipboard","navigator","clipboard","writeText","then","catch","downloadXML","_purchaseOrderFields$","blob","Blob","url","window","URL","createObjectURL","a","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","getFieldSuggestions","applySuggestionsToFields","suggestionsMap","fields","Array","isArray","newVal","handleAIFill","payload","context","shippingFields","suggestions","debug","Object","keys","company","name","phone","po","date","number","shipping","requisitioner","shipVia","totals","subtotal","tax","total","line1","item","itemNumber1","desc","description1","qty","qty1","rate","rate1","amount","amount1","next","before","fromEntries","after","forEach","undefined","from","to","sourceKey","write","val","textContent","shipSelectors","key","shipOrder","idx","used","sel","nth","selA","selB","count","querySelectorAll","length","fieldsInDOM","setCell","row","col","cell","li","k","other","domTotals","calcTotal","calcSub","commentsEl","contactEl","comments","contactInfo","e","error","message","exportToXML","capturedData","captureFieldValues","headerSections","visualSections1And2","sections1And2ForExport","sections1And2Order","vendorShipToSections","visualSections3And4","sections3And4ForExport","vendorShipToSectionOrder","getText","_document$querySelect","_document$querySelect2","trim","normalizedLineItems","lineItems","itemNumber","description","quantity","unitPrice","exportData","sectionOrder","sections1And2","sections3And4","sections5And6","sections5And6Order","sections3And4And5And6","vendorShipToAndShippingDetailsOrder","sections8And9","commentsTotalsSectionOrder","lineItemColumns","lineItemColumnOrder","fieldOrder","companyFieldOrder","purchaseOrder","purchaseOrderFieldOrder","vendor","shipTo","fob","shippingTerms","existingNotification","remove","notification","innerHTML","cssText","head","setTimeout","parentElement","getFormStats","totalFields","totalChanges","Math","max","getTime","handleCompanyDragEnd","event","active","over","setCompanyFieldOrder","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","logFieldSummary","toLocaleString","handleAddPurchaseOrderField","handleRemovePurchaseOrderField","handlePurchaseOrderDragEnd","setPurchaseOrderFieldOrder","setVendorShipToSectionOrder","setSections1And2Order","setSections5And6Order","setVendorShipToAndShippingDetailsOrder","setLineItemColumnOrder","setCommentsTotalsSectionOrder","handleSectionDragEnd","handleSections5And6DragEnd","handleLineItemColumnDragEnd","items","handleCommentsTotalsDragEnd","handleVendorShipToSectionDragEnd","handleVendorShipToAndShippingDetailsDragEnd","handleSwapSections","companyFieldValues","element","getElementById","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSwapVendorShipTo","vendorFieldValues","shipToFieldValues","reverse","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","capturedLineItems","rowIndex","rowData","columnId","cellSelector","push","updatedTotalsFields","alignItems","gap","marginTop","htmlFor","checked","onChange","target","collisionDetection","onDragEnd","strategy","sectionId","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","onVendorDragEnd","onShipToDragEnd","onVendorShipToSectionDragEnd","contentEditable","columnConfig","colSpan","config","flex","toLocaleTimeString","stopPropagation","_c4","$RefreshReg$"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\nimport { useAIProvider } from './hooks/useAIProvider';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n\n// Draggable Section Wrapper Component for Sections 5 & 6\nfunction DraggableSectionWrapper({ children, id, sectionNumber }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div ref={setNodeRef} style={style} className={`sortable-section section-${sectionNumber}`}>\n      {/* Left-side drag handle */}\n      <div \n        className=\"left-drag-handle\"\n        {...attributes} \n        {...listeners} \n        title=\"Drag to reorder sections\"\n        style={{\n          // DEBUG: Add inline styles to override any CSS issues\n          position: 'absolute',\n          left: '-30px',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          background: '#ff0000',\n          border: '3px solid #00ff00',\n          color: '#ffffff',\n          padding: '6px 8px',\n          borderRadius: '4px',\n          cursor: 'grab',\n          fontSize: '18px',\n          fontWeight: 'bold',\n          zIndex: 9999,\n          opacity: 1,\n          visibility: 'visible',\n          display: 'block'\n        }}\n        onClick={() => console.log('🎯 Drag handle clicked for section:', sectionNumber)}\n      >\n        ::\n      </div>\n      {children}\n    </div>\n  );\n}\n\n// Sortable column header component for line items\nfunction SortableColumnHeader({ children, id }) {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\n  \n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      {...attributes} \n      {...listeners}\n      className={`sortable-column-header ${isDragging ? 'dragging' : ''}`}\n    >\n      {children} ::\n    </div>\n  );\n}\n\n// Draggable Section Header Component for Comments and Totals\nfunction DraggableSectionHeader({ children, id }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className=\"section-header\"\n      {...attributes} \n      {...listeners} \n      title=\"Drag to reorder sections\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: '' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: '' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: '' }\n  ]);\n\n  // Debug: Log company fields state changes\n  useEffect(() => {\n    console.log('🔄 Company fields state updated:', companyFields.map(f => ({ id: f.id, label: f.label })));\n  }, [companyFields]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: '' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: '' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: '' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: '' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: '' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([\n    { id: 'subtotal', label: 'SUBTOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true },\n    { id: 'tax', label: 'TAX:', placeholder: '$0.00', value: '' },\n    { id: 'shipping', label: 'SHIPPING:', placeholder: '$0.00', value: '' },\n    { id: 'other', label: 'OTHER:', placeholder: '$0.00', value: '' },\n    { id: 'total', label: 'TOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true }\n  ]);\n\n\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChange('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      showNotification(`🗑️ Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n  \n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n  // UI toggle: show field pills (placeholders) vs live values\n  const [showFieldPills, setShowFieldPills] = useState(false);\n\n  // When showing field pills, set data-placeholder attributes to NS-style tokens\n  useEffect(() => {\n    if (!showFieldPills) return;\n\n    const setPH = (selector, token) => {\n      const el = document.querySelector(selector);\n      if (el) el.setAttribute('data-placeholder', token);\n    };\n\n    // Company\n    setPH('#company-name, [data-field=\"company-name\"] .editable-field', '$company_name');\n    setPH('#company-address, [data-field=\"company-address\"] .editable-field', '$company_address');\n    setPH('#company-city-state, [data-field=\"company-city-state\"] .editable-field', '$company_city_state');\n    setPH('#company-phone, [data-field=\"company-phone\"] .editable-field', '$phone');\n    setPH('#company-fax, [data-field=\"company-fax\"] .editable-field', '$fax');\n    setPH('#company-website, [data-field=\"company-website\"] .editable-field', '$website');\n\n    // PO header\n    setPH('#po-date, [data-field=\"po-date\"] .editable-field, [data-field=\"po-date\"]', '$po_date');\n    setPH('#po-number, [data-field=\"po-number\"] .editable-field, [data-field=\"po-number\"]', '$po_number');\n\n    // Vendor\n    setPH('#vendor-company, [data-field=\"vendor-company\"] .editable-field', '$vendor_company');\n    setPH('#vendor-contact, [data-field=\"vendor-contact\"] .editable-field', '$vendor_contact');\n    setPH('#vendor-address, [data-field=\"vendor-address\"] .editable-field', '$vendor_address');\n    setPH('#vendor-city-state, [data-field=\"vendor-city-state\"] .editable-field', '$vendor_city_state');\n    setPH('#vendor-phone, [data-field=\"vendor-phone\"] .editable-field', '$vendor_phone');\n\n    // Ship-To\n    setPH('#ship-to-name, [data-field=\"ship-to-name\"] .editable-field', '$ship_to_name');\n    setPH('#ship-to-company, [data-field=\"ship-to-company\"] .editable-field', '$ship_to_company');\n    setPH('#ship-to-address, [data-field=\"ship-to-address\"] .editable-field', '$ship_to_address');\n    setPH('#ship-to-city-state, [data-field=\"ship-to-city-state\"] .editable-field', '$ship_to_city_state');\n    setPH('#ship-to-phone, [data-field=\"ship-to-phone\"] .editable-field', '$ship_to_phone');\n\n    // Shipping details\n    setPH('.shipping-details [data-field=\"requisitioner\"] .editable-field', '$requisitioner');\n    setPH('.shipping-details [data-field=\"shipVia\"] .editable-field', '$ship_via');\n    setPH('.shipping-details [data-field=\"fob\"] .editable-field', '$fob');\n    setPH('.shipping-details [data-field=\"shippingTerms\"] .editable-field', '$shipping_terms');\n\n    // Line items (first 5 rows)\n    for (let i = 1; i <= 5; i++) {\n      setPH(`.itemtable tbody tr:nth-child(${i}) td[data-column=\"itemNumber\"] .editable-field`, `$item_number${i}`);\n      setPH(`.itemtable tbody tr:nth-child(${i}) td[data-column=\"description\"] .editable-field`, `$description${i}`);\n      setPH(`.itemtable tbody tr:nth-child(${i}) td[data-column=\"qty\"] .editable-field`, `$qty${i}`);\n      setPH(`.itemtable tbody tr:nth-child(${i}) td[data-column=\"rate\"] .editable-field`, `$rate${i}`);\n      setPH(`.itemtable tbody tr:nth-child(${i}) td[data-column=\"amount\"] .editable-field`, `$amount${i}`);\n    }\n\n    // Totals (editable ones)\n    setPH('.totals-section .total-row[data-field=\"tax\"] .editable-field', '$tax');\n    setPH('.totals-section .total-row[data-field=\"shipping\"] .editable-field', '$shipping');\n    setPH('.totals-section .total-row[data-field=\"other\"] .editable-field', '$other');\n\n    // Comments & contact\n    setPH('.comments-content .editable-field', '$comments');\n    setPH('.contact-section .editable-field', '$contact_info');\n  }, [showFieldPills]);\n  \n  // Function to display XML output in a modal\n  const displayXMLOutput = (xml) => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n  \n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n  \n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n  \n  // Function to download XML file\n  const downloadXML = () => {\n    const blob = new Blob([xmlOutput], { type: 'application/xml' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${purchaseOrderFields.find(f => f.id === 'po-number')?.value || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // =========================================================================\n  // AI SUGGESTIONS\n  // =========================================================================\n  const { getFieldSuggestions } = useAIProvider();\n\n  const applySuggestionsToFields = (suggestionsMap, fields) => {\n    if (!Array.isArray(fields)) return fields;\n    return fields.map(f => {\n      const newVal = suggestionsMap?.[f.id];\n      if (typeof newVal === 'string') {\n        return { ...f, value: newVal };\n      }\n      return f;\n    });\n  };\n\n  const handleAIFill = async () => {\n    try {\n      showNotification('🤖 Fetching AI suggestions...', 'info');\n\n      const payload = {\n        context: 'purchase_order',\n        companyFields,\n        purchaseOrderFields,\n        vendorFields,\n        shipToFields,\n        shippingFields: [\n          { id: 'requisitioner', label: 'Requisitioner name' },\n          { id: 'shipVia', label: 'Shipping method' },\n          { id: 'fob', label: 'FOB terms' },\n          { id: 'shippingTerms', label: 'Shipping terms' }\n        ]\n      };\n\n      const { suggestions } = await getFieldSuggestions(payload);\n      try {\n        console.debug('🧪 AI suggestions keys:', Object.keys(suggestions || {}));\n        // Preview a few critical values to verify mapping\n        console.debug('🧪 AI preview:', {\n          company: {\n            name: suggestions?.['company-name'],\n            phone: suggestions?.['company-phone']\n          },\n          po: {\n            date: suggestions?.['po-date'],\n            number: suggestions?.['po-number']\n          },\n          shipping: {\n            requisitioner: suggestions?.requisitioner,\n            shipVia: suggestions?.shipVia\n          },\n          totals: {\n            subtotal: suggestions?.subtotal,\n            tax: suggestions?.tax,\n            total: suggestions?.total\n          },\n          line1: {\n            item: suggestions?.itemNumber1,\n            desc: suggestions?.description1,\n            qty: suggestions?.qty1,\n            rate: suggestions?.rate1,\n            amount: suggestions?.amount1\n          }\n        });\n      } catch {}\n\n      // 1) Apply to Section 1–3 states (company/po/vendor/ship-to) with mapping logs\n      setCompanyFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(companyFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setPurchaseOrderFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(purchaseOrderFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setVendorFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(vendorFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setShipToFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(shipToFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // 2) Shipping details (DOM spans)\n      const write = (el, val) => { if (el && typeof val === 'string') el.textContent = val; };\n\n      const shipSelectors = (key) => [\n        `.shipping-details [data-field=\"${key}\"] .editable-field`,\n        `.shipping-field[data-field=\"${key}\"] .editable-field`,\n        `#shipping-${key}`,\n        `.shipping-field-${key} .editable-field`\n      ];\n\n      const shipOrder = ['requisitioner','shipVia','fob','shippingTerms'];\n      shipOrder.forEach((key, idx) => {\n        let el = null, used = '';\n        for (const sel of shipSelectors(key)) {\n          el = document.querySelector(sel);\n          if (el) { used = sel; break; }\n        }\n        // Fallback to positional selector used in your JSX\n        if (!el) {\n          const nth = idx + 1; // 1-based\n          // Prefer :nth-of-type within container to ignore headers\n          const selA = `.shipping-details .shipping-field:nth-of-type(${nth}) .editable-field`;\n          el = document.querySelector(selA);\n          if (el) {\n            used = selA;\n          } else {\n            // Last resort: original child-based selector\n            const selB = `.shipping-field:nth-child(${nth}) .editable-field`;\n            el = document.querySelector(selB);\n            if (el) used = selB;\n          }\n        }\n        write(el, suggestions[key]);\n        try {\n          const count = document.querySelectorAll('.shipping-details .shipping-field').length;\n          console.debug('🧭 map(shippingDetails):', { key, selector: used || '(not found)', value: suggestions[key], fieldsInDOM: count });\n        } catch {}\n      });\n\n      // 3) Line items (first 3 rows only)\n      // Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\n      const setCell = (row, col, val) => {\n        const selector = `.itemtable tbody tr:nth-child(${row}) td[data-column=\"${col}\"] .editable-field`;\n        const cell = document.querySelector(selector);\n        if (cell && typeof val === 'string') {\n          cell.textContent = val;\n        }\n        try { console.debug('🧭 map(lineItem):', { row, col, selector, value: val }); } catch {}\n      };\n\n      const li = (i, k) => suggestions?.[`${k}${i}`];\n\n      for (let i = 1; i <= 3; i++) {\n        setCell(i, 'itemNumber', li(i, 'itemNumber'));\n        setCell(i, 'description', li(i, 'description'));\n        setCell(i, 'qty', li(i, 'qty'));\n        setCell(i, 'rate', li(i, 'rate'));\n        setCell(i, 'amount', li(i, 'amount'));\n      }\n\n      // 4) Totals (state + DOM)\n      setTotalsFields(prev => {\n        const map = {\n          subtotal: suggestions.subtotal,\n          tax: suggestions.tax,\n          shipping: suggestions.shipping,\n          other: suggestions.other,\n          total: suggestions.total,\n        };\n        const next = prev.map(f => (map[f.id] ? { ...f, value: map[f.id] } : f));\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && map[id] !== undefined) {\n              console.debug('🧭 map(totalsFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // Write editable totals into DOM for non-calculated rows\n      const domTotals = (field) => document.querySelector(`.totals-section .total-row[data-field=\"${field}\"] .editable-field`);\n      ['tax','shipping','other'].forEach(key => {\n        const sel = `.totals-section .total-row[data-field=\"${key}\"] .editable-field`;\n        write(domTotals(key), suggestions[key]);\n        try { console.debug('🧭 map(totalsDOM):', { key, selector: sel, value: suggestions[key] }); } catch {}\n      });\n\n      // Calculated-looking spans (subtotal, total) in your layout use .calculated-field\n      const calcTotal = document.querySelector(`.totals-section .total-row[data-field=\"total\"] .total-field`);\n      const calcSub   = document.querySelector(`.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`);\n      write(calcSub, suggestions.subtotal);\n      write(calcTotal, suggestions.total);\n      try {\n        console.debug('🧭 map(totalsDOM):', { key: 'subtotal', selector: `.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`, value: suggestions.subtotal });\n        console.debug('🧭 map(totalsDOM):', { key: 'total', selector: `.totals-section .total-row[data-field=\"total\"] .total-field`, value: suggestions.total });\n      } catch {}\n\n      // 5) Comments, Contact Info (DOM)\n      const commentsEl = document.querySelector('.comments-content .editable-field');\n      const contactEl  = document.querySelector('.contact-section .editable-field');\n      write(commentsEl, suggestions.comments);\n      write(contactEl, suggestions.contactInfo);\n      try {\n        console.debug('🧭 map(comments):', { selector: '.comments-content .editable-field', value: suggestions.comments });\n        console.debug('🧭 map(contactInfo):', { selector: '.contact-section .editable-field', value: suggestions.contactInfo });\n      } catch {}\n\n      // 6) Bump timestamps\n      updateCompanyFieldsTimestamp();\n      updatePurchaseOrderFieldsTimestamp();\n\n      showNotification('✅ AI suggestions applied', 'success');\n    } catch (e) {\n      console.error('AI fill failed:', e);\n      showNotification(`❌ AI fill failed: ${e.message}`, 'error');\n    }\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n  \n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('📄 Starting XML generation...');\n      \n      // Capture current field values first\n      const capturedData = captureFieldValues();\n      \n      // Prepare data for XML generation\n      // Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\n      const headerSections = Array.from(document.querySelectorAll('.header-section .sortable-section'));\n      const visualSections1And2 = headerSections\n        .map(el => el.id)\n        .filter(id => id === 'section1' || id === 'section2');\n      const sections1And2ForExport = (visualSections1And2.length === 2) ? visualSections1And2 : sections1And2Order;\n      \n      // Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\n      const vendorShipToSections = Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));\n      const visualSections3And4 = vendorShipToSections\n        .map(el => el.id)\n        .filter(id => id === 'section3' || id === 'section4');\n      const sections3And4ForExport = (visualSections3And4.length === 2) ? visualSections3And4 : vendorShipToSectionOrder;\n      \n      // Helpers for DOM reads\n      const getText = (sel) => document.querySelector(sel)?.textContent?.trim() || '';\n      \n      // Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\n      const normalizedLineItems = (capturedData.lineItems || []).map(row => ({\n        // original UI keys\n        itemNumber: row.itemNumber || '',\n        description: row.description || '',\n        qty: row.qty || row.quantity || '',\n        rate: row.rate || row.unitPrice || '',\n        amount: row.amount || row.total || '',\n        // template-expected keys\n        quantity: row.quantity || row.qty || '',\n        unitPrice: row.unitPrice || row.rate || '',\n        total: row.total || row.amount || ''\n      }));\n\n      const exportData = {\n        ...capturedData,\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2ForExport, // Use current visual order to ensure XML matches UI\n          sections3And4: sections3And4ForExport, // Use current visual order to ensure XML matches UI\n          sections5And6: sections5And6Order, // Use actual state for sections 5&6\n          sections3And4And5And6: vendorShipToAndShippingDetailsOrder, // Vendor-ShipTo and Shipping Details order\n          sections8And9: commentsTotalsSectionOrder, // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder // Use actual state for line item columns\n        },\n        // CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\n        fieldOrder: {\n          company: companyFieldOrder, // Preserve company field order independently of section position\n          purchaseOrder: purchaseOrderFieldOrder, // Preserve PO field order independently of section position\n          vendor: vendorFields.map(f => f.id), // Vendor field order\n          shipTo: shipToFields.map(f => f.id) // Ship-to field order\n        },\n        // Add normalized line items (support both key schemes)\n        lineItems: normalizedLineItems,\n        // Shipping details (prefer data-field; fall back handled in XML builder too)\n        requisitioner: getText('.shipping-details [data-field=\"requisitioner\"] .editable-field'),\n        shipVia: getText('.shipping-details [data-field=\"shipVia\"] .editable-field'),\n        fob: getText('.shipping-details [data-field=\"fob\"] .editable-field'),\n        shippingTerms: getText('.shipping-details [data-field=\"shippingTerms\"] .editable-field'),\n        // Totals: read what the user sees\n        subtotal: getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field') || '$0.00',\n        tax: getText('.totals-section .total-row[data-field=\"tax\"] .editable-field') || '$0.00',\n        shipping: getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field') || '$0.00',\n        other: getText('.totals-section .total-row[data-field=\"other\"] .editable-field') || '$0.00',\n        total: getText('.totals-section .total-row[data-field=\"total\"] .total-field') || '$0.00',\n        comments: getText('.comments-content .editable-field'),\n        contactInfo: getText('.contact-section .editable-field')\n      };\n      \n      console.debug('🔎 Export DOM reads:', {\n        requisitioner: exportData.requisitioner,\n        shipVia: exportData.shipVia,\n        fob: exportData.fob,\n        shippingTerms: exportData.shippingTerms,\n        subtotal: exportData.subtotal,\n        tax: exportData.tax,\n        shipping: exportData.shipping,\n        other: exportData.other,\n        total: exportData.total\n      });\n\n      console.log('📄 Export data prepared:', exportData);\n      console.log('🔀 Section order being sent to XML:', exportData.sectionOrder);\n      console.log('🔀 Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('🔀 Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('🔀 Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n      console.log('🔀 Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('🔀 Line items data:', exportData.lineItems);\n      \n      // CRITICAL: Log field order information\n      console.log('🔀 Field order being sent to XML:', exportData.fieldOrder);\n      console.log('🔀 Company field order:', exportData.fieldOrder.company);\n      console.log('🔀 Purchase order field order:', exportData.fieldOrder.purchaseOrder);\n      console.log('🔀 Vendor field order:', exportData.fieldOrder.vendor);\n      console.log('🔀 Ship-to field order:', exportData.fieldOrder.shipTo);\n      \n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n      \n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n      \n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      \n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n      \n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n\n\n\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setCompanyFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('🔄 Company field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('🔄 Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setPurchaseOrderFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('🔄 Purchase order field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('🔄 Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for vendor/ship-to section order\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n  \n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n  \n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5', 'section6']);\n  \n  // State for vendor-ship-to and shipping-details sections order\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['sections3And4', 'sections5And6']);\n  \n  // CRITICAL: Add field order state management (same pattern as section order)\n  // State for company field order (preserves drag-and-drop order independently of section position)\n  const [companyFieldOrder, setCompanyFieldOrder] = useState([]);\n  \n  // State for purchase order field order (preserves drag-and-drop order independently of section position)\n  const [purchaseOrderFieldOrder, setPurchaseOrderFieldOrder] = useState([]);\n  \n  // Initialize field order states with current field IDs\n  React.useEffect(() => {\n    setCompanyFieldOrder(companyFields.map(field => field.id));\n  }, [companyFields]);\n  \n  React.useEffect(() => {\n    setPurchaseOrderFieldOrder(purchaseOrderFields.map(field => field.id));\n  }, [purchaseOrderFields]);\n  \n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState([\n    'itemNumber',\n    'description', \n    'qty',\n    'rate',\n    'amount'\n  ]);\n  \n  // Log line item column order changes\n  useEffect(() => {\n    console.log('🔀 Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', { active: active.id, over: active.id });\n      \n      setSections1And2Order(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New section order:', newOrder);\n        \n        // CRITICAL: Only swap section positions, preserve field content and order\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2 (POSITION ONLY)');\n          console.log('🔄 Company fields remain company fields (with custom order)');\n          console.log('🔄 Purchase Order fields remain PO fields (with custom order)');\n          \n          showNotification('🔄 Sections swapped! (Field content preserved)', 'info');\n          console.log('🔄 Sections swapped via drag & drop! (Field content preserved)');\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1 (POSITION ONLY)');\n          console.log('🔄 Company fields remain company fields (with custom order)');\n          console.log('🔄 Purchase Order fields remain PO fields (with custom order)');\n          \n          showNotification('🔄 Sections swapped! (Field content preserved)', 'info');\n          console.log('🔄 Sections swapped via drag & drop! (Field content preserved)');\n        }\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', { active: active.id, over: over.id });\n      \n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New sections 5&6 order:', newOrder);\n        \n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Line item column swap detected!', { active: active.id, over: over.id });\n      \n      setLineItemColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('🔄 Previous line item column order:', items);\n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('🔄 New line item column order:', newOrder);\n        showNotification('🔄 Line item columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No line item column swap - same position');\n    }\n  };\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor/ship-to order:', newOrder);\n        \n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('🔄 Previous vendor-shipTo + shipping details order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor-shipTo + shipping details order:', newOrder);\n        \n        showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n              showNotification('🔄 Sections swapped!', 'info');\n    \n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n    };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n    \n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n    \n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n    \n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    \n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    \n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n    \n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n    \n    // Capture company field values - PRESERVE CURRENT ORDER\n    console.log('🔍 DEBUG: Current company fields order before capture:', companyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    console.log('🔍 DEBUG: Updated company fields order after capture:', updatedCompanyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('📝 Line items captured:', capturedLineItems);\n    \n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n      \n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      \n      console.log(`📝 Totals field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    \n    console.log('📝 Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n\n\n\n  return (\n    <div className={`purchase-order-container ${showFieldPills ? 'show-field-pills' : ''}`}>\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n        <div style={{ display: 'flex', alignItems: 'center', gap: 10, marginTop: 8 }}>\n          <label htmlFor=\"toggle-pills\"><strong>Show Field Pills</strong></label>\n          <input\n            id=\"toggle-pills\"\n            type=\"checkbox\"\n            checked={showFieldPills}\n            onChange={(e) => setShowFieldPills(e.target.checked)}\n          />\n        </div>\n      </header>\n\n      {/* Real-time Status Indicator removed per request */}\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section\">\n              {/* Section-level Drag and Drop */}\n              <DndContext \n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragEnd={handleSectionDragEnd}\n              >\n                <SortableContext \n                  items={sections1And2Order}\n                  strategy={verticalListSortingStrategy}\n                >\n                  {/* CRITICAL: Render sections dynamically based on sections1And2Order state */}\n                  {sections1And2Order.map(sectionId => {\n                    if (sectionId === 'section1') {\n                      return (\n                        <div key=\"section1\" id=\"section1\" className=\"sortable-section\">\n                          <Section1CompanyInfo \n                            companyFields={companyFields}\n                            sensors={sensors}\n                            onCompanyDragEnd={handleCompanyDragEnd}\n                            onAddCompanyField={handleAddCompanyField}\n                            onRemoveCompanyField={handleRemoveCompanyField}\n                            onLabelChange={handleCompanyFieldLabelChange}\n                            onContentChange={handleContentChange}\n                            lastModified={lastModified}\n                          />\n                        </div>\n                      );\n                    } else if (sectionId === 'section2') {\n                      return (\n                        <div key=\"section2\" id=\"section2\" className=\"sortable-section\">\n                          <Section2PurchaseOrder \n                            purchaseOrderFields={purchaseOrderFields}\n                            sensors={sensors}\n                            onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                            onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                            onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                            onLabelChange={handlePurchaseOrderFieldLabelChange}\n                            onContentChange={handleContentChange}\n                            lastModified={poLastModified}\n                          />\n                        </div>\n                      );\n                    }\n                    return null;\n                  })}\n                </SortableContext>\n              </DndContext>\n            </div>\n          </div>\n\n          {/* Vendor-ShipTo and Shipping Details Sections (Vertically Swappable) */}\n          <DndContext \n            sensors={sensors}\n            collisionDetection={closestCenter}\n            onDragEnd={handleVendorShipToAndShippingDetailsDragEnd}\n          >\n            <SortableContext \n              items={vendorShipToAndShippingDetailsOrder}\n              strategy={verticalListSortingStrategy}\n            >\n              {vendorShipToAndShippingDetailsOrder.map(sectionId => {\n                if (sectionId === 'sections3And4') {\n                  return (\n                    <DraggableSectionWrapper key=\"sections3And4\" id=\"sections3And4\" sectionNumber=\"3&4\">\n                      {/* Vendor and Ship To Section */}\n                      <Section3VendorShipTo \n                        vendorFields={vendorFields}\n                        shipToFields={shipToFields}\n                        sensors={sensors}\n                        onVendorDragEnd={handleVendorDragEnd}\n                        onShipToDragEnd={handleShipToDragEnd}\n                        onVendorShipToSectionDragEnd={handleVendorShipToSectionDragEnd}\n                        vendorShipToSectionOrder={vendorShipToSectionOrder}\n                      />\n                    </DraggableSectionWrapper>\n                  );\n                } else if (sectionId === 'sections5And6') {\n                  return (\n                    <DraggableSectionWrapper key=\"sections5And6\" id=\"sections5And6\" sectionNumber=\"5&6\">\n                      {/* Shipping Details Section */}\n                      <div className=\"shipping-details\">\n                        <div className=\"section-header\">REQUISITIONER</div>\n                        <div className=\"section-header\">SHIP VIA</div>\n                        <div className=\"section-header\">F.O.B.</div>\n                        <div className=\"section-header\">SHIPPING TERMS</div>\n                        <div className=\"shipping-field\" data-field=\"requisitioner\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Requisitioner name\" /></div>\n                        <div className=\"shipping-field\" data-field=\"shipVia\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping method\" /></div>\n                        <div className=\"shipping-field\" data-field=\"fob\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"FOB terms\" /></div>\n                        <div className=\"shipping-field\" data-field=\"shippingTerms\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping terms\" /></div>\n                      </div>\n                    </DraggableSectionWrapper>\n                  );\n                }\n                return null;\n              })}\n            </SortableContext>\n          </DndContext>\n\n          {/* Items Table */}\n          <DndContext \n            sensors={sensors} \n            collisionDetection={closestCenter} \n            onDragEnd={handleLineItemColumnDragEnd}\n          >\n            <SortableContext items={lineItemColumnOrder} strategy={verticalListSortingStrategy}>\n              <table className=\"itemtable\">\n                <thead>\n                  <tr>\n                    <th></th>\n                    {lineItemColumnOrder.map((columnId) => {\n                      const columnConfig = {\n                        itemNumber: { label: 'Item#', colSpan: 3 },\n                        description: { label: 'Description', colSpan: 12 },\n                        qty: { label: 'Qty', colSpan: 2 },\n                      rate: { label: 'Rate', colSpan: 3 },\n                        amount: { label: 'Amount', colSpan: 3 }\n                      };\n                      \n                      const config = columnConfig[columnId];\n                      return (\n                        <th key={columnId} colSpan={config.colSpan} className=\"draggable-column-header\">\n                          <SortableColumnHeader id={columnId}>\n                            {config.label}\n                          </SortableColumnHeader>\n                        </th>\n                      );\n                    })}\n                  </tr>\n                </thead>\n                <tbody>\n                  {[1, 2, 3, 4, 5].map((row) => (\n                    <tr key={row} className=\"draggable-row\">\n                      <td></td>\n                      {lineItemColumnOrder.map((columnId) => {\n                        const columnConfig = {\n                          itemNumber: { colSpan: 3, placeholder: 'Item number' },\n                          description: { colSpan: 12, placeholder: 'Item description' },\n                          qty: { colSpan: 2, placeholder: 'Qty' },\n                          rate: { colSpan: 3, placeholder: '$0.00' },\n                          amount: { colSpan: 3, placeholder: '$0.00' }\n                        };\n                        \n                        const config = columnConfig[columnId];\n                        return (\n                          <td key={`${row}-${columnId}`} colSpan={config.colSpan} data-column={columnId}>\n                            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder={config.placeholder} />\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </SortableContext>\n          </DndContext>\n\n          {/* Comments and Totals - Sections 8 & 9 */}\n          <DndContext \n            sensors={sensors} \n            collisionDetection={closestCenter} \n            onDragEnd={handleCommentsTotalsDragEnd}\n          >\n            <SortableContext items={commentsTotalsSectionOrder} strategy={horizontalListSortingStrategy}>\n              <div className=\"comments-totals-section\" style={{ display: 'flex', gap: '20px' }}>\n                {commentsTotalsSectionOrder.map((sectionId) => {\n                  if (sectionId === 'section8') {\n                    return (\n                      <div key=\"section8\" id=\"section8\" className=\"sortable-section comments-section\" style={{ flex: 1 }}>\n                        <DraggableSectionHeader id=\"section8\">\n                          Comments or Special Instructions ::\n                        </DraggableSectionHeader>\n                        <div className=\"section-content\">\n                          <div className=\"comments-content\">\n                            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  } else if (sectionId === 'section9') {\n                    return (\n                      <div key=\"section9\" id=\"section9\" className=\"sortable-section totals-section\" style={{ flex: 1 }}>\n                        <DraggableSectionHeader id=\"section9\">\n                          Totals ::\n                        </DraggableSectionHeader>\n                        <div className=\"section-content\">\n                          <div className=\"total-row\" data-field=\"subtotal\">\n                            <span>SUBTOTAL:</span>\n                            <span className=\"calculated-field\">$0.00</span>\n                          </div>\n                          <div className=\"total-row\" data-field=\"tax\">\n                            <span>TAX:</span>\n                            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                          </div>\n                          <div className=\"total-row\" data-field=\"shipping\">\n                            <span>SHIPPING:</span>\n                            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                          </div>\n                          <div className=\"total-row\" data-field=\"other\">\n                            <span>OTHER:</span>\n                            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                          </div>\n                          <div className=\"total-row total-final\" data-field=\"total\">\n                            <span>TOTAL:</span>\n                            <span className=\"calculated-field total-field\">$0.00</span>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  }\n                  return null;\n                })}\n              </div>\n            </SortableContext>\n          </DndContext>\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <div className=\"contact-content\">\n              <strong>Contact Information:</strong>\n              <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"button-section\">\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'}\n            </button>\n            <button className=\"btn\" onClick={handleAIFill}>\n              🤖 AI Fill\n            </button>\n            <button className=\"btn export-btn\" onClick={exportToXML}>\n              📄 Generate XML\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                📝 Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  🗑️ Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change) => (\n                  <div key={change.id} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">→</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* XML Output Modal */}\n          {showXMLModal && (\n            <div className=\"xml-modal-overlay\" onClick={closeXMLModal}>\n              <div className=\"xml-modal\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"xml-modal-header\">\n                  <h3>📄 Generated XML Output</h3>\n                  <button className=\"xml-modal-close\" onClick={closeXMLModal}>×</button>\n                </div>\n                <div className=\"xml-modal-content\">\n                  <div className=\"xml-output-container\">\n                    <pre className=\"xml-code\">{xmlOutput}</pre>\n                  </div>\n                </div>\n                <div className=\"xml-modal-actions\">\n                  <button className=\"btn copy-btn\" onClick={copyXMLToClipboard}>\n                    📋 Copy XML\n                  </button>\n                  <button className=\"btn download-btn\" onClick={downloadXML}>\n                    📥 Download XML\n                  </button>\n                  <button className=\"btn close-btn\" onClick={closeXMLModal}>\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n\n\n\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}