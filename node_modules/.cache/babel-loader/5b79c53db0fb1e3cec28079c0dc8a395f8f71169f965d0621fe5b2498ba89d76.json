{"ast":null,"code":"import _objectSpread from\"/Users/waleed/Documents/GitHub/Cadbury3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./PurchaseOrderForm.css';import'./section-styles.css';import'./header-colors.css';import'./header-color-picker.css';import HeaderColorPicker from'./components/HeaderColorPicker';import{generatePurchaseOrderXML}from'./templates/PurchaseOrderTemplate';// Import modular components\nimport Section1CompanyInfo from'./components/Section1CompanyInfo';import Section2PurchaseOrder from'./components/Section2PurchaseOrder';import Section3Vendor from'./components/Section3Vendor';import Section4ShipTo from'./components/Section4ShipTo';import AvailableFields from'./components/AvailableFields';import{useAIProvider}from'./hooks/useAIProvider';// Import custom hooks\nimport{useDragAndDropSensors,useCompanyFieldsDragEnd,usePurchaseOrderFieldsDragEnd,useVendorFieldsDragEnd,useShipToFieldsDragEnd}from'./hooks/useDragAndDrop';import{DndContext,closestCenter,useDraggable,useDroppable,rectIntersection}from'@dnd-kit/core';import{SortableContext,verticalListSortingStrategy,horizontalListSortingStrategy,useSortable}from'@dnd-kit/sortable';import{CSS}from'@dnd-kit/utilities';import{arrayMove}from'@dnd-kit/sortable';// Draggable Section Wrapper Component for Sections\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DraggableSectionWrapper(_ref){let{children,id,sectionNumber,isSectionHandleDragging=false,showDragHandle=true}=_ref;const{attributes,listeners,setNodeRef,transform,transition,isDragging}=useSortable({id,data:{type:'section',sectionNumber:sectionNumber}});// Map section numbers to proper CSS classes\nconst getSectionClass=sectionNum=>{switch(sectionNum){case 1:return'section-1-company-info';case 2:return'section-2-purchase-order';default:return\"section-\".concat(sectionNum);}};const style={transform:CSS.Transform.toString(transform),transition,opacity:isDragging?0.6:1,zIndex:isDragging?1000:1,cursor:isDragging?'grabbing':'grab',position:'relative',width:'100%',height:'100%',border:isDragging?'3px solid #ff6b6b':'2px solid #ddd',borderRadius:'8px',backgroundColor:isDragging?'rgba(255, 107, 107, 0.1)':'transparent'};// Log the actual attributes and listeners objects\nconsole.log(\"\\uD83D\\uDD27 Detailed useSortable data for \".concat(id,\":\"),{attributes:attributes,listeners:listeners,setNodeRef:setNodeRef,style:style});// Debug: Check if listeners have the right properties\nif(listeners){console.log(\"\\uD83D\\uDD27 Listeners for \".concat(id,\":\"),{hasOnMouseDown:!!listeners.onMouseDown,hasOnMouseMove:!!listeners.onMouseMove,hasOnMouseUp:!!listeners.onMouseUp,hasOnTouchStart:!!listeners.onTouchStart,hasOnTouchMove:!!listeners.onTouchMove,hasOnTouchEnd:!!listeners.onTouchEnd,listenerKeys:Object.keys(listeners),listenerValues:Object.values(listeners).map(v=>typeof v)});}else{console.log(\"\\u274C No listeners for \".concat(id));}return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style,className:\"sortable-section \".concat(getSectionClass(sectionNumber),\" \").concat(isDragging?'dragging':''),\"data-section\":sectionNumber,\"data-testid\":\"draggable-section-\".concat(id),\"data-dragging\":isDragging},attributes),listeners),{},{onClick:()=>console.log(\"\\uD83D\\uDDB1\\uFE0F Clicked on section \".concat(id)),children:/*#__PURE__*/_jsx(\"div\",{className:\"section-content\",style:{position:'relative',width:'100%',height:'100%'},children:children})}));}// Sortable shipping column header component for shipping details\nfunction SortableShippingColumnHeader(_ref2){let{children,id}=_ref2;const{attributes,listeners,setNodeRef,transform,transition,isDragging}=useSortable({id});const style={transform:CSS.Transform.toString(transform),transition,cursor:'grab',userSelect:'none'};return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style},attributes),listeners),{},{className:\"sortable-column-header \".concat(isDragging?'dragging':''),children:children}));}// Draggable Section Header Component for Comments and Totals\nfunction DraggableSectionHeader(_ref3){let{children,id}=_ref3;const{attributes,listeners,setNodeRef,transform,transition}=useSortable({id});const style={transform:CSS.Transform.toString(transform),transition};return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style,className:\"section-header\"},attributes),listeners),{},{title:\"Drag to reorder sections\",children:children}));}// Main Purchase Order Form Component\nfunction PurchaseOrderForm(){// ============================================================================\n// STATE MANAGEMENT\n// ============================================================================\n// Company fields state for Section 1\nconst[companyFields,setCompanyFields]=useState([{id:'company-name',label:'Company Name:',placeholder:'Enter company name',value:''},{id:'company-address',label:'Street Address:',placeholder:'Enter street address',value:''},{id:'company-city-state',label:'City, ST ZIP:',placeholder:'City, State ZIP',value:''},{id:'company-phone',label:'Phone:',placeholder:'(555) 123-4567',value:''},{id:'company-fax',label:'Fax:',placeholder:'(555) 123-4567',value:''},{id:'company-website',label:'Website:',placeholder:'www.example.com',value:''}]);// Debug: Log company fields state changes\nuseEffect(()=>{console.log('🔄 Company fields state updated:',companyFields.map(f=>({id:f.id,label:f.label})));},[companyFields]);// Track last modification time for company fields\nconst[lastModified,setLastModified]=useState(new Date().toISOString());// Track last modification time for purchase order fields\nconst[poLastModified,setPoLastModified]=useState(new Date().toISOString());// ============================================================================\n// SIDEBAR MANAGEMENT\n// ============================================================================\n// State for sidebar visibility on mobile\nconst[sidebarVisible,setSidebarVisible]=useState(true);// Toggle sidebar visibility\nconst toggleSidebar=()=>{setSidebarVisible(!sidebarVisible);};// Helper: slugify and ensure unique id for new fields\nconst generateUniqueFieldId=(baseLabel,existingIds)=>{const slugBase=String(baseLabel).toLowerCase().replace(/[^a-z0-9]+/g,'-').replace(/(^-|-$)/g,'');let candidate=slugBase||'field';let counter=1;while(existingIds.includes(candidate)){candidate=\"\".concat(slugBase,\"-\").concat(counter++);}return candidate;};// ============================================================================\n// DROPPABLE ZONES\n// ============================================================================\n// dnd-kit: droppable wrapper for sections\nconst DroppableZone=_ref4=>{let{id,children}=_ref4;const{isOver,setNodeRef}=useDroppable({id,data:{type:'drop-zone',accepts:'palette-fields'}});console.log(\"\\uD83C\\uDFAF Droppable zone \".concat(id,\" - isOver: \").concat(isOver));return/*#__PURE__*/_jsx(\"div\",{ref:setNodeRef,className:\"droppable-zone \".concat(isOver?'droppable-over':''),\"data-zone-id\":id,\"data-is-over\":isOver,style:{position:'relative',minHeight:'200px',border:isOver?'3px solid #10b981':'2px dashed #3b82f6',borderRadius:'8px',backgroundColor:isOver?'rgba(16, 185, 129, 0.1)':'transparent',transition:'all 0.2s ease'},children:children});};// Special droppable component for Vendor/Ship To sections\nconst VendorShipToDroppableInline=_ref5=>{let{id,children}=_ref5;const{isOver,setNodeRef}=useDroppable({id});console.log(\"\\uD83C\\uDFAF Droppable zone \".concat(id,\" registered, isOver: \").concat(isOver));return/*#__PURE__*/_jsx(\"div\",{ref:setNodeRef,className:\"droppable-zone \".concat(isOver?'droppable-over':''),style:{padding:'10px',position:'relative',border:'3px solid green',backgroundColor:isOver?'rgba(0, 255, 0, 0.1)':'rgba(0, 255, 0, 0.05)'},children:children});};// Handle palette drag end to add fields to target sections\nconst handlePaletteDragEnd=event=>{var _active$data;const{active,over}=event;console.log('🎯 Palette drag end:',{active,over});if(!(active!==null&&active!==void 0&&(_active$data=active.data)!==null&&_active$data!==void 0&&_active$data.current)||!(over!==null&&over!==void 0&&over.id)){console.log('❌ Missing active data or over id');return;}const data=active.data.current;if(data.source!=='palette'){console.log('❌ Not a palette source:',data.source);return;}const baseLabel=data.label;console.log('🎯 Dropping on zone:',over.id);if(over.id==='drop-company'){console.log('✅ Adding to company section');const existingIds=companyFields.map(f=>f.id);const id=generateUniqueFieldId(baseLabel,existingIds);const newField={id,label:\"\".concat(baseLabel,\":\"),placeholder:baseLabel,value:''};handleAddCompanyField(newField);showNotification(\"\\u2795 Added \\\"\".concat(baseLabel,\"\\\" to Company Info\"),'success');}else if(over.id==='drop-po'){console.log('✅ Adding to purchase order section');const existingIds=purchaseOrderFields.map(f=>f.id);const id=generateUniqueFieldId(baseLabel,existingIds);const newField={id,label:\"\".concat(baseLabel,\":\"),placeholder:baseLabel,value:''};handleAddPurchaseOrderField(newField);showNotification(\"\\u2795 Added \\\"\".concat(baseLabel,\"\\\" to Purchase Order\"),'success');}else if(over.id==='drop-vendor'){console.log('✅ Adding to vendor section');const existingIds=vendorFields.map(f=>f.id);const id=generateUniqueFieldId(baseLabel,existingIds);const newField={id,label:\"\".concat(baseLabel,\":\"),placeholder:baseLabel,value:''};handleAddVendorField(newField);showNotification(\"\\u2795 Added \\\"\".concat(baseLabel,\"\\\" to Vendor section\"),'success');}else if(over.id==='drop-ship-to'){console.log('✅ Adding to ship-to section');const existingIds=shipToFields.map(f=>f.id);const id=generateUniqueFieldId(baseLabel,existingIds);const newField={id,label:\"\".concat(baseLabel,\":\"),placeholder:baseLabel,value:''};handleAddShipToField(newField);showNotification(\"\\u2795 Added \\\"\".concat(baseLabel,\"\\\" to Ship-To section\"),'success');}else if(over.id==='drop-zone-vendor-ship-to'||over.id==='drop-vendor-ship-to'){console.log('✅ Adding to vendor section (legacy support)');// Legacy support - add to vendor section by default\nconst existingIds=vendorFields.map(f=>f.id);const id=generateUniqueFieldId(baseLabel,existingIds);const newField={id,label:\"\".concat(baseLabel,\":\"),placeholder:baseLabel,value:''};handleAddVendorField(newField);showNotification(\"\\u2795 Added \\\"\".concat(baseLabel,\"\\\" to Vendor section\"),'success');}else{console.log('❌ Unknown drop zone:',over.id);}};// Purchase Order fields state for Section 2\nconst[purchaseOrderFields,setPurchaseOrderFields]=useState([{id:'po-title',label:'Purchase Order',placeholder:'',isTitle:true,value:'Purchase Order'},{id:'po-date',label:'DATE:',placeholder:'MM/DD/YYYY',value:''},{id:'po-number',label:'PO #:',placeholder:'PO#123456',value:''}]);// Vendor fields state for Section 3\nconst[vendorFields,setVendorFields]=useState([{id:'vendor-company',label:'Company:',placeholder:'Vendor name',value:''},{id:'vendor-contact',label:'Contact:',placeholder:'Contact person',value:''},{id:'vendor-address',label:'Address:',placeholder:'Street address',value:''},{id:'vendor-city-state',label:'City/State:',placeholder:'City, ST ZIP',value:''},{id:'vendor-phone',label:'Phone:',placeholder:'(555) 123-4567',value:''}]);// Ship To fields state for Section 3\nconst[shipToFields,setShipToFields]=useState([{id:'ship-to-name',label:'Name:',placeholder:'Contact name',value:''},{id:'ship-to-company',label:'Company:',placeholder:'Shipping company',value:''},{id:'ship-to-address',label:'Address:',placeholder:'Street address',value:''},{id:'ship-to-city-state',label:'City/State:',placeholder:'City, ST ZIP',value:''},{id:'ship-to-phone',label:'Phone:',placeholder:'(555) 123-4567',value:''}]);// Totals fields state for Section 9\nconst[totalsFields,setTotalsFields]=useState([{id:'subtotal',label:'SUBTOTAL:',placeholder:'$0.00',value:'$0.00',isCalculated:true},{id:'tax',label:'TAX:',placeholder:'$0.00',value:''},{id:'shipping',label:'SHIPPING:',placeholder:'$0.00',value:''},{id:'other',label:'OTHER:',placeholder:'$0.00',value:''},{id:'total',label:'TOTAL:',placeholder:'$0.00',value:'$0.00',isCalculated:true}]);// ============================================================================\n// CUSTOM HOOKS\n// ============================================================================\nconst sensors=useDragAndDropSensors();const handleVendorDragEnd=useVendorFieldsDragEnd(setVendorFields);const handleShipToDragEnd=useShipToFieldsDragEnd(setShipToFields);// ============================================================================\n// COMPANY FIELD MANAGEMENT FUNCTIONS\n// ============================================================================\n// Helper function to update timestamp when company fields change\nconst updateCompanyFieldsTimestamp=()=>{setLastModified(new Date().toISOString());};// Add new company field\nconst handleAddCompanyField=newField=>{setCompanyFields(prevFields=>[...prevFields,newField]);updateCompanyFieldsTimestamp();logChange('field-add',newField.id,'',newField.label,'company');console.log('➕ Added new company field:',newField);};// Remove company field\nconst handleRemoveCompanyField=fieldId=>{setCompanyFields(prevFields=>{const fieldToRemove=prevFields.find(field=>field.id===fieldId);showNotification(\"\\uD83D\\uDDD1\\uFE0F Removed company field: \\\"\".concat(fieldToRemove===null||fieldToRemove===void 0?void 0:fieldToRemove.label,\"\\\"\"),'warning');console.log('🗑️ Removed company field:',fieldToRemove);return prevFields.filter(field=>field.id!==fieldId);});updateCompanyFieldsTimestamp();};// ============================================================================\n// ENHANCED CHANGE TRACKING\n// ============================================================================\n// State for tracking all changes\nconst[changeHistory,setChangeHistory]=useState([]);const[isPreviewMode,setIsPreviewMode]=useState(false);const[lastExportTime,setLastExportTime]=useState(null);// Function to log changes with timestamps\nconst logChange=(changeType,fieldId,oldValue,newValue,section)=>{const change={id:Date.now(),timestamp:new Date().toISOString(),type:changeType,fieldId,oldValue,newValue,section};setChangeHistory(prev=>[change,...prev.slice(0,49)]);// Keep last 50 changes\nconsole.log('📝 Change logged:',change);};// Enhanced field update functions with change logging\nconst handleCompanyFieldLabelChange=(fieldId,newLabel)=>{setCompanyFields(prevFields=>{const oldField=prevFields.find(field=>field.id===fieldId);const oldLabel=oldField?oldField.label:'';logChange('label-change',fieldId,oldLabel,newLabel,'company');return prevFields.map(field=>field.id===fieldId?_objectSpread(_objectSpread({},field),{},{label:newLabel}):field);});updateCompanyFieldsTimestamp();};const handlePurchaseOrderFieldLabelChange=(fieldId,newLabel)=>{setPurchaseOrderFields(prevFields=>{const oldField=prevFields.find(field=>field.id===fieldId);const oldLabel=oldField?oldField.label:'';logChange('label-change',fieldId,oldLabel,newLabel,'purchase-order');return prevFields.map(field=>field.id===fieldId?_objectSpread(_objectSpread({},field),{},{label:newLabel}):field);});updatePurchaseOrderFieldsTimestamp();};// Function to handle content changes in editable fields\nconst handleContentChange=(fieldId,newContent,section)=>{// Find the field and log the change\nlet oldValue='';let fieldType='';if(section==='company'){const field=companyFields.find(f=>f.id===fieldId);if(field){oldValue=field.value||'';fieldType=field.label;}}else if(section==='purchase-order'){const field=purchaseOrderFields.find(f=>f.id===fieldId);if(field){oldValue=field.value||'';fieldType=field.label;}}else if(section==='vendor'){const field=vendorFields.find(f=>f.id===fieldId);if(field){oldValue=field.value||'';fieldType=field.label;}}else if(section==='ship-to'){const field=shipToFields.find(f=>f.id===fieldId);if(field){oldValue=field.value||'';fieldType=field.label;}}if(oldValue!==newContent){logChange('content-change',fieldId,oldValue,newContent,section);}};// Function to toggle preview mode\nconst togglePreviewMode=()=>{setIsPreviewMode(!isPreviewMode);};// Function to clear change history\nconst clearChangeHistory=()=>{setChangeHistory([]);console.log('🗑️ Change history cleared');};// ============================================================================\n// XML DISPLAY MODAL\n// ============================================================================\n// State for XML modal\nconst[showXMLModal,setShowXMLModal]=useState(false);const[xmlOutput,setXmlOutput]=useState('');// Function to display XML output in a modal\nconst displayXMLOutput=xml=>{setXmlOutput(xml);setShowXMLModal(true);};// Function to close XML modal\nconst closeXMLModal=()=>{setShowXMLModal(false);setXmlOutput('');};// Function to copy XML to clipboard\nconst copyXMLToClipboard=()=>{navigator.clipboard.writeText(xmlOutput).then(()=>{showNotification('📋 XML copied to clipboard!','success');}).catch(()=>{showNotification('❌ Failed to copy XML to clipboard','error');});};// Function to download XML file\nconst downloadXML=()=>{var _purchaseOrderFields$;const blob=new Blob([xmlOutput],{type:'application/xml'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=\"purchase-order-\".concat(((_purchaseOrderFields$=purchaseOrderFields.find(f=>f.id==='po-number'))===null||_purchaseOrderFields$===void 0?void 0:_purchaseOrderFields$.value)||'unknown',\".xml\");document.body.appendChild(a);a.click();document.body.removeChild(a);window.URL.revokeObjectURL(url);showNotification('📥 XML downloaded successfully!','success');};// =========================================================================\n// AI SUGGESTIONS\n// =========================================================================\nconst{getFieldSuggestions}=useAIProvider();const applySuggestionsToFields=(suggestionsMap,fields)=>{if(!Array.isArray(fields))return fields;return fields.map(f=>{const newVal=suggestionsMap===null||suggestionsMap===void 0?void 0:suggestionsMap[f.id];if(typeof newVal==='string'){return _objectSpread(_objectSpread({},f),{},{value:newVal});}return f;});};const handleAIFill=async()=>{try{showNotification('🤖 Fetching AI suggestions...','info');const payload={context:'purchase_order',companyFields,purchaseOrderFields,vendorFields,shipToFields,shippingFields:[{id:'requisitioner',label:'Requisitioner name'},{id:'shipVia',label:'Shipping method'},{id:'fob',label:'FOB terms'},{id:'shippingTerms',label:'Shipping terms'}]};const{suggestions}=await getFieldSuggestions(payload);try{console.debug('🧪 AI suggestions keys:',Object.keys(suggestions||{}));// Preview a few critical values to verify mapping\nconsole.debug('🧪 AI preview:',{company:{name:suggestions===null||suggestions===void 0?void 0:suggestions['company-name'],phone:suggestions===null||suggestions===void 0?void 0:suggestions['company-phone']},po:{date:suggestions===null||suggestions===void 0?void 0:suggestions['po-date'],number:suggestions===null||suggestions===void 0?void 0:suggestions['po-number']},shipping:{requisitioner:suggestions===null||suggestions===void 0?void 0:suggestions.requisitioner,shipVia:suggestions===null||suggestions===void 0?void 0:suggestions.shipVia},totals:{subtotal:suggestions===null||suggestions===void 0?void 0:suggestions.subtotal,tax:suggestions===null||suggestions===void 0?void 0:suggestions.tax,total:suggestions===null||suggestions===void 0?void 0:suggestions.total},line1:{item:suggestions===null||suggestions===void 0?void 0:suggestions.itemNumber1,desc:suggestions===null||suggestions===void 0?void 0:suggestions.description1,qty:suggestions===null||suggestions===void 0?void 0:suggestions.qty1,rate:suggestions===null||suggestions===void 0?void 0:suggestions.rate1,amount:suggestions===null||suggestions===void 0?void 0:suggestions.amount1}});}catch(_unused){}// 1) Apply to Section 1–3 states (company/po/vendor/ship-to) with mapping logs\nsetCompanyFields(prev=>{const next=applySuggestionsToFields(suggestions,prev);try{const before=Object.fromEntries(prev.map(f=>[f.id,f.value]));const after=Object.fromEntries(next.map(f=>[f.id,f.value]));Object.keys(after).forEach(id=>{if(before[id]!==after[id]&&suggestions[id]!==undefined){console.debug('🧭 map(companyFields):',{id,from:before[id],to:after[id],sourceKey:id});}});}catch(_unused2){}return next;});setPurchaseOrderFields(prev=>{const next=applySuggestionsToFields(suggestions,prev);try{const before=Object.fromEntries(prev.map(f=>[f.id,f.value]));const after=Object.fromEntries(next.map(f=>[f.id,f.value]));Object.keys(after).forEach(id=>{if(before[id]!==after[id]&&suggestions[id]!==undefined){console.debug('🧭 map(purchaseOrderFields):',{id,from:before[id],to:after[id],sourceKey:id});}});}catch(_unused3){}return next;});setVendorFields(prev=>{const next=applySuggestionsToFields(suggestions,prev);try{const before=Object.fromEntries(prev.map(f=>[f.id,f.value]));const after=Object.fromEntries(next.map(f=>[f.id,f.value]));Object.keys(after).forEach(id=>{if(before[id]!==after[id]&&suggestions[id]!==undefined){console.debug('🧭 map(vendorFields):',{id,from:before[id],to:after[id],sourceKey:id});}});}catch(_unused4){}return next;});setShipToFields(prev=>{const next=applySuggestionsToFields(suggestions,prev);try{const before=Object.fromEntries(prev.map(f=>[f.id,f.value]));const after=Object.fromEntries(next.map(f=>[f.id,f.value]));Object.keys(after).forEach(id=>{if(before[id]!==after[id]&&suggestions[id]!==undefined){console.debug('🧭 map(shipToFields):',{id,from:before[id],to:after[id],sourceKey:id});}});}catch(_unused5){}return next;});// 2) Shipping details (DOM spans)\nconst write=(el,val)=>{if(el&&typeof val==='string')el.textContent=val;};const shipSelectors=key=>[\".shipping-details [data-field=\\\"\".concat(key,\"\\\"] .editable-field\"),\".shipping-field[data-field=\\\"\".concat(key,\"\\\"] .editable-field\"),\"#shipping-\".concat(key),\".shipping-field-\".concat(key,\" .editable-field\")];const shipOrder=['requisitioner','shipVia','fob','shippingTerms'];shipOrder.forEach((key,idx)=>{let el=null,used='';for(const sel of shipSelectors(key)){el=document.querySelector(sel);if(el){used=sel;break;}}// Fallback to positional selector used in your JSX\nif(!el){const nth=idx+1;// 1-based\n// Prefer :nth-of-type within container to ignore headers\nconst selA=\".shipping-details .shipping-field:nth-of-type(\".concat(nth,\") .editable-field\");el=document.querySelector(selA);if(el){used=selA;}else{// Last resort: original child-based selector\nconst selB=\".shipping-field:nth-child(\".concat(nth,\") .editable-field\");el=document.querySelector(selB);if(el)used=selB;}}write(el,suggestions[key]);try{const count=document.querySelectorAll('.shipping-details .shipping-field').length;console.debug('🧭 map(shippingDetails):',{key,selector:used||'(not found)',value:suggestions[key],fieldsInDOM:count});}catch(_unused6){}});// 3) Line items (first 3 rows only)\n// Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\nconst setCell=(row,col,val)=>{const selector=\".itemtable tbody tr:nth-child(\".concat(row,\") td[data-column=\\\"\").concat(col,\"\\\"] .editable-field\");const cell=document.querySelector(selector);if(cell&&typeof val==='string'){cell.textContent=val;}try{console.debug('🧭 map(lineItem):',{row,col,selector,value:val});}catch(_unused7){}};const li=(i,k)=>suggestions===null||suggestions===void 0?void 0:suggestions[\"\".concat(k).concat(i)];for(let i=1;i<=3;i++){setCell(i,'itemNumber',li(i,'itemNumber'));setCell(i,'description',li(i,'description'));setCell(i,'qty',li(i,'qty'));setCell(i,'rate',li(i,'rate'));setCell(i,'amount',li(i,'amount'));}// 4) Totals (state + DOM)\nsetTotalsFields(prev=>{const map={subtotal:suggestions.subtotal,tax:suggestions.tax,shipping:suggestions.shipping,other:suggestions.other,total:suggestions.total};const next=prev.map(f=>map[f.id]?_objectSpread(_objectSpread({},f),{},{value:map[f.id]}):f);try{const before=Object.fromEntries(prev.map(f=>[f.id,f.value]));const after=Object.fromEntries(next.map(f=>[f.id,f.value]));Object.keys(after).forEach(id=>{if(before[id]!==after[id]&&map[id]!==undefined){console.debug('🧭 map(totalsFields):',{id,from:before[id],to:after[id],sourceKey:id});}});}catch(_unused8){}return next;});// Write editable totals into DOM for non-calculated rows\nconst domTotals=field=>document.querySelector(\".totals-section .total-row[data-field=\\\"\".concat(field,\"\\\"] .editable-field\"));['tax','shipping','other'].forEach(key=>{const sel=\".totals-section .total-row[data-field=\\\"\".concat(key,\"\\\"] .editable-field\");write(domTotals(key),suggestions[key]);try{console.debug('🧭 map(totalsDOM):',{key,selector:sel,value:suggestions[key]});}catch(_unused9){}});// Calculated-looking spans (subtotal, total) in your layout use .calculated-field\nconst calcTotal=document.querySelector(\".totals-section .total-row[data-field=\\\"total\\\"] .total-field\");const calcSub=document.querySelector(\".totals-section .total-row[data-field=\\\"subtotal\\\"] .calculated-field\");write(calcSub,suggestions.subtotal);write(calcTotal,suggestions.total);try{console.debug('🧭 map(totalsDOM):',{key:'subtotal',selector:\".totals-section .total-row[data-field=\\\"subtotal\\\"] .calculated-field\",value:suggestions.subtotal});console.debug('🧭 map(totalsDOM):',{key:'total',selector:\".totals-section .total-row[data-field=\\\"total\\\"] .total-field\",value:suggestions.total});}catch(_unused0){}// 5) Comments, Contact Info (DOM)\nconst commentsEl=document.querySelector('.comments-content .editable-field');const contactEl=document.querySelector('.contact-section .editable-field');write(commentsEl,suggestions.comments);write(contactEl,suggestions.contactInfo);try{console.debug('🧭 map(comments):',{selector:'.comments-content .editable-field',value:suggestions.comments});console.debug('🧭 map(contactInfo):',{selector:'.contact-section .editable-field',value:suggestions.contactInfo});}catch(_unused1){}// 6) Bump timestamps\nupdateCompanyFieldsTimestamp();updatePurchaseOrderFieldsTimestamp();showNotification('✅ AI suggestions applied','success');}catch(e){console.error('AI fill failed:',e);showNotification(\"\\u274C AI fill failed: \".concat(e.message),'error');}};// ============================================================================\n// XML EXPORT FUNCTIONALITY\n// ============================================================================\n// Function to export form data as XML\nconst exportToXML=()=>{try{console.log('📄 Starting XML generation...');// Capture current field values first\nconst capturedData=captureFieldValues();// Prepare data for XML generation\n// Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\nconst headerSections=Array.from(document.querySelectorAll('.header-section .sortable-section'));const visualSections1And2=headerSections.map(el=>el.id).filter(id=>id==='section1'||id==='section2');const sections1And2ForExport=visualSections1And2.length===2?visualSections1And2:sections1And2Order;// Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\nconst vendorShipToSections=Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));const visualSections3And4=vendorShipToSections.map(el=>el.id).filter(id=>id==='section3'||id==='section4');const sections3And4ForExport=visualSections3And4.length===2?visualSections3And4:vendorShipToSectionOrder;// Helpers for DOM reads\nconst getText=sel=>{var _document$querySelect,_document$querySelect2;return((_document$querySelect=document.querySelector(sel))===null||_document$querySelect===void 0?void 0:(_document$querySelect2=_document$querySelect.textContent)===null||_document$querySelect2===void 0?void 0:_document$querySelect2.trim())||'';};// Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\nconst normalizedLineItems=(capturedData.lineItems||[]).map(row=>({// original UI keys\nitemNumber:row.itemNumber||'',description:row.description||'',qty:row.qty||row.quantity||'',rate:row.rate||row.unitPrice||'',amount:row.amount||row.total||'',// template-expected keys\nquantity:row.quantity||row.qty||'',unitPrice:row.unitPrice||row.rate||'',total:row.total||row.amount||''}));const exportData=_objectSpread(_objectSpread({},capturedData),{},{// Add section order information for dynamic XML generation\nsectionOrder:{sections1And2:sections1And2ForExport,// Use current visual order to ensure XML matches UI\nsections3And4:sections3And4ForExport,// Use current visual order to ensure XML matches UI\nsections5And6:sections5And6Order,// Use actual state for sections 5&6\nsections3And4And5And6:vendorShipToAndShippingDetailsOrder,// Vendor-ShipTo and Shipping Details order\nsections8And9:commentsTotalsSectionOrder,// Use actual state for sections 8&9\nlineItemColumns:lineItemColumnOrder,// Use actual state for line item columns\nshippingColumns:shippingColumnOrder// Use actual state for shipping columns\n},// CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\nfieldOrder:{company:companyFieldOrder,// Preserve company field order independently of section position\npurchaseOrder:purchaseOrderFieldOrder,// Preserve PO field order independently of section position\nvendor:vendorFields.map(f=>f.id),// Vendor field order\nshipTo:shipToFields.map(f=>f.id)// Ship-to field order\n},// Add normalized line items (support both key schemes)\nlineItems:normalizedLineItems,// Shipping details (prefer data-field; fall back handled in XML builder too)\nrequisitioner:getText('.shipping-details [data-field=\"requisitioner\"] .editable-field'),shipVia:getText('.shipping-details [data-field=\"shipVia\"] .editable-field'),fob:getText('.shipping-details [data-field=\"fob\"] .editable-field'),shippingTerms:getText('.shipping-details [data-field=\"shippingTerms\"] .editable-field'),// Totals: read what the user sees\nsubtotal:getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field')||'$0.00',tax:getText('.totals-section .total-row[data-field=\"tax\"] .editable-field')||'$0.00',shipping:getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field')||'$0.00',other:getText('.totals-section .total-row[data-field=\"other\"] .editable-field')||'$0.00',total:getText('.totals-section .total-row[data-field=\"total\"] .total-field')||'$0.00',comments:getText('.comments-content .editable-field'),contactInfo:getText('.contact-section .editable-field')});console.debug('🔎 Export DOM reads:',{requisitioner:exportData.requisitioner,shipVia:exportData.shipVia,fob:exportData.fob,shippingTerms:exportData.shippingTerms,subtotal:exportData.subtotal,tax:exportData.tax,shipping:exportData.shipping,other:exportData.other,total:exportData.total});console.log('📄 Export data prepared:',exportData);console.log('🔀 Section order being sent to XML:',exportData.sectionOrder);console.log('🔀 Sections 1&2 order:',exportData.sectionOrder.sections1And2);console.log('🔀 Sections 3&4 order:',exportData.sectionOrder.sections3And4);console.log('🔀 Sections 3&4 + 5&6 order:',exportData.sectionOrder.sections3And4And5And6);console.log('🔀 Line item columns order:',exportData.sectionOrder.lineItemColumns);console.log('🔀 Shipping columns order:',exportData.sectionOrder.shippingColumns);console.log('🔀 Line items data:',exportData.lineItems);// CRITICAL: Log field order information\nconsole.log('🔀 Field order being sent to XML:',exportData.fieldOrder);console.log('🔀 Company field order:',exportData.fieldOrder.company);console.log('🔀 Purchase order field order:',exportData.fieldOrder.purchaseOrder);console.log('🔀 Vendor field order:',exportData.fieldOrder.vendor);console.log('🔀 Ship-to field order:',exportData.fieldOrder.shipTo);// Generate XML\nconst xml=generatePurchaseOrderXML(exportData);// Display XML in a modal instead of downloading\ndisplayXMLOutput(xml);// Update export timestamp\nsetLastExportTime(new Date().toISOString());showNotification('📄 XML generated successfully!','success');console.log('✅ XML generation completed successfully');}catch(error){console.error('❌ XML generation failed:',error);showNotification(\"\\u274C XML generation failed: \".concat(error.message),'error');}};// Show notification function\nconst showNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';// Remove any existing notifications\nconst existingNotification=document.querySelector('.notification');if(existingNotification){existingNotification.remove();}// Create notification element\nconst notification=document.createElement('div');notification.className=\"notification notification-\".concat(type);notification.innerHTML=\"\\n      <div class=\\\"notification-content\\\">\\n        <span class=\\\"notification-message\\\">\".concat(message,\"</span>\\n        <button class=\\\"notification-close\\\" onclick=\\\"this.parentElement.parentElement.remove()\\\">\\xD7</button>\\n      </div>\\n    \");// Add to notification container\nconst container=document.getElementById('notification-container');if(container){container.appendChild(notification);}else{// Fallback to body if container not found\ndocument.body.appendChild(notification);}// Auto-remove after 3 seconds\nsetTimeout(()=>{if(notification.parentElement){notification.remove();}},3000);};// Get current form statistics\nconst getFormStats=()=>{return{totalFields:companyFields.length+purchaseOrderFields.length+vendorFields.length+shipToFields.length,companyFields:companyFields.length,purchaseOrderFields:purchaseOrderFields.length,vendorFields:vendorFields.length,shipToFields:shipToFields.length,totalChanges:changeHistory.length,lastModified:Math.max(new Date(lastModified).getTime(),new Date(poLastModified).getTime())};};// Handle company field drag and drop with timestamp update\nconst handleCompanyDragEnd=event=>{useCompanyFieldsDragEnd(setCompanyFields)(event);updateCompanyFieldsTimestamp();// CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\nif(event.active.id!==event.over.id){setCompanyFieldOrder(prevOrder=>{const oldIndex=prevOrder.indexOf(event.active.id);const newIndex=prevOrder.indexOf(event.over.id);const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,event.active.id);console.log('🔄 Company field order updated:',{oldIndex,newIndex,newOrder});return newOrder;});console.log('🔄 Company fields reordered');}};// ============================================================================\n// SUMMARY LOGGING FUNCTION\n// ============================================================================\n// Function to log a summary of all field states\nconst logFieldSummary=()=>{console.log('📊 FIELD SUMMARY:',{company:{total:companyFields.length,lastModified:new Date(lastModified).toLocaleString(),fields:companyFields.map(f=>({id:f.id,label:f.label}))},purchaseOrder:{total:purchaseOrderFields.length,lastModified:new Date(poLastModified).toLocaleString(),fields:purchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle}))}});};// Log summary on component mount\nReact.useEffect(()=>{logFieldSummary();},[]);// Only run once on mount\n// ============================================================================\n// PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n// ============================================================================\n// Helper function to update timestamp when purchase order fields change\nconst updatePurchaseOrderFieldsTimestamp=()=>{setPoLastModified(new Date().toISOString());};// Add new purchase order field\nconst handleAddPurchaseOrderField=newField=>{setPurchaseOrderFields(prevFields=>[...prevFields,newField]);updatePurchaseOrderFieldsTimestamp();console.log('➕ Added new purchase order field:',newField);};// Remove purchase order field\nconst handleRemovePurchaseOrderField=fieldId=>{setPurchaseOrderFields(prevFields=>{const fieldToRemove=prevFields.find(field=>field.id===fieldId);showNotification(\"\\uD83D\\uDDD1\\uFE0F Removed purchase order field: \\\"\".concat(fieldToRemove===null||fieldToRemove===void 0?void 0:fieldToRemove.label,\"\\\"\"),'warning');console.log('🗑️ Removed purchase order field:',fieldToRemove);return prevFields.filter(field=>field.id!==fieldId);});updatePurchaseOrderFieldsTimestamp();};// ============================================================================\n// VENDOR FIELD MANAGEMENT FUNCTIONS\n// ============================================================================\n// Add new vendor field\nconst handleAddVendorField=newField=>{setVendorFields(prevFields=>[...prevFields,newField]);console.log('➕ Added new vendor field:',newField);showNotification(\"\\u2795 Added vendor field: \\\"\".concat(newField.label,\"\\\"\"),'success');};// Remove vendor field\nconst handleRemoveVendorField=fieldId=>{setVendorFields(prevFields=>{const fieldToRemove=prevFields.find(field=>field.id===fieldId);showNotification(\"\\uD83D\\uDDD1\\uFE0F Removed vendor field: \\\"\".concat(fieldToRemove===null||fieldToRemove===void 0?void 0:fieldToRemove.label,\"\\\"\"),'warning');console.log('🗑️ Removed vendor field:',fieldToRemove);return prevFields.filter(field=>field.id!==fieldId);});};// Handle vendor field label changes\nconst handleVendorFieldLabelChange=(fieldId,newLabel)=>{setVendorFields(prevFields=>{const oldField=prevFields.find(field=>field.id===fieldId);const oldLabel=oldField?oldField.label:'';logChange('label-change',fieldId,oldLabel,newLabel,'vendor');return prevFields.map(field=>field.id===fieldId?_objectSpread(_objectSpread({},field),{},{label:newLabel}):field);});};// ============================================================================\n// SHIP-TO FIELD MANAGEMENT FUNCTIONS\n// ============================================================================\n// Add new ship-to field\nconst handleAddShipToField=newField=>{setShipToFields(prevFields=>[...prevFields,newField]);console.log('➕ Added new ship-to field:',newField);showNotification(\"\\u2795 Added ship-to field: \\\"\".concat(newField.label,\"\\\"\"),'success');};// Remove ship-to field\nconst handleRemoveShipToField=fieldId=>{setShipToFields(prevFields=>{const fieldToRemove=prevFields.find(field=>field.id===fieldId);showNotification(\"\\uD83D\\uDDD1\\uFE0F Removed ship-to field: \\\"\".concat(fieldToRemove===null||fieldToRemove===void 0?void 0:fieldToRemove.label,\"\\\"\"),'warning');console.log('🗑️ Removed ship-to field:',fieldToRemove);return prevFields.filter(field=>field.id!==fieldId);});};// Handle ship-to field label changes\nconst handleShipToFieldLabelChange=(fieldId,newLabel)=>{setShipToFields(prevFields=>{const oldField=prevFields.find(field=>field.id===fieldId);const oldLabel=oldField?oldField.label:'';logChange('label-change',fieldId,oldLabel,newLabel,'ship-to');return prevFields.map(field=>field.id===fieldId?_objectSpread(_objectSpread({},field),{},{label:newLabel}):field);});};// Handle purchase order field drag and drop with timestamp update\nconst handlePurchaseOrderDragEnd=event=>{usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);updatePurchaseOrderFieldsTimestamp();// CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\nif(event.active.id!==event.over.id){setPurchaseOrderFieldOrder(prevOrder=>{const oldIndex=prevOrder.indexOf(event.active.id);const newIndex=prevOrder.indexOf(event.over.id);const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,event.active.id);console.log('🔄 Purchase order field order updated:',{oldIndex,newIndex,newOrder});return newOrder;});console.log('🔄 Purchase order fields reordered');}};// ============================================================================\n// SECTION-LEVEL DRAG AND DROP\n// ============================================================================\n// State for vendor/ship-to section order\nconst[vendorShipToSectionOrder,setVendorShipToSectionOrder]=useState(['section3','section4']);// State for sections 1 and 2 order (Company Info and Purchase Order)\nconst[sections1And2Order,setSections1And2Order]=useState(['section1','section2']);// State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\nconst[sections5And6Order,setSections5And6Order]=useState(['section5','section6']);// State for vendor-ship-to and shipping-details sections order\nconst[vendorShipToAndShippingDetailsOrder,setVendorShipToAndShippingDetailsOrder]=useState(['sections3And4','sections5And6']);// CRITICAL: Add field order state management (same pattern as section order)\n// State for company field order (preserves drag-and-drop order independently of section position)\nconst[companyFieldOrder,setCompanyFieldOrder]=useState([]);// State for purchase order field order (preserves drag-and-drop order independently of section position)\nconst[purchaseOrderFieldOrder,setPurchaseOrderFieldOrder]=useState([]);// Initialize field order states with current field IDs\nReact.useEffect(()=>{setCompanyFieldOrder(companyFields.map(field=>field.id));},[companyFields]);React.useEffect(()=>{setPurchaseOrderFieldOrder(purchaseOrderFields.map(field=>field.id));},[purchaseOrderFields]);// Line item column order state\nconst[lineItemColumnOrder,setLineItemColumnOrder]=useState(['itemNumber','description','qty','rate','amount']);// Shipping column order state\nconst[shippingColumnOrder,setShippingColumnOrder]=useState(['requisitioner','shipVia','fob','shippingTerms']);// Log line item column order changes\nuseEffect(()=>{console.log('🔀 Line item column order updated:',lineItemColumnOrder);},[lineItemColumnOrder]);// Log shipping column order changes\nuseEffect(()=>{console.log('🚢 Shipping column order updated:',shippingColumnOrder);},[shippingColumnOrder]);// Comments and Totals section order state (Section 8 & 9)\nconst[commentsTotalsSectionOrder,setCommentsTotalsSectionOrder]=useState(['section8','section9']);// Function to handle drag start\nconst handleDragStart=event=>{var _active$data2;const{active}=event;console.log('🚀 DRAG START:',{active:active.id,activeData:active===null||active===void 0?void 0:(_active$data2=active.data)===null||_active$data2===void 0?void 0:_active$data2.current,timestamp:new Date().toISOString()});updateDebugPanel('DRAG START',active.id);// Add dragging state to the dragged element\nif(active.id==='section1'||active.id==='section2'){const element=document.getElementById(active.id);if(element){element.setAttribute('data-is-dragging','true');console.log('✅ Added dragging state to:',active.id);// Add visual feedback\nelement.style.border='3px solid #ff6b6b';element.style.backgroundColor='rgba(255, 107, 107, 0.1)';}}};// Function to handle drag over\nconst handleDragOver=event=>{var _active$data3,_over$data,_active$data4,_active$data4$current,_over$data2,_over$data2$current;const{active,over}=event;console.log('🎯 DRAG OVER EVENT:',{active:active===null||active===void 0?void 0:active.id,over:over===null||over===void 0?void 0:over.id,activeData:active===null||active===void 0?void 0:(_active$data3=active.data)===null||_active$data3===void 0?void 0:_active$data3.current,overData:over===null||over===void 0?void 0:(_over$data=over.data)===null||_over$data===void 0?void 0:_over$data.current,timestamp:new Date().toISOString()});// Handle palette field drag over\nif((active===null||active===void 0?void 0:(_active$data4=active.data)===null||_active$data4===void 0?void 0:(_active$data4$current=_active$data4.current)===null||_active$data4$current===void 0?void 0:_active$data4$current.source)==='palette'&&(over===null||over===void 0?void 0:(_over$data2=over.data)===null||_over$data2===void 0?void 0:(_over$data2$current=_over$data2.current)===null||_over$data2$current===void 0?void 0:_over$data2$current.type)==='drop-zone'){console.log('🎯 Palette field over drop zone:',{active:active.id,over:over.id});updateDebugPanel('DRAG OVER',\"Palette field over \".concat(over.id));// Update drop zone visual state\nconst dropZoneElement=document.querySelector(\"[data-zone-id=\\\"\".concat(over.id,\"\\\"]\"));if(dropZoneElement){dropZoneElement.setAttribute('data-is-over','true');dropZoneElement.style.border='3px solid #10b981';dropZoneElement.style.backgroundColor='rgba(16, 185, 129, 0.2)';}}// Handle section reordering drag over\nif(active.id==='section1'||active.id==='section2'){if(over&&(over.id==='section1'||over.id==='section2')){console.log('🎯 Section DRAG OVER:',{active:active.id,over:over.id,timestamp:new Date().toISOString()});updateDebugPanel('DRAG OVER',\"\".concat(active.id,\" \\u2192 \").concat(over.id));// Add over state to the target element\nconst targetElement=document.getElementById(over.id);if(targetElement){targetElement.setAttribute('data-is-over','true');// Add visual feedback for drop target\ntargetElement.style.border='3px solid #4ecdc4';targetElement.style.backgroundColor='rgba(78, 205, 196, 0.1)';}}}};// Function to handle section reordering\nconst handleSectionDragEnd=event=>{var _active$data5,_over$data3;const{active,over}=event;console.log('🔍 SECTION DRAG DEBUG - Event received:',{activeId:active===null||active===void 0?void 0:active.id,overId:over===null||over===void 0?void 0:over.id,activeData:active===null||active===void 0?void 0:(_active$data5=active.data)===null||_active$data5===void 0?void 0:_active$data5.current,overData:over===null||over===void 0?void 0:(_over$data3=over.data)===null||_over$data3===void 0?void 0:_over$data3.current,timestamp:new Date().toISOString()});updateDebugPanel('DRAG END',\"\".concat(active===null||active===void 0?void 0:active.id,\" \\u2192 \").concat(over===null||over===void 0?void 0:over.id));if(!active||!over){console.log('❌ Missing active or over in section drag');return;}if(active.id!==over.id){console.log('🔄 Section swap detected!',{active:active.id,over:over.id});setSections1And2Order(prevOrder=>{console.log('🔄 Previous section order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});if(oldIndex===-1||newIndex===-1){console.log('❌ Invalid indices found');return prevOrder;}const newOrder=arrayMove(prevOrder,oldIndex,newIndex);console.log('🔄 New section order:',newOrder);console.log('✅ Section swap successful!');showNotification('🔄 Sections swapped successfully!','success');console.log('✅ Sections swapped via drag & drop!');return newOrder;});// Clean up data attributes and visual feedback\nconst section1Element=document.getElementById('section1');const section2Element=document.getElementById('section2');if(section1Element){section1Element.removeAttribute('data-is-dragging');section1Element.removeAttribute('data-is-over');section1Element.style.border='';section1Element.style.backgroundColor='';}if(section2Element){section2Element.removeAttribute('data-is-dragging');section2Element.removeAttribute('data-is-over');section2Element.style.border='';section2Element.style.backgroundColor='';}}else{console.log('🔍 No section swap - same position');// Clean up data attributes and visual feedback even if no swap\nconst section1Element=document.getElementById('section1');const section2Element=document.getElementById('section2');if(section1Element){section1Element.removeAttribute('data-is-dragging');section1Element.removeAttribute('data-is-over');section1Element.style.border='';section1Element.style.backgroundColor='';}if(section2Element){section2Element.removeAttribute('data-is-dragging');section2Element.removeAttribute('data-is-over');section2Element.style.border='';section2Element.style.backgroundColor='';}}};// Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\nconst handleSections5And6DragEnd=event=>{const{active,over}=event;console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Sections 5&6 swap detected!',{active:active.id,over:over.id});setSections5And6Order(prevOrder=>{console.log('🔄 Previous sections 5&6 order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New sections 5&6 order:',newOrder);showNotification('🔄 Sections 5 and 6 reordered!','info');console.log('🔄 Sections 5&6 reordered via drag & drop!');console.log('📊 New section order:',newOrder);return newOrder;});}else{console.log('🔍 No sections 5&6 swap - same position');}};// Handle line item column drag end\nconst handleLineItemColumnDragEnd=event=>{const{active,over}=event;console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:',{active:active.id,over:over.id});if(active.id!==over.id){console.log('🔄 Line item column swap detected!',{active:active.id,over:over.id});setLineItemColumnOrder(items=>{const oldIndex=items.indexOf(active.id);const newIndex=items.indexOf(over.id);console.log('🔄 Previous line item column order:',items);console.log('🔀 Index calculations:',{oldIndex,newIndex});const newOrder=arrayMove(items,oldIndex,newIndex);console.log('🔄 New line item column order:',newOrder);showNotification('🔄 Line item columns reordered!','info');return newOrder;});}else{console.log('🔍 No line item column swap - same position');}};// Handle shipping column drag end\nconst handleShippingColumnDragEnd=event=>{const{active,over}=event;console.log('🔍 SHIPPING COLUMN DRAG DEBUG - Event received:',{active:active.id,over:over.id});if(active.id!==over.id){console.log('🔄 Shipping column swap detected!',{active:active.id,over:over.id});setShippingColumnOrder(items=>{const oldIndex=items.indexOf(active.id);const newIndex=items.indexOf(over.id);console.log('🔄 Previous shipping column order:',items);console.log('🔀 Index calculations:',{oldIndex,newIndex});const newOrder=arrayMove(items,oldIndex,newIndex);console.log('🔄 New shipping column order:',newOrder);showNotification('🚢 Shipping columns reordered!','info');return newOrder;});}else{console.log('🔍 No shipping column swap - same position');}};// Handle Comments and Totals section drag end\nconst handleCommentsTotalsDragEnd=event=>{const{active,over}=event;if(active.id!==over.id){setCommentsTotalsSectionOrder(items=>{const oldIndex=items.indexOf(active.id);const newIndex=items.indexOf(over.id);return arrayMove(items,oldIndex,newIndex);});}};// Function to handle vendor/ship-to section reordering\nconst handleVendorShipToSectionDragEnd=event=>{const{active,over}=event;console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Vendor/Ship-To section swap detected!',{active:active.id,over:over.id});setVendorShipToSectionOrder(prevOrder=>{console.log('🔄 Previous vendor/ship-to order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New vendor/ship-to order:',newOrder);// The sections are already reordered by the code above, no need to swap field data\n// Just show notification that sections were reordered\nshowNotification('🔄 Vendor and Ship To sections reordered!','info');console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');console.log('📊 New section order:',newOrder);return newOrder;});}else{console.log('🔍 No vendor/ship-to swap - same position');}};// Function to handle vendor-ship-to and shipping-details sections reordering\nconst handleVendorShipToAndShippingDetailsDragEnd=event=>{const{active,over}=event;console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!',{active:active.id,over:over.id});setVendorShipToAndShippingDetailsOrder(prevOrder=>{console.log('🔄 Previous vendor-shipTo + shipping details order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New vendor-shipTo + shipping details order:',newOrder);showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!','info');console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');console.log('📊 New section order:',newOrder);return newOrder;});}else{console.log('🔍 No vendor-shipTo + shipping details swap - same position');}};// ============================================================================\n// SECTION SWAPPING FUNCTION\n// ============================================================================\n// Function to swap Section 1 and Section 2\nconst handleSwapSections=()=>{console.log('🔄 MANUAL SWAP FUNCTION CALLED');console.log('🔄 Before swap - Company fields:',companyFields);console.log('🔄 Before swap - Purchase Order fields:',purchaseOrderFields);// Store current values before swapping\nconst companyFieldValues=companyFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const purchaseOrderFieldValues=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle,// Explicitly preserve isTitle property\nvalue:element?element.textContent.trim():''});});console.log('🔍 Before swap - Purchase Order fields:',purchaseOrderFieldValues);console.log('🔍 Title field check:',purchaseOrderFieldValues.find(f=>f.isTitle));// IMPORTANT: Create new field arrays to avoid reference issues\nconst newCompanyFields=purchaseOrderFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle// Ensure isTitle is preserved\n}));const newPurchaseOrderFields=companyFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:false// Company fields should never be title\n}));console.log('🔄 About to swap fields...');console.log('🔄 New company fields (with title check):',newCompanyFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));console.log('🔄 New PO fields (with title check):',newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));// Swap the fields - keep Purchase Order section intact (title + date + po#)\nsetCompanyFields(newCompanyFields);setPurchaseOrderFields(newPurchaseOrderFields);// Update timestamps\nsetLastModified(new Date().toISOString());setPoLastModified(new Date().toISOString());showNotification('🔄 Sections swapped!','info');console.log('🔄 Sections swapped successfully!');console.log('📊 New Section 1 (was Section 2):',newCompanyFields);console.log('📊 New Section 2 (was Section 1):',newPurchaseOrderFields);// Log the swap operation\nconsole.log('🔄 Section Swap Details:',{'Section 1 → Section 2':newCompanyFields.map(f=>({id:f.id,label:f.label,value:f.value,isTitle:f.isTitle})),'Section 2 → Section 1':newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,value:f.value,isTitle:f.isTitle}))});};// Function to manually swap Vendor and Ship To sections\nconst handleSwapVendorShipTo=()=>{console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');console.log('🔄 Before swap - Vendor fields:',vendorFields);console.log('🔄 Before swap - Ship To fields:',shipToFields);// Store current values before swapping\nconst vendorFieldValues=vendorFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const shipToFieldValues=shipToFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});console.log('🔍 Before swap - Vendor field values:',vendorFieldValues);console.log('🔍 Before swap - Ship To field values:',shipToFieldValues);// Swap the fields\nsetVendorFields(shipToFieldValues);setShipToFields(vendorFieldValues);// Update section order\nsetVendorShipToSectionOrder(prevOrder=>{const newOrder=[...prevOrder].reverse();return newOrder;});showNotification('🔄 Vendor and Ship To sections swapped!','info');console.log('🔄 Vendor and Ship To sections swapped successfully!');console.log('📊 New Vendor fields (was Ship To):',shipToFieldValues);console.log('📊 New Ship To fields (was Vendor):',vendorFieldValues);// Log the swap operation\nconsole.log('🔄 Vendor/Ship-To Swap Details:',{'Vendor → Ship To':shipToFieldValues.map(f=>({id:f.id,label:f.label,value:f.value})),'Ship To → Vendor':vendorFieldValues.map(f=>({id:f.id,label:f.label,value:f.value}))});};// ============================================================================\n// FIELD VALUE CAPTURE\n// ============================================================================\n// Function to capture current field values from the DOM\nconst captureFieldValues=()=>{console.log('📝 Capturing field values from DOM...');// Capture company field values - PRESERVE CURRENT ORDER\nconsole.log('🔍 DEBUG: Current company fields order before capture:',companyFields.map(f=>({id:f.id,label:f.label})));const updatedCompanyFields=companyFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Company field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});console.log('🔍 DEBUG: Updated company fields order after capture:',updatedCompanyFields.map(f=>({id:f.id,label:f.label})));// Capture purchase order field values\nconst updatedPurchaseOrderFields=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD PO field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture vendor field values\nconst updatedVendorFields=vendorFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Vendor field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture ship-to field values\nconst updatedShipToFields=shipToFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Ship-to field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture line item values from the table\nconst capturedLineItems=[];for(let rowIndex=0;rowIndex<5;rowIndex++){const rowData={};lineItemColumnOrder.forEach(columnId=>{const cellSelector=\"tr:nth-child(\".concat(rowIndex+1,\") td[data-column=\\\"\").concat(columnId,\"\\\"] .editable-field\");const cell=document.querySelector(\".itemtable tbody \".concat(cellSelector));const value=cell?cell.textContent.trim():'';rowData[columnId]=value;});capturedLineItems.push(rowData);}console.log('📝 Line items captured:',capturedLineItems);// Capture totals field values using the new state structure\nconst updatedTotalsFields=totalsFields.map(field=>{let value=field.value;// Default to current state value\n// For editable fields, try to get from DOM\nif(!field.isCalculated){const selector=\".totals-section .total-row[data-field=\\\"\".concat(field.id,\"\\\"] .editable-field\");const element=document.querySelector(selector);if(element){value=element.textContent.trim();}}console.log(\"\\uD83D\\uDCDD Totals field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Update state with captured values\nsetCompanyFields(updatedCompanyFields);setPurchaseOrderFields(updatedPurchaseOrderFields);setVendorFields(updatedVendorFields);setShipToFields(updatedShipToFields);setTotalsFields(updatedTotalsFields);console.log('📝 Field values captured and state updated!');return{companyFields:updatedCompanyFields,purchaseOrderFields:updatedPurchaseOrderFields,vendorFields:updatedVendorFields,shipToFields:updatedShipToFields,lineItems:capturedLineItems,totalsFields:updatedTotalsFields};};// Unified drag end dispatcher for a single top-level DndContext\nconst handleRootDragEnd=event=>{var _active$data6,_active$data6$current;const{active}=event;const activeId=(active===null||active===void 0?void 0:active.id)||'';const source=active===null||active===void 0?void 0:(_active$data6=active.data)===null||_active$data6===void 0?void 0:(_active$data6$current=_active$data6.current)===null||_active$data6$current===void 0?void 0:_active$data6$current.source;// Reset section handle dragging state\nsetIsSectionHandleDragging(false);if(source==='palette'){handlePaletteDragEnd(event);return;}// Sections 1 & 2 swap\nif(activeId==='section1'||activeId==='section2'){handleSectionDragEnd(event);return;}// Vendor-ShipTo + ShippingDetails container swap\nif(activeId==='sections3And4'||activeId==='sections5And6'){handleVendorShipToAndShippingDetailsDragEnd(event);return;}// Vendor or Ship-To section reordering\nif(activeId==='section3'||activeId==='section4'){handleVendorShipToSectionDragEnd(event);return;}// Vendor or Ship-To individual field drags\nif(String(activeId).startsWith('vendor-')){handleVendorDragEnd(event);return;}if(String(activeId).startsWith('ship-to-')){handleShipToDragEnd(event);return;}// Line item column reorder\nif(['itemNumber','description','qty','rate','amount'].includes(activeId)){handleLineItemColumnDragEnd(event);return;}// Comments & totals sections reorder\nif(activeId==='section8'||activeId==='section9'){handleCommentsTotalsDragEnd(event);return;}};// State for tracking section handle drag operations (simplified)\nconst[isSectionHandleDragging,setIsSectionHandleDragging]=useState(false);// Debug state\nconst[dragCount,setDragCount]=useState(0);const[lastDragEvent,setLastDragEvent]=useState('None');// Function to update debug panel\nconst updateDebugPanel=(eventType,details)=>{setLastDragEvent(\"\".concat(eventType,\": \").concat(details));setDragCount(prev=>prev+1);// Update DOM elements for real-time display\nconst lastDragEventElement=document.getElementById('last-drag-event');const dragCountElement=document.getElementById('drag-count');if(lastDragEventElement){lastDragEventElement.textContent=\"\".concat(eventType,\": \").concat(details);}if(dragCountElement){dragCountElement.textContent=dragCount+1;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"purchase-order-container \".concat(!sidebarVisible?'sidebar-hidden':''),children:[/*#__PURE__*/_jsxs(DndContext,{sensors:sensors,collisionDetection:rectIntersection,onDragCancel:()=>{console.log('❌ Drag cancelled');updateDebugPanel('DRAG CANCEL','Drag operation cancelled');},onDragMove:event=>{console.log('🔄 Drag move:',event);updateDebugPanel('DRAG MOVE',\"\".concat(event.active.id,\" moving\"));},onDragStart:event=>{console.log('🚀 DndContext Drag Start:',event);handleDragStart(event);},onDragOver:event=>{console.log('🎯 DndContext Drag Over:',event);handleDragOver(event);},onDragEnd:event=>{console.log('🏁 DndContext Drag End:',event);handleRootDragEnd(event);},children:[console.log('🔧 DndContext rendering with:',{sensors:sensors,collisionDetection:closestCenter,hasDragStart:!!handleDragStart,hasDragOver:!!handleDragOver,hasDragEnd:!!handleRootDragEnd,timestamp:new Date().toISOString()}),/*#__PURE__*/_jsx(AvailableFields,{isVisible:sidebarVisible,onToggleVisibility:toggleSidebar,showNotification:showNotification}),/*#__PURE__*/_jsxs(\"header\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Purchase Order Management System\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Create, edit, and manage purchase orders with ease\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"debug-panel\",style:{position:'fixed',top:'100px',left:'20px',backgroundColor:'rgba(0, 0, 0, 0.9)',color:'white',padding:'15px',borderRadius:'8px',fontSize:'12px',fontFamily:'monospace',zIndex:10000,maxWidth:'300px',boxShadow:'0 4px 12px rgba(0, 0, 0, 0.3)'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{margin:'0 0 10px 0',color:'#4ecdc4'},children:\"\\uD83D\\uDC1B Debug Panel\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Sections 1&2 Order:\"}),\" \",JSON.stringify(sections1And2Order)]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Section Handle Dragging:\"}),\" \",isSectionHandleDragging?'YES':'NO']}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Last Drag Event:\"}),\" \",/*#__PURE__*/_jsx(\"span\",{id:\"last-drag-event\",children:\"None\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Drag Count:\"}),\" \",/*#__PURE__*/_jsx(\"span\",{id:\"drag-count\",children:\"0\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{console.log('🔍 Debug: Current state:',{sections1And2Order,isSectionHandleDragging,companyFields:companyFields.length,purchaseOrderFields:purchaseOrderFields.length});},style:{backgroundColor:'#4ecdc4',color:'white',border:'none',padding:'5px 10px',borderRadius:'4px',cursor:'pointer',fontSize:'10px'},children:\"Log State\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{console.log('🧪 Testing section swap...');setSections1And2Order(prev=>{const newOrder=[...prev].reverse();console.log('🔄 Manual swap:',prev,'→',newOrder);updateDebugPanel('MANUAL SWAP',\"\".concat(prev.join('→'),\" \\u2192 \").concat(newOrder.join('→')));return newOrder;});},style:{backgroundColor:'#ff6b6b',color:'white',border:'none',padding:'5px 10px',borderRadius:'4px',cursor:'pointer',fontSize:'10px',marginLeft:'5px'},children:\"Test Swap\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{console.log('🧪 Testing drag simulation...');// Simulate a drag start event\nconst mockEvent={active:{id:'section1',data:{current:{type:'section',sectionNumber:1}}},over:{id:'section2',data:{current:{type:'section',sectionNumber:2}}}};console.log('🧪 Simulating drag end event:',mockEvent);handleSectionDragEnd(mockEvent);},style:{backgroundColor:'#ffa500',color:'white',border:'none',padding:'5px 10px',borderRadius:'4px',cursor:'pointer',fontSize:'10px',marginLeft:'5px'},children:\"Test Drag\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'15px',padding:'10px',border:'1px solid #666',borderRadius:'4px'},children:[/*#__PURE__*/_jsx(\"h5\",{style:{margin:'0 0 8px 0',color:'#4ecdc4'},children:\"\\uD83E\\uDDEA DND Test\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'10px',marginBottom:'5px'},children:\"Try dragging this test item:\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',height:'30px',backgroundColor:'#7c3aed',color:'white',display:'flex',alignItems:'center',justifyContent:'center',cursor:'grab',borderRadius:'4px',fontSize:'10px'},draggable:\"true\",onDragStart:e=>{console.log('🧪 Test drag start:',e);e.dataTransfer.setData('text/plain','test');},onDragOver:e=>{e.preventDefault();console.log('🧪 Test drag over:',e);},onDrop:e=>{e.preventDefault();console.log('🧪 Test drop:',e);},children:\"\\uD83E\\uDDEA Test Drag Item\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"header-section vendor-shipping-columns\",children:/*#__PURE__*/_jsxs(SortableContext,{items:sections1And2Order,strategy:horizontalListSortingStrategy,children:[console.log('🔧 SortableContext for sections 1&2:',{items:sections1And2Order,strategy:'horizontalListSortingStrategy',sections1And2OrderType:typeof sections1And2Order,sections1And2OrderLength:sections1And2Order===null||sections1And2Order===void 0?void 0:sections1And2Order.length,itemsArray:Array.isArray(sections1And2Order)?sections1And2Order:'NOT ARRAY',timestamp:new Date().toISOString()}),console.log('🔧 SortableContext items validation:',{itemsValid:Array.isArray(sections1And2Order)&&sections1And2Order.length>0,itemsContent:sections1And2Order,strategyValid:horizontalListSortingStrategy!==undefined,timestamp:new Date().toISOString()}),sections1And2Order.map((sectionId,index)=>{console.log(\"\\uD83D\\uDD27 Rendering section: \".concat(sectionId,\" at index \").concat(index));if(sectionId==='section1'){return/*#__PURE__*/_jsx(DroppableZone,{id:\"drop-company\",\"data-zone-label\":\"Company Info\",children:/*#__PURE__*/_jsx(DraggableSectionWrapper,{id:\"section1\",sectionNumber:\"1\",isSectionHandleDragging:isSectionHandleDragging,showDragHandle:true,children:/*#__PURE__*/_jsx(Section1CompanyInfo,{companyFields:companyFields,sensors:sensors,onCompanyDragEnd:handleCompanyDragEnd,onAddCompanyField:handleAddCompanyField,onRemoveCompanyField:handleRemoveCompanyField,onLabelChange:handleCompanyFieldLabelChange,onContentChange:handleContentChange,lastModified:lastModified})})},\"section1\");}else if(sectionId==='section2'){return/*#__PURE__*/_jsx(DroppableZone,{id:\"drop-po\",\"data-zone-label\":\"Purchase Order\",children:/*#__PURE__*/_jsx(DraggableSectionWrapper,{id:\"section2\",sectionNumber:\"2\",isSectionHandleDragging:isSectionHandleDragging,showDragHandle:true,children:/*#__PURE__*/_jsx(Section2PurchaseOrder,{purchaseOrderFields:purchaseOrderFields,sensors:sensors,onPurchaseOrderDragEnd:handlePurchaseOrderDragEnd,onAddPurchaseOrderField:handleAddPurchaseOrderField,onRemovePurchaseOrderField:handleRemovePurchaseOrderField,onLabelChange:handlePurchaseOrderFieldLabelChange,onContentChange:handleContentChange,lastModified:poLastModified})})},\"section2\");}return null;})]})})}),/*#__PURE__*/_jsx(SortableContext,{items:vendorShipToAndShippingDetailsOrder,strategy:verticalListSortingStrategy,children:vendorShipToAndShippingDetailsOrder.map(sectionId=>{if(sectionId==='sections3And4'){return/*#__PURE__*//* Vendor and Ship To Sections - Side by Side */_jsx(\"div\",{className:\"vendor-shipping-columns\",children:/*#__PURE__*/_jsx(SortableContext,{items:vendorShipToSectionOrder,strategy:horizontalListSortingStrategy,children:vendorShipToSectionOrder.map(innerSectionId=>{if(innerSectionId==='section3'){return/*#__PURE__*/_jsx(DroppableZone,{id:\"drop-vendor\",children:/*#__PURE__*/_jsx(DraggableSectionWrapper,{id:\"section3\",sectionNumber:\"3\",isSectionHandleDragging:isSectionHandleDragging,showDragHandle:false,children:/*#__PURE__*/_jsx(Section3Vendor,{vendorFields:vendorFields,sensors:sensors,onVendorDragEnd:handleVendorDragEnd,onAddVendorField:handleAddVendorField,onRemoveVendorField:handleRemoveVendorField,onLabelChange:handleVendorFieldLabelChange,onContentChange:handleContentChange,lastModified:Date.now()})})},\"section3\");}else if(innerSectionId==='section4'){return/*#__PURE__*/_jsx(DroppableZone,{id:\"drop-ship-to\",children:/*#__PURE__*/_jsx(DraggableSectionWrapper,{id:\"section4\",sectionNumber:\"4\",isSectionHandleDragging:isSectionHandleDragging,showDragHandle:false,children:/*#__PURE__*/_jsx(Section4ShipTo,{shipToFields:shipToFields,sensors:sensors,onShipToDragEnd:handleShipToDragEnd,onAddShipToField:handleAddShipToField,onRemoveShipToField:handleRemoveShipToField,onLabelChange:handleShipToFieldLabelChange,onContentChange:handleContentChange,lastModified:Date.now()})})},\"section4\");}return null;})})},\"sections3And4\");}else if(sectionId==='sections5And6'){return/*#__PURE__*/_jsx(DraggableSectionWrapper,{id:\"sections5And6\",sectionNumber:\"5&6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"shipping-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"REQUISITIONER\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"SHIP VIA\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"F.O.B.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"SHIPPING TERMS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",\"data-field\":\"requisitioner\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Requisitioner name\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",\"data-field\":\"shipVia\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Shipping method\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",\"data-field\":\"fob\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"FOB terms\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",\"data-field\":\"shippingTerms\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Shipping terms\"})})]})},\"sections5And6\");}return null;})}),/*#__PURE__*/_jsx(SortableContext,{items:lineItemColumnOrder,strategy:verticalListSortingStrategy,children:/*#__PURE__*/_jsxs(\"table\",{className:\"itemtable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{}),lineItemColumnOrder.map(columnId=>{const columnConfig={itemNumber:{label:'Item#',colSpan:3},description:{label:'Description',colSpan:12},qty:{label:'Qty',colSpan:2},rate:{label:'Rate',colSpan:3},amount:{label:'Amount',colSpan:3}};const config=columnConfig[columnId];return/*#__PURE__*/_jsx(\"th\",{colSpan:config.colSpan,children:config.label},columnId);})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:[1,2,3,4,5].map(row=>/*#__PURE__*/_jsxs(\"tr\",{className:\"draggable-row\",children:[/*#__PURE__*/_jsx(\"td\",{}),lineItemColumnOrder.map(columnId=>{const columnConfig={itemNumber:{colSpan:3,placeholder:'Item number'},description:{colSpan:12,placeholder:'Item description'},qty:{colSpan:2,placeholder:'Qty'},rate:{colSpan:3,placeholder:'$0.00'},amount:{colSpan:3,placeholder:'$0.00'}};const config=columnConfig[columnId];return/*#__PURE__*/_jsx(\"td\",{colSpan:config.colSpan,\"data-column\":columnId,children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":config.placeholder})},\"\".concat(row,\"-\").concat(columnId));})]},row))})]})}),/*#__PURE__*/_jsx(SortableContext,{items:commentsTotalsSectionOrder,strategy:horizontalListSortingStrategy,children:/*#__PURE__*/_jsx(\"div\",{className:\"comments-totals-section\",style:{display:'flex',gap:'20px'},children:commentsTotalsSectionOrder.map(sectionId=>{if(sectionId==='section8'){return/*#__PURE__*/_jsxs(\"div\",{id:\"section8\",className:\"sortable-section comments-section\",style:{flex:1},children:[/*#__PURE__*/_jsx(DraggableSectionHeader,{id:\"section8\",children:\"Comments or Special Instructions ::\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"comments-content\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Enter comments or special instructions...\"})})})]},\"section8\");}else if(sectionId==='section9'){return/*#__PURE__*/_jsxs(\"div\",{id:\"section9\",className:\"sortable-section totals-section\",style:{flex:1},children:[/*#__PURE__*/_jsx(DraggableSectionHeader,{id:\"section9\",children:\"Totals ::\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"subtotal\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"SUBTOTAL:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"calculated-field\",children:\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"tax\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"TAX:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"shipping\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"SHIPPING:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"other\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"OTHER:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row total-final\",\"data-field\":\"total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"TOTAL:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"calculated-field total-field\",children:\"$0.00\"})]})]})]},\"section9\");}return null;})})}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"contact-content\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Contact Information:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Enter contact information here\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-section\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn preview-btn\",onClick:togglePreviewMode,children:isPreviewMode?'👁️ Hide Preview':'👁️ Show Preview'}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:handleAIFill,children:\"\\uD83E\\uDD16 AI Fill\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn export-btn\",onClick:exportToXML,children:\"\\uD83D\\uDCC4 Generate XML\"})]}),changeHistory.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"change-history-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[\"\\uD83D\\uDCDD Change History (\",changeHistory.length,\" changes)\",/*#__PURE__*/_jsx(\"button\",{className:\"clear-history-btn\",onClick:clearChangeHistory,children:\"\\uD83D\\uDDD1\\uFE0F Clear\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"change-list\",children:[changeHistory.slice(0,10).map(change=>/*#__PURE__*/_jsxs(\"div\",{className:\"change-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"change-time\",children:new Date(change.timestamp).toLocaleTimeString()}),/*#__PURE__*/_jsx(\"span\",{className:\"change-type\",children:change.type}),/*#__PURE__*/_jsx(\"span\",{className:\"change-field\",children:change.fieldId}),/*#__PURE__*/_jsx(\"span\",{className:\"change-old\",children:change.oldValue||'empty'}),/*#__PURE__*/_jsx(\"span\",{className:\"change-arrow\",children:\"\\u2192\"}),/*#__PURE__*/_jsx(\"span\",{className:\"change-new\",children:change.newValue||'empty'})]},change.id)),changeHistory.length>10&&/*#__PURE__*/_jsxs(\"div\",{className:\"change-more\",children:[\"... and \",changeHistory.length-10,\" more changes\"]})]})]}),showXMLModal&&/*#__PURE__*/_jsx(\"div\",{className:\"xml-modal-overlay\",onClick:closeXMLModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"xml-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"xml-modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCC4 Generated XML Output\"}),/*#__PURE__*/_jsx(\"button\",{className:\"xml-modal-close\",onClick:closeXMLModal,children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"xml-modal-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"xml-output-container\",children:/*#__PURE__*/_jsx(\"pre\",{className:\"xml-code\",children:xmlOutput})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"xml-modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn copy-btn\",onClick:copyXMLToClipboard,children:\"\\uD83D\\uDCCB Copy XML\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn download-btn\",onClick:downloadXML,children:\"\\uD83D\\uDCE5 Download XML\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn close-btn\",onClick:closeXMLModal,children:\"Close\"})]})]})})]})})]}),/*#__PURE__*/_jsx(\"div\",{id:\"notification-container\"})]});}export default PurchaseOrderForm;","map":{"version":3,"names":["React","useState","useEffect","HeaderColorPicker","generatePurchaseOrderXML","Section1CompanyInfo","Section2PurchaseOrder","Section3Vendor","Section4ShipTo","AvailableFields","useAIProvider","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","useDraggable","useDroppable","rectIntersection","SortableContext","verticalListSortingStrategy","horizontalListSortingStrategy","useSortable","CSS","arrayMove","jsx","_jsx","jsxs","_jsxs","DraggableSectionWrapper","_ref","children","id","sectionNumber","isSectionHandleDragging","showDragHandle","attributes","listeners","setNodeRef","transform","transition","isDragging","data","type","getSectionClass","sectionNum","concat","style","Transform","toString","opacity","zIndex","cursor","position","width","height","border","borderRadius","backgroundColor","console","log","hasOnMouseDown","onMouseDown","hasOnMouseMove","onMouseMove","hasOnMouseUp","onMouseUp","hasOnTouchStart","onTouchStart","hasOnTouchMove","onTouchMove","hasOnTouchEnd","onTouchEnd","listenerKeys","Object","keys","listenerValues","values","map","v","_objectSpread","ref","className","onClick","SortableShippingColumnHeader","_ref2","userSelect","DraggableSectionHeader","_ref3","title","PurchaseOrderForm","companyFields","setCompanyFields","label","placeholder","value","f","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","sidebarVisible","setSidebarVisible","toggleSidebar","generateUniqueFieldId","baseLabel","existingIds","slugBase","String","toLowerCase","replace","candidate","counter","includes","DroppableZone","_ref4","isOver","accepts","minHeight","VendorShipToDroppableInline","_ref5","padding","handlePaletteDragEnd","event","_active$data","active","over","current","source","newField","handleAddCompanyField","showNotification","purchaseOrderFields","handleAddPurchaseOrderField","vendorFields","handleAddVendorField","shipToFields","handleAddShipToField","setPurchaseOrderFields","isTitle","setVendorFields","setShipToFields","totalsFields","setTotalsFields","isCalculated","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","prevFields","logChange","handleRemoveCompanyField","fieldId","fieldToRemove","find","field","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","changeType","oldValue","newValue","section","change","now","timestamp","prev","slice","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","togglePreviewMode","clearChangeHistory","showXMLModal","setShowXMLModal","xmlOutput","setXmlOutput","displayXMLOutput","xml","closeXMLModal","copyXMLToClipboard","navigator","clipboard","writeText","then","catch","downloadXML","_purchaseOrderFields$","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","getFieldSuggestions","applySuggestionsToFields","suggestionsMap","fields","Array","isArray","newVal","handleAIFill","payload","context","shippingFields","suggestions","debug","company","name","phone","po","date","number","shipping","requisitioner","shipVia","totals","subtotal","tax","total","line1","item","itemNumber1","desc","description1","qty","qty1","rate","rate1","amount","amount1","_unused","next","before","fromEntries","after","forEach","undefined","from","to","sourceKey","_unused2","_unused3","_unused4","_unused5","write","el","val","textContent","shipSelectors","key","shipOrder","idx","used","sel","querySelector","nth","selA","selB","count","querySelectorAll","length","selector","fieldsInDOM","_unused6","setCell","row","col","cell","_unused7","li","i","k","other","_unused8","domTotals","_unused9","calcTotal","calcSub","_unused0","commentsEl","contactEl","comments","contactInfo","_unused1","e","error","message","exportToXML","capturedData","captureFieldValues","headerSections","visualSections1And2","sections1And2ForExport","sections1And2Order","vendorShipToSections","visualSections3And4","sections3And4ForExport","vendorShipToSectionOrder","getText","_document$querySelect","_document$querySelect2","trim","normalizedLineItems","lineItems","itemNumber","description","quantity","unitPrice","exportData","sectionOrder","sections1And2","sections3And4","sections5And6","sections5And6Order","sections3And4And5And6","vendorShipToAndShippingDetailsOrder","sections8And9","commentsTotalsSectionOrder","lineItemColumns","lineItemColumnOrder","shippingColumns","shippingColumnOrder","fieldOrder","companyFieldOrder","purchaseOrder","purchaseOrderFieldOrder","vendor","shipTo","fob","shippingTerms","arguments","existingNotification","remove","notification","innerHTML","container","getElementById","setTimeout","parentElement","getFormStats","totalFields","totalChanges","Math","max","getTime","handleCompanyDragEnd","setCompanyFieldOrder","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","logFieldSummary","toLocaleString","handleRemovePurchaseOrderField","handleRemoveVendorField","handleVendorFieldLabelChange","handleRemoveShipToField","handleShipToFieldLabelChange","handlePurchaseOrderDragEnd","setPurchaseOrderFieldOrder","setVendorShipToSectionOrder","setSections1And2Order","setSections5And6Order","setVendorShipToAndShippingDetailsOrder","setLineItemColumnOrder","setShippingColumnOrder","setCommentsTotalsSectionOrder","handleDragStart","_active$data2","activeData","updateDebugPanel","element","setAttribute","handleDragOver","_active$data3","_over$data","_active$data4","_active$data4$current","_over$data2","_over$data2$current","overData","dropZoneElement","targetElement","handleSectionDragEnd","_active$data5","_over$data3","activeId","overId","section1Element","section2Element","removeAttribute","handleSections5And6DragEnd","handleLineItemColumnDragEnd","items","handleShippingColumnDragEnd","handleCommentsTotalsDragEnd","handleVendorShipToSectionDragEnd","handleVendorShipToAndShippingDetailsDragEnd","handleSwapSections","companyFieldValues","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSwapVendorShipTo","vendorFieldValues","shipToFieldValues","reverse","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","capturedLineItems","rowIndex","rowData","columnId","cellSelector","push","updatedTotalsFields","handleRootDragEnd","_active$data6","_active$data6$current","setIsSectionHandleDragging","startsWith","dragCount","setDragCount","lastDragEvent","setLastDragEvent","eventType","details","lastDragEventElement","dragCountElement","collisionDetection","onDragCancel","onDragMove","onDragStart","onDragOver","onDragEnd","hasDragStart","hasDragOver","hasDragEnd","isVisible","onToggleVisibility","top","left","color","fontSize","fontFamily","maxWidth","boxShadow","margin","marginBottom","JSON","stringify","join","marginLeft","mockEvent","marginTop","display","alignItems","justifyContent","draggable","dataTransfer","setData","preventDefault","onDrop","strategy","sections1And2OrderType","sections1And2OrderLength","itemsArray","itemsValid","itemsContent","strategyValid","sectionId","index","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","innerSectionId","onVendorDragEnd","onAddVendorField","onRemoveVendorField","onShipToDragEnd","onAddShipToField","onRemoveShipToField","contentEditable","columnConfig","colSpan","config","gap","flex","toLocaleTimeString","stopPropagation"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport './section-styles.css';\nimport './header-colors.css';\nimport './header-color-picker.css';\nimport HeaderColorPicker from './components/HeaderColorPicker';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3Vendor from './components/Section3Vendor';\nimport Section4ShipTo from './components/Section4ShipTo';\nimport AvailableFields from './components/AvailableFields';\nimport { useAIProvider } from './hooks/useAIProvider';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter, useDraggable, useDroppable, rectIntersection } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n\n// Draggable Section Wrapper Component for Sections\nfunction DraggableSectionWrapper({ children, id, sectionNumber, isSectionHandleDragging = false, showDragHandle = true }) {\n\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({ \n    id, \n    data: {\n      type: 'section',\n      sectionNumber: sectionNumber\n    }\n  });\n\n  // Map section numbers to proper CSS classes\n  const getSectionClass = (sectionNum) => {\n    switch(sectionNum) {\n      case 1:\n        return 'section-1-company-info';\n      case 2:\n        return 'section-2-purchase-order';\n      default:\n        return `section-${sectionNum}`;\n    }\n  };\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.6 : 1,\n    zIndex: isDragging ? 1000 : 1,\n    cursor: isDragging ? 'grabbing' : 'grab',\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    border: isDragging ? '3px solid #ff6b6b' : '2px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: isDragging ? 'rgba(255, 107, 107, 0.1)' : 'transparent'\n  };\n\n  // Log the actual attributes and listeners objects\n  console.log(`🔧 Detailed useSortable data for ${id}:`, {\n    attributes: attributes,\n    listeners: listeners,\n    setNodeRef: setNodeRef,\n    style: style\n  });\n\n  // Debug: Check if listeners have the right properties\n  if (listeners) {\n    console.log(`🔧 Listeners for ${id}:`, {\n      hasOnMouseDown: !!listeners.onMouseDown,\n      hasOnMouseMove: !!listeners.onMouseMove,\n      hasOnMouseUp: !!listeners.onMouseUp,\n      hasOnTouchStart: !!listeners.onTouchStart,\n      hasOnTouchMove: !!listeners.onTouchMove,\n      hasOnTouchEnd: !!listeners.onTouchEnd,\n      listenerKeys: Object.keys(listeners),\n      listenerValues: Object.values(listeners).map(v => typeof v)\n    });\n  } else {\n    console.log(`❌ No listeners for ${id}`);\n  }\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className={`sortable-section ${getSectionClass(sectionNumber)} ${isDragging ? 'dragging' : ''}`}\n      data-section={sectionNumber}\n      data-testid={`draggable-section-${id}`}\n      data-dragging={isDragging}\n      {...attributes} \n      {...listeners}\n      onClick={() => console.log(`🖱️ Clicked on section ${id}`)}\n    >\n      <div \n        className=\"section-content\"\n        style={{ position: 'relative', width: '100%', height: '100%' }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\n\n\n// Sortable shipping column header component for shipping details\nfunction SortableShippingColumnHeader({ children, id }) {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\n  \n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      {...attributes} \n      {...listeners}\n      className={`sortable-column-header ${isDragging ? 'dragging' : ''}`}\n    >\n      {children}\n    </div>\n  );\n}\n\n// Draggable Section Header Component for Comments and Totals\nfunction DraggableSectionHeader({ children, id }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className=\"section-header\"\n      {...attributes} \n      {...listeners} \n      title=\"Drag to reorder sections\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: '' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: '' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: '' }\n  ]);\n\n  // Debug: Log company fields state changes\n  useEffect(() => {\n    console.log('🔄 Company fields state updated:', companyFields.map(f => ({ id: f.id, label: f.label })));\n  }, [companyFields]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // ============================================================================\n  // SIDEBAR MANAGEMENT\n  // ============================================================================\n  \n  // State for sidebar visibility on mobile\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n\n  // Toggle sidebar visibility\n  const toggleSidebar = () => {\n    setSidebarVisible(!sidebarVisible);\n  };\n\n  // Helper: slugify and ensure unique id for new fields\n  const generateUniqueFieldId = (baseLabel, existingIds) => {\n    const slugBase = String(baseLabel)\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n    let candidate = slugBase || 'field';\n    let counter = 1;\n    while (existingIds.includes(candidate)) {\n      candidate = `${slugBase}-${counter++}`;\n    }\n    return candidate;\n  };\n\n  // ============================================================================\n  // DROPPABLE ZONES\n  // ============================================================================\n\n  // dnd-kit: droppable wrapper for sections\n  const DroppableZone = ({ id, children }) => {\n    const { isOver, setNodeRef } = useDroppable({ \n      id,\n      data: {\n        type: 'drop-zone',\n        accepts: 'palette-fields'\n      }\n    });\n    \n    console.log(`🎯 Droppable zone ${id} - isOver: ${isOver}`);\n    \n    return (\n      <div \n        ref={setNodeRef} \n        className={`droppable-zone ${isOver ? 'droppable-over' : ''}`}\n        data-zone-id={id}\n        data-is-over={isOver}\n        style={{\n          position: 'relative',\n          minHeight: '200px',\n          border: isOver ? '3px solid #10b981' : '2px dashed #3b82f6',\n          borderRadius: '8px',\n          backgroundColor: isOver ? 'rgba(16, 185, 129, 0.1)' : 'transparent',\n          transition: 'all 0.2s ease'\n        }}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  // Special droppable component for Vendor/Ship To sections\n  const VendorShipToDroppableInline = ({ id, children }) => {\n    const { isOver, setNodeRef } = useDroppable({ id });\n    console.log(`🎯 Droppable zone ${id} registered, isOver: ${isOver}`);\n    \n    return (\n      <div \n        ref={setNodeRef} \n        className={`droppable-zone ${isOver ? 'droppable-over' : ''}`}\n        style={{ \n          padding: '10px', \n          position: 'relative',\n          border: '3px solid green',\n          backgroundColor: isOver ? 'rgba(0, 255, 0, 0.1)' : 'rgba(0, 255, 0, 0.05)'\n        }}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  // Handle palette drag end to add fields to target sections\n  const handlePaletteDragEnd = (event) => {\n    const { active, over } = event;\n    console.log('🎯 Palette drag end:', { active, over });\n    \n    if (!active?.data?.current || !over?.id) {\n      console.log('❌ Missing active data or over id');\n      return;\n    }\n    const data = active.data.current;\n    if (data.source !== 'palette') {\n      console.log('❌ Not a palette source:', data.source);\n      return;\n    }\n\n    const baseLabel = data.label;\n    console.log('🎯 Dropping on zone:', over.id);\n    \n    if (over.id === 'drop-company') {\n      console.log('✅ Adding to company section');\n      const existingIds = companyFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddCompanyField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Company Info`, 'success');\n    } else if (over.id === 'drop-po') {\n      console.log('✅ Adding to purchase order section');\n      const existingIds = purchaseOrderFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddPurchaseOrderField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Purchase Order`, 'success');\n    } else if (over.id === 'drop-vendor') {\n      console.log('✅ Adding to vendor section');\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddVendorField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else if (over.id === 'drop-ship-to') {\n      console.log('✅ Adding to ship-to section');\n      const existingIds = shipToFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddShipToField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Ship-To section`, 'success');\n\n    } else if (over.id === 'drop-zone-vendor-ship-to' || over.id === 'drop-vendor-ship-to') {\n      console.log('✅ Adding to vendor section (legacy support)');\n      // Legacy support - add to vendor section by default\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddVendorField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else {\n      console.log('❌ Unknown drop zone:', over.id);\n    }\n  };\n\n\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: '' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: '' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: '' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: '' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: '' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([\n    { id: 'subtotal', label: 'SUBTOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true },\n    { id: 'tax', label: 'TAX:', placeholder: '$0.00', value: '' },\n    { id: 'shipping', label: 'SHIPPING:', placeholder: '$0.00', value: '' },\n    { id: 'other', label: 'OTHER:', placeholder: '$0.00', value: '' },\n    { id: 'total', label: 'TOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true }\n  ]);\n\n\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChange('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      showNotification(`🗑️ Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'vendor') {\n      const field = vendorFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'ship-to') {\n      const field = shipToFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n  \n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n  \n  \n  // Function to display XML output in a modal\n  const displayXMLOutput = (xml) => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n  \n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n  \n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n  \n  // Function to download XML file\n  const downloadXML = () => {\n    const blob = new Blob([xmlOutput], { type: 'application/xml' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${purchaseOrderFields.find(f => f.id === 'po-number')?.value || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // =========================================================================\n  // AI SUGGESTIONS\n  // =========================================================================\n  const { getFieldSuggestions } = useAIProvider();\n\n  const applySuggestionsToFields = (suggestionsMap, fields) => {\n    if (!Array.isArray(fields)) return fields;\n    return fields.map(f => {\n      const newVal = suggestionsMap?.[f.id];\n      if (typeof newVal === 'string') {\n        return { ...f, value: newVal };\n      }\n      return f;\n    });\n  };\n\n  const handleAIFill = async () => {\n    try {\n      showNotification('🤖 Fetching AI suggestions...', 'info');\n\n      const payload = {\n        context: 'purchase_order',\n        companyFields,\n        purchaseOrderFields,\n        vendorFields,\n        shipToFields,\n        shippingFields: [\n          { id: 'requisitioner', label: 'Requisitioner name' },\n          { id: 'shipVia', label: 'Shipping method' },\n          { id: 'fob', label: 'FOB terms' },\n          { id: 'shippingTerms', label: 'Shipping terms' }\n        ]\n      };\n\n      const { suggestions } = await getFieldSuggestions(payload);\n      try {\n        console.debug('🧪 AI suggestions keys:', Object.keys(suggestions || {}));\n        // Preview a few critical values to verify mapping\n        console.debug('🧪 AI preview:', {\n          company: {\n            name: suggestions?.['company-name'],\n            phone: suggestions?.['company-phone']\n          },\n          po: {\n            date: suggestions?.['po-date'],\n            number: suggestions?.['po-number']\n          },\n          shipping: {\n            requisitioner: suggestions?.requisitioner,\n            shipVia: suggestions?.shipVia\n          },\n          totals: {\n            subtotal: suggestions?.subtotal,\n            tax: suggestions?.tax,\n            total: suggestions?.total\n          },\n          line1: {\n            item: suggestions?.itemNumber1,\n            desc: suggestions?.description1,\n            qty: suggestions?.qty1,\n            rate: suggestions?.rate1,\n            amount: suggestions?.amount1\n          }\n        });\n      } catch {}\n\n      // 1) Apply to Section 1–3 states (company/po/vendor/ship-to) with mapping logs\n      setCompanyFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(companyFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setPurchaseOrderFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(purchaseOrderFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setVendorFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(vendorFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setShipToFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(shipToFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // 2) Shipping details (DOM spans)\n      const write = (el, val) => { if (el && typeof val === 'string') el.textContent = val; };\n\n      const shipSelectors = (key) => [\n        `.shipping-details [data-field=\"${key}\"] .editable-field`,\n        `.shipping-field[data-field=\"${key}\"] .editable-field`,\n        `#shipping-${key}`,\n        `.shipping-field-${key} .editable-field`\n      ];\n\n      const shipOrder = ['requisitioner','shipVia','fob','shippingTerms'];\n      shipOrder.forEach((key, idx) => {\n        let el = null, used = '';\n        for (const sel of shipSelectors(key)) {\n          el = document.querySelector(sel);\n          if (el) { used = sel; break; }\n        }\n        // Fallback to positional selector used in your JSX\n        if (!el) {\n          const nth = idx + 1; // 1-based\n          // Prefer :nth-of-type within container to ignore headers\n          const selA = `.shipping-details .shipping-field:nth-of-type(${nth}) .editable-field`;\n          el = document.querySelector(selA);\n          if (el) {\n            used = selA;\n          } else {\n            // Last resort: original child-based selector\n            const selB = `.shipping-field:nth-child(${nth}) .editable-field`;\n            el = document.querySelector(selB);\n            if (el) used = selB;\n          }\n        }\n        write(el, suggestions[key]);\n        try {\n          const count = document.querySelectorAll('.shipping-details .shipping-field').length;\n          console.debug('🧭 map(shippingDetails):', { key, selector: used || '(not found)', value: suggestions[key], fieldsInDOM: count });\n        } catch {}\n      });\n\n      // 3) Line items (first 3 rows only)\n      // Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\n      const setCell = (row, col, val) => {\n        const selector = `.itemtable tbody tr:nth-child(${row}) td[data-column=\"${col}\"] .editable-field`;\n        const cell = document.querySelector(selector);\n        if (cell && typeof val === 'string') {\n          cell.textContent = val;\n        }\n        try { console.debug('🧭 map(lineItem):', { row, col, selector, value: val }); } catch {}\n      };\n\n      const li = (i, k) => suggestions?.[`${k}${i}`];\n\n      for (let i = 1; i <= 3; i++) {\n        setCell(i, 'itemNumber', li(i, 'itemNumber'));\n        setCell(i, 'description', li(i, 'description'));\n        setCell(i, 'qty', li(i, 'qty'));\n        setCell(i, 'rate', li(i, 'rate'));\n        setCell(i, 'amount', li(i, 'amount'));\n      }\n\n      // 4) Totals (state + DOM)\n      setTotalsFields(prev => {\n        const map = {\n          subtotal: suggestions.subtotal,\n          tax: suggestions.tax,\n          shipping: suggestions.shipping,\n          other: suggestions.other,\n          total: suggestions.total,\n        };\n        const next = prev.map(f => (map[f.id] ? { ...f, value: map[f.id] } : f));\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && map[id] !== undefined) {\n              console.debug('🧭 map(totalsFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // Write editable totals into DOM for non-calculated rows\n      const domTotals = (field) => document.querySelector(`.totals-section .total-row[data-field=\"${field}\"] .editable-field`);\n      ['tax','shipping','other'].forEach(key => {\n        const sel = `.totals-section .total-row[data-field=\"${key}\"] .editable-field`;\n        write(domTotals(key), suggestions[key]);\n        try { console.debug('🧭 map(totalsDOM):', { key, selector: sel, value: suggestions[key] }); } catch {}\n      });\n\n      // Calculated-looking spans (subtotal, total) in your layout use .calculated-field\n      const calcTotal = document.querySelector(`.totals-section .total-row[data-field=\"total\"] .total-field`);\n      const calcSub   = document.querySelector(`.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`);\n      write(calcSub, suggestions.subtotal);\n      write(calcTotal, suggestions.total);\n      try {\n        console.debug('🧭 map(totalsDOM):', { key: 'subtotal', selector: `.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`, value: suggestions.subtotal });\n        console.debug('🧭 map(totalsDOM):', { key: 'total', selector: `.totals-section .total-row[data-field=\"total\"] .total-field`, value: suggestions.total });\n      } catch {}\n\n      // 5) Comments, Contact Info (DOM)\n      const commentsEl = document.querySelector('.comments-content .editable-field');\n      const contactEl  = document.querySelector('.contact-section .editable-field');\n      write(commentsEl, suggestions.comments);\n      write(contactEl, suggestions.contactInfo);\n      try {\n        console.debug('🧭 map(comments):', { selector: '.comments-content .editable-field', value: suggestions.comments });\n        console.debug('🧭 map(contactInfo):', { selector: '.contact-section .editable-field', value: suggestions.contactInfo });\n      } catch {}\n\n      // 6) Bump timestamps\n      updateCompanyFieldsTimestamp();\n      updatePurchaseOrderFieldsTimestamp();\n\n      showNotification('✅ AI suggestions applied', 'success');\n    } catch (e) {\n      console.error('AI fill failed:', e);\n      showNotification(`❌ AI fill failed: ${e.message}`, 'error');\n    }\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n  \n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('📄 Starting XML generation...');\n      \n      // Capture current field values first\n      const capturedData = captureFieldValues();\n      \n      // Prepare data for XML generation\n      // Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\n      const headerSections = Array.from(document.querySelectorAll('.header-section .sortable-section'));\n      const visualSections1And2 = headerSections\n        .map(el => el.id)\n        .filter(id => id === 'section1' || id === 'section2');\n      const sections1And2ForExport = (visualSections1And2.length === 2) ? visualSections1And2 : sections1And2Order;\n      \n      // Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\n      const vendorShipToSections = Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));\n      const visualSections3And4 = vendorShipToSections\n        .map(el => el.id)\n        .filter(id => id === 'section3' || id === 'section4');\n      const sections3And4ForExport = (visualSections3And4.length === 2) ? visualSections3And4 : vendorShipToSectionOrder;\n      \n      // Helpers for DOM reads\n      const getText = (sel) => document.querySelector(sel)?.textContent?.trim() || '';\n      \n      // Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\n      const normalizedLineItems = (capturedData.lineItems || []).map(row => ({\n        // original UI keys\n        itemNumber: row.itemNumber || '',\n        description: row.description || '',\n        qty: row.qty || row.quantity || '',\n        rate: row.rate || row.unitPrice || '',\n        amount: row.amount || row.total || '',\n        // template-expected keys\n        quantity: row.quantity || row.qty || '',\n        unitPrice: row.unitPrice || row.rate || '',\n        total: row.total || row.amount || ''\n      }));\n\n      const exportData = {\n        ...capturedData,\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2ForExport, // Use current visual order to ensure XML matches UI\n          sections3And4: sections3And4ForExport, // Use current visual order to ensure XML matches UI\n          sections5And6: sections5And6Order, // Use actual state for sections 5&6\n          sections3And4And5And6: vendorShipToAndShippingDetailsOrder, // Vendor-ShipTo and Shipping Details order\n          sections8And9: commentsTotalsSectionOrder, // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder, // Use actual state for line item columns\n          shippingColumns: shippingColumnOrder // Use actual state for shipping columns\n        },\n        // CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\n        fieldOrder: {\n          company: companyFieldOrder, // Preserve company field order independently of section position\n          purchaseOrder: purchaseOrderFieldOrder, // Preserve PO field order independently of section position\n          vendor: vendorFields.map(f => f.id), // Vendor field order\n          shipTo: shipToFields.map(f => f.id) // Ship-to field order\n        },\n        // Add normalized line items (support both key schemes)\n        lineItems: normalizedLineItems,\n        // Shipping details (prefer data-field; fall back handled in XML builder too)\n        requisitioner: getText('.shipping-details [data-field=\"requisitioner\"] .editable-field'),\n        shipVia: getText('.shipping-details [data-field=\"shipVia\"] .editable-field'),\n        fob: getText('.shipping-details [data-field=\"fob\"] .editable-field'),\n        shippingTerms: getText('.shipping-details [data-field=\"shippingTerms\"] .editable-field'),\n        // Totals: read what the user sees\n        subtotal: getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field') || '$0.00',\n        tax: getText('.totals-section .total-row[data-field=\"tax\"] .editable-field') || '$0.00',\n        shipping: getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field') || '$0.00',\n        other: getText('.totals-section .total-row[data-field=\"other\"] .editable-field') || '$0.00',\n        total: getText('.totals-section .total-row[data-field=\"total\"] .total-field') || '$0.00',\n        comments: getText('.comments-content .editable-field'),\n        contactInfo: getText('.contact-section .editable-field')\n      };\n      \n      console.debug('🔎 Export DOM reads:', {\n        requisitioner: exportData.requisitioner,\n        shipVia: exportData.shipVia,\n        fob: exportData.fob,\n        shippingTerms: exportData.shippingTerms,\n        subtotal: exportData.subtotal,\n        tax: exportData.tax,\n        shipping: exportData.shipping,\n        other: exportData.other,\n        total: exportData.total\n      });\n\n      console.log('📄 Export data prepared:', exportData);\n      console.log('🔀 Section order being sent to XML:', exportData.sectionOrder);\n      console.log('🔀 Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('🔀 Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('🔀 Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n      console.log('🔀 Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('🔀 Shipping columns order:', exportData.sectionOrder.shippingColumns);\n      console.log('🔀 Line items data:', exportData.lineItems);\n      \n      // CRITICAL: Log field order information\n      console.log('🔀 Field order being sent to XML:', exportData.fieldOrder);\n      console.log('🔀 Company field order:', exportData.fieldOrder.company);\n      console.log('🔀 Purchase order field order:', exportData.fieldOrder.purchaseOrder);\n      console.log('🔀 Vendor field order:', exportData.fieldOrder.vendor);\n      console.log('🔀 Ship-to field order:', exportData.fieldOrder.shipTo);\n      \n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n      \n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n      \n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      \n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n      \n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n\n\n\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add to notification container\n    const container = document.getElementById('notification-container');\n    if (container) {\n      container.appendChild(notification);\n    } else {\n      // Fallback to body if container not found\n      document.body.appendChild(notification);\n    }\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setCompanyFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('🔄 Company field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('🔄 Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed purchase order field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // VENDOR FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Add new vendor field\n  const handleAddVendorField = (newField) => {\n    setVendorFields(prevFields => [...prevFields, newField]);\n    console.log('➕ Added new vendor field:', newField);\n    showNotification(`➕ Added vendor field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove vendor field\n  const handleRemoveVendorField = (fieldId) => {\n    setVendorFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed vendor field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('🗑️ Removed vendor field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle vendor field label changes\n  const handleVendorFieldLabelChange = (fieldId, newLabel) => {\n    setVendorFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'vendor');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n  };\n\n  // ============================================================================\n  // SHIP-TO FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Add new ship-to field\n  const handleAddShipToField = (newField) => {\n    setShipToFields(prevFields => [...prevFields, newField]);\n    console.log('➕ Added new ship-to field:', newField);\n    showNotification(`➕ Added ship-to field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove ship-to field\n  const handleRemoveShipToField = (fieldId) => {\n    setShipToFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed ship-to field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('🗑️ Removed ship-to field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle ship-to field label changes\n  const handleShipToFieldLabelChange = (fieldId, newLabel) => {\n    setShipToFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'ship-to');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setPurchaseOrderFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('🔄 Purchase order field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('🔄 Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for vendor/ship-to section order\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n  \n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n  \n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5', 'section6']);\n  \n  // State for vendor-ship-to and shipping-details sections order\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['sections3And4', 'sections5And6']);\n  \n  // CRITICAL: Add field order state management (same pattern as section order)\n  // State for company field order (preserves drag-and-drop order independently of section position)\n  const [companyFieldOrder, setCompanyFieldOrder] = useState([]);\n  \n  // State for purchase order field order (preserves drag-and-drop order independently of section position)\n  const [purchaseOrderFieldOrder, setPurchaseOrderFieldOrder] = useState([]);\n  \n  // Initialize field order states with current field IDs\n  React.useEffect(() => {\n    setCompanyFieldOrder(companyFields.map(field => field.id));\n  }, [companyFields]);\n  \n  React.useEffect(() => {\n    setPurchaseOrderFieldOrder(purchaseOrderFields.map(field => field.id));\n  }, [purchaseOrderFields]);\n  \n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState([\n    'itemNumber',\n    'description', \n    'qty',\n    'rate',\n    'amount'\n  ]);\n  \n  // Shipping column order state\n  const [shippingColumnOrder, setShippingColumnOrder] = useState([\n    'requisitioner',\n    'shipVia',\n    'fob',\n    'shippingTerms'\n  ]);\n  \n  // Log line item column order changes\n  useEffect(() => {\n    console.log('🔀 Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n  \n  // Log shipping column order changes\n  useEffect(() => {\n    console.log('🚢 Shipping column order updated:', shippingColumnOrder);\n  }, [shippingColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle drag start\n  const handleDragStart = (event) => {\n    const { active } = event;\n    console.log('🚀 DRAG START:', { \n      active: active.id, \n      activeData: active?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n    updateDebugPanel('DRAG START', active.id);\n    \n    // Add dragging state to the dragged element\n    if (active.id === 'section1' || active.id === 'section2') {\n      const element = document.getElementById(active.id);\n      if (element) {\n        element.setAttribute('data-is-dragging', 'true');\n        console.log('✅ Added dragging state to:', active.id);\n        \n        // Add visual feedback\n        element.style.border = '3px solid #ff6b6b';\n        element.style.backgroundColor = 'rgba(255, 107, 107, 0.1)';\n      }\n    }\n  };\n\n  // Function to handle drag over\n  const handleDragOver = (event) => {\n    const { active, over } = event;\n    \n    console.log('🎯 DRAG OVER EVENT:', { \n      active: active?.id, \n      over: over?.id,\n      activeData: active?.data?.current,\n      overData: over?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n    // Handle palette field drag over\n    if (active?.data?.current?.source === 'palette' && over?.data?.current?.type === 'drop-zone') {\n      console.log('🎯 Palette field over drop zone:', { active: active.id, over: over.id });\n      updateDebugPanel('DRAG OVER', `Palette field over ${over.id}`);\n      \n      // Update drop zone visual state\n      const dropZoneElement = document.querySelector(`[data-zone-id=\"${over.id}\"]`);\n      if (dropZoneElement) {\n        dropZoneElement.setAttribute('data-is-over', 'true');\n        dropZoneElement.style.border = '3px solid #10b981';\n        dropZoneElement.style.backgroundColor = 'rgba(16, 185, 129, 0.2)';\n      }\n    }\n    \n    // Handle section reordering drag over\n    if (active.id === 'section1' || active.id === 'section2') {\n      if (over && (over.id === 'section1' || over.id === 'section2')) {\n        console.log('🎯 Section DRAG OVER:', { \n          active: active.id, \n          over: over.id,\n          timestamp: new Date().toISOString()\n        });\n        \n        updateDebugPanel('DRAG OVER', `${active.id} → ${over.id}`);\n        \n        // Add over state to the target element\n        const targetElement = document.getElementById(over.id);\n        if (targetElement) {\n          targetElement.setAttribute('data-is-over', 'true');\n          \n          // Add visual feedback for drop target\n          targetElement.style.border = '3px solid #4ecdc4';\n          targetElement.style.backgroundColor = 'rgba(78, 205, 196, 0.1)';\n        }\n      }\n    }\n  };\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SECTION DRAG DEBUG - Event received:', { \n      activeId: active?.id, \n      overId: over?.id,\n      activeData: active?.data?.current,\n      overData: over?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n    updateDebugPanel('DRAG END', `${active?.id} → ${over?.id}`);\n    \n    if (!active || !over) {\n      console.log('❌ Missing active or over in section drag');\n      return;\n    }\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', { active: active.id, over: over.id });\n      \n      setSections1And2Order((prevOrder) => {\n        console.log('🔄 Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        if (oldIndex === -1 || newIndex === -1) {\n          console.log('❌ Invalid indices found');\n          return prevOrder;\n        }\n        \n        const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\n        \n        console.log('🔄 New section order:', newOrder);\n        console.log('✅ Section swap successful!');\n        \n        showNotification('🔄 Sections swapped successfully!', 'success');\n        console.log('✅ Sections swapped via drag & drop!');\n        \n        return newOrder;\n      });\n      \n      // Clean up data attributes and visual feedback\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    } else {\n      console.log('🔍 No section swap - same position');\n      \n      // Clean up data attributes and visual feedback even if no swap\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', { active: active.id, over: over.id });\n      \n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New sections 5&6 order:', newOrder);\n        \n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Line item column swap detected!', { active: active.id, over: over.id });\n      \n      setLineItemColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('🔄 Previous line item column order:', items);\n        console.log('🔀 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('🔄 New line item column order:', newOrder);\n        showNotification('🔄 Line item columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No line item column swap - same position');\n    }\n  };\n\n  // Handle shipping column drag end\n  const handleShippingColumnDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SHIPPING COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Shipping column swap detected!', { active: active.id, over: over.id });\n      \n      setShippingColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('🔄 Previous shipping column order:', items);\n        console.log('🔀 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('🔄 New shipping column order:', newOrder);\n        showNotification('🚢 Shipping columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No shipping column swap - same position');\n    }\n  };\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor/ship-to order:', newOrder);\n        \n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('🔄 Previous vendor-shipTo + shipping details order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor-shipTo + shipping details order:', newOrder);\n        \n        showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n              showNotification('🔄 Sections swapped!', 'info');\n    \n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n    };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n    \n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n    \n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n    \n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    \n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    \n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n    \n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n    \n    // Capture company field values - PRESERVE CURRENT ORDER\n    console.log('🔍 DEBUG: Current company fields order before capture:', companyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    console.log('🔍 DEBUG: Updated company fields order after capture:', updatedCompanyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('📝 Line items captured:', capturedLineItems);\n    \n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n      \n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      \n      console.log(`📝 Totals field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    \n    console.log('📝 Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n\n  // Unified drag end dispatcher for a single top-level DndContext\n  const handleRootDragEnd = (event) => {\n    const { active } = event;\n    const activeId = active?.id || '';\n    const source = active?.data?.current?.source;\n\n    // Reset section handle dragging state\n    setIsSectionHandleDragging(false);\n\n    if (source === 'palette') {\n      handlePaletteDragEnd(event);\n      return;\n    }\n\n    // Sections 1 & 2 swap\n    if (activeId === 'section1' || activeId === 'section2') {\n      handleSectionDragEnd(event);\n      return;\n    }\n    // Vendor-ShipTo + ShippingDetails container swap\n    if (activeId === 'sections3And4' || activeId === 'sections5And6') {\n      handleVendorShipToAndShippingDetailsDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To section reordering\n    if (activeId === 'section3' || activeId === 'section4') {\n      handleVendorShipToSectionDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To individual field drags\n    if (String(activeId).startsWith('vendor-')) {\n      handleVendorDragEnd(event);\n      return;\n    }\n    if (String(activeId).startsWith('ship-to-')) {\n      handleShipToDragEnd(event);\n      return;\n    }\n    // Line item column reorder\n    if (['itemNumber','description','qty','rate','amount'].includes(activeId)) {\n      handleLineItemColumnDragEnd(event);\n      return;\n    }\n    // Comments & totals sections reorder\n    if (activeId === 'section8' || activeId === 'section9') {\n      handleCommentsTotalsDragEnd(event);\n      return;\n    }\n  };\n\n\n\n  // State for tracking section handle drag operations (simplified)\n  const [isSectionHandleDragging, setIsSectionHandleDragging] = useState(false);\n  \n  // Debug state\n  const [dragCount, setDragCount] = useState(0);\n  const [lastDragEvent, setLastDragEvent] = useState('None');\n\n  // Function to update debug panel\n  const updateDebugPanel = (eventType, details) => {\n    setLastDragEvent(`${eventType}: ${details}`);\n    setDragCount(prev => prev + 1);\n    \n    // Update DOM elements for real-time display\n    const lastDragEventElement = document.getElementById('last-drag-event');\n    const dragCountElement = document.getElementById('drag-count');\n    \n    if (lastDragEventElement) {\n      lastDragEventElement.textContent = `${eventType}: ${details}`;\n    }\n    if (dragCountElement) {\n      dragCountElement.textContent = dragCount + 1;\n    }\n  };\n\n  return (\n    <div className={`purchase-order-container ${!sidebarVisible ? 'sidebar-hidden' : ''}`}>\n      <DndContext \n        sensors={sensors} \n        collisionDetection={rectIntersection}\n        onDragCancel={() => {\n          console.log('❌ Drag cancelled');\n          updateDebugPanel('DRAG CANCEL', 'Drag operation cancelled');\n        }}\n        onDragMove={(event) => {\n          console.log('🔄 Drag move:', event);\n          updateDebugPanel('DRAG MOVE', `${event.active.id} moving`);\n        }}\n        onDragStart={(event) => {\n          console.log('🚀 DndContext Drag Start:', event);\n          handleDragStart(event);\n        }}\n        onDragOver={(event) => {\n          console.log('🎯 DndContext Drag Over:', event);\n          handleDragOver(event);\n        }}\n        onDragEnd={(event) => {\n          console.log('🏁 DndContext Drag End:', event);\n          handleRootDragEnd(event);\n        }}\n      >\n        {console.log('🔧 DndContext rendering with:', {\n          sensors: sensors,\n          collisionDetection: closestCenter,\n          hasDragStart: !!handleDragStart,\n          hasDragOver: !!handleDragOver,\n          hasDragEnd: !!handleRootDragEnd,\n          timestamp: new Date().toISOString()\n        })}\n      {/* Available Fields Sidebar Component */}\n      <AvailableFields \n        isVisible={sidebarVisible}\n        onToggleVisibility={toggleSidebar}\n        showNotification={showNotification}\n      />\n\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n        {/* Sidebar toggle is now handled by AvailableFields component */}\n      </header>\n\n      {/* Debug Panel */}\n      <div className=\"debug-panel\" style={{\n        position: 'fixed',\n        top: '100px',\n        left: '20px',\n        backgroundColor: 'rgba(0, 0, 0, 0.9)',\n        color: 'white',\n        padding: '15px',\n        borderRadius: '8px',\n        fontSize: '12px',\n        fontFamily: 'monospace',\n        zIndex: 10000,\n        maxWidth: '300px',\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\n      }}>\n        <h4 style={{ margin: '0 0 10px 0', color: '#4ecdc4' }}>🐛 Debug Panel</h4>\n        <div style={{ marginBottom: '8px' }}>\n          <strong>Sections 1&2 Order:</strong> {JSON.stringify(sections1And2Order)}\n        </div>\n        <div style={{ marginBottom: '8px' }}>\n          <strong>Section Handle Dragging:</strong> {isSectionHandleDragging ? 'YES' : 'NO'}\n        </div>\n        <div style={{ marginBottom: '8px' }}>\n          <strong>Last Drag Event:</strong> <span id=\"last-drag-event\">None</span>\n        </div>\n        <div style={{ marginBottom: '8px' }}>\n          <strong>Drag Count:</strong> <span id=\"drag-count\">0</span>\n        </div>\n        <button \n          onClick={() => {\n            console.log('🔍 Debug: Current state:', {\n              sections1And2Order,\n              isSectionHandleDragging,\n              companyFields: companyFields.length,\n              purchaseOrderFields: purchaseOrderFields.length\n            });\n          }}\n          style={{\n            backgroundColor: '#4ecdc4',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '10px'\n          }}\n        >\n          Log State\n        </button>\n        \n        <button \n          onClick={() => {\n            console.log('🧪 Testing section swap...');\n            setSections1And2Order(prev => {\n              const newOrder = [...prev].reverse();\n              console.log('🔄 Manual swap:', prev, '→', newOrder);\n              updateDebugPanel('MANUAL SWAP', `${prev.join('→')} → ${newOrder.join('→')}`);\n              return newOrder;\n            });\n          }}\n          style={{\n            backgroundColor: '#ff6b6b',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '10px',\n            marginLeft: '5px'\n          }}\n        >\n          Test Swap\n        </button>\n        \n        <button \n          onClick={() => {\n            console.log('🧪 Testing drag simulation...');\n            // Simulate a drag start event\n            const mockEvent = {\n              active: { id: 'section1', data: { current: { type: 'section', sectionNumber: 1 } } },\n              over: { id: 'section2', data: { current: { type: 'section', sectionNumber: 2 } } }\n            };\n            console.log('🧪 Simulating drag end event:', mockEvent);\n            handleSectionDragEnd(mockEvent);\n          }}\n          style={{\n            backgroundColor: '#ffa500',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '10px',\n            marginLeft: '5px'\n          }}\n        >\n          Test Drag\n        </button>\n        \n        {/* Simple DND Test */}\n        <div style={{ marginTop: '15px', padding: '10px', border: '1px solid #666', borderRadius: '4px' }}>\n          <h5 style={{ margin: '0 0 8px 0', color: '#4ecdc4' }}>🧪 DND Test</h5>\n          <div style={{ fontSize: '10px', marginBottom: '5px' }}>\n            Try dragging this test item:\n          </div>\n          <div \n            style={{\n              width: '100%',\n              height: '30px',\n              backgroundColor: '#7c3aed',\n              color: 'white',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              cursor: 'grab',\n              borderRadius: '4px',\n              fontSize: '10px'\n            }}\n            draggable=\"true\"\n            onDragStart={(e) => {\n              console.log('🧪 Test drag start:', e);\n              e.dataTransfer.setData('text/plain', 'test');\n            }}\n            onDragOver={(e) => {\n              e.preventDefault();\n              console.log('🧪 Test drag over:', e);\n            }}\n            onDrop={(e) => {\n              e.preventDefault();\n              console.log('🧪 Test drop:', e);\n            }}\n          >\n            🧪 Test Drag Item\n          </div>\n        </div>\n      </div>\n\n      {/* Real-time Status Indicator removed per request */}\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section vendor-shipping-columns\">\n              {/* Section-level Drag and Drop */}\n              <SortableContext \n                items={sections1And2Order}\n                strategy={horizontalListSortingStrategy}\n              >\n                {console.log('🔧 SortableContext for sections 1&2:', { \n                  items: sections1And2Order, \n                  strategy: 'horizontalListSortingStrategy',\n                  sections1And2OrderType: typeof sections1And2Order,\n                  sections1And2OrderLength: sections1And2Order?.length,\n                  itemsArray: Array.isArray(sections1And2Order) ? sections1And2Order : 'NOT ARRAY',\n                  timestamp: new Date().toISOString()\n                })}\n                {console.log('🔧 SortableContext items validation:', {\n                  itemsValid: Array.isArray(sections1And2Order) && sections1And2Order.length > 0,\n                  itemsContent: sections1And2Order,\n                  strategyValid: horizontalListSortingStrategy !== undefined,\n                  timestamp: new Date().toISOString()\n                })}\n                {/* CRITICAL: Render sections dynamically based on sections1And2Order state */}\n                {sections1And2Order.map((sectionId, index) => {\n                  console.log(`🔧 Rendering section: ${sectionId} at index ${index}`);\n                  \n                  if (sectionId === 'section1') {\n                    return (\n                      <DroppableZone key=\"section1\" id=\"drop-company\" data-zone-label=\"Company Info\">\n                        <DraggableSectionWrapper id=\"section1\" sectionNumber=\"1\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n                          <Section1CompanyInfo \n                            companyFields={companyFields}\n                            sensors={sensors}\n                            onCompanyDragEnd={handleCompanyDragEnd}\n                            onAddCompanyField={handleAddCompanyField}\n                            onRemoveCompanyField={handleRemoveCompanyField}\n                            onLabelChange={handleCompanyFieldLabelChange}\n                            onContentChange={handleContentChange}\n                            lastModified={lastModified}\n                          />\n                        </DraggableSectionWrapper>\n                      </DroppableZone>\n                    );\n                  } else if (sectionId === 'section2') {\n                    return (\n                      <DroppableZone key=\"section2\" id=\"drop-po\" data-zone-label=\"Purchase Order\">\n                        <DraggableSectionWrapper id=\"section2\" sectionNumber=\"2\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n                          <Section2PurchaseOrder \n                            purchaseOrderFields={purchaseOrderFields}\n                            sensors={sensors}\n                            onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                            onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                            onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                            onLabelChange={handlePurchaseOrderFieldLabelChange}\n                            onContentChange={handleContentChange}\n                            lastModified={poLastModified}\n                          />\n                        </DraggableSectionWrapper>\n                      </DroppableZone>\n                    );\n                  }\n                  return null;\n                })}\n              </SortableContext>\n            </div>\n          </div>\n\n          {/* Vendor-ShipTo and Shipping Details Sections (Vertically Swappable) */}\n          <SortableContext \n            items={vendorShipToAndShippingDetailsOrder}\n            strategy={verticalListSortingStrategy}\n          >\n            {vendorShipToAndShippingDetailsOrder.map(sectionId => {\n              if (sectionId === 'sections3And4') {\n                return (\n                  /* Vendor and Ship To Sections - Side by Side */\n                  <div key=\"sections3And4\" className=\"vendor-shipping-columns\">\n                    <SortableContext \n                      items={vendorShipToSectionOrder}\n                      strategy={horizontalListSortingStrategy}\n                    >\n                      {vendorShipToSectionOrder.map(innerSectionId => {\n                        if (innerSectionId === 'section3') {\n                          return (\n                            <DroppableZone key=\"section3\" id=\"drop-vendor\">\n                              <DraggableSectionWrapper id=\"section3\" sectionNumber=\"3\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={false}>\n                                <Section3Vendor \n                                  vendorFields={vendorFields}\n                                  sensors={sensors}\n                                  onVendorDragEnd={handleVendorDragEnd}\n                                  onAddVendorField={handleAddVendorField}\n                                  onRemoveVendorField={handleRemoveVendorField}\n                                  onLabelChange={handleVendorFieldLabelChange}\n                                  onContentChange={handleContentChange}\n                                  lastModified={Date.now()}\n                                />\n                              </DraggableSectionWrapper>\n                            </DroppableZone>\n                          );\n                        } else if (innerSectionId === 'section4') {\n                          return (\n                            <DroppableZone key=\"section4\" id=\"drop-ship-to\">\n                              <DraggableSectionWrapper id=\"section4\" sectionNumber=\"4\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={false}>\n                                <Section4ShipTo \n                                  shipToFields={shipToFields}\n                                  sensors={sensors}\n                                  onShipToDragEnd={handleShipToDragEnd}\n                                  onAddShipToField={handleAddShipToField}\n                                  onRemoveShipToField={handleRemoveShipToField}\n                                  onLabelChange={handleShipToFieldLabelChange}\n                                  onContentChange={handleContentChange}\n                                  lastModified={Date.now()}\n                                />\n                              </DraggableSectionWrapper>\n                            </DroppableZone>\n                          );\n                        }\n                        return null;\n                      })}\n                    </SortableContext>\n                  </div>\n                );\n              } else if (sectionId === 'sections5And6') {\n                return (\n                  <DraggableSectionWrapper key=\"sections5And6\" id=\"sections5And6\" sectionNumber=\"5&6\">\n                    {/* Shipping Details Section */}\n                    <div className=\"shipping-details\">\n                      <div className=\"section-header\">REQUISITIONER</div>\n                      <div className=\"section-header\">SHIP VIA</div>\n                      <div className=\"section-header\">F.O.B.</div>\n                      <div className=\"section-header\">SHIPPING TERMS</div>\n                      <div className=\"shipping-field\" data-field=\"requisitioner\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Requisitioner name\" /></div>\n                      <div className=\"shipping-field\" data-field=\"shipVia\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping method\" /></div>\n                      <div className=\"shipping-field\" data-field=\"fob\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"FOB terms\" /></div>\n                      <div className=\"shipping-field\" data-field=\"shippingTerms\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping terms\" /></div>\n                    </div>\n                  </DraggableSectionWrapper>\n                );\n              }\n              return null;\n            })}\n          </SortableContext>\n\n          {/* Items Table */}\n          <SortableContext items={lineItemColumnOrder} strategy={verticalListSortingStrategy}>\n            <table className=\"itemtable\">\n              <thead>\n                <tr>\n                  <th></th>\n                  {lineItemColumnOrder.map((columnId) => {\n                    const columnConfig = {\n                      itemNumber: { label: 'Item#', colSpan: 3 },\n                      description: { label: 'Description', colSpan: 12 },\n                      qty: { label: 'Qty', colSpan: 2 },\n                      rate: { label: 'Rate', colSpan: 3 },\n                      amount: { label: 'Amount', colSpan: 3 }\n                    };\n                    \n                    const config = columnConfig[columnId];\n                    return (\n                      <th key={columnId} colSpan={config.colSpan}>\n                        {config.label}\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {[1, 2, 3, 4, 5].map((row) => (\n                  <tr key={row} className=\"draggable-row\">\n                    <td></td>\n                    {lineItemColumnOrder.map((columnId) => {\n                      const columnConfig = {\n                        itemNumber: { colSpan: 3, placeholder: 'Item number' },\n                        description: { colSpan: 12, placeholder: 'Item description' },\n                        qty: { colSpan: 2, placeholder: 'Qty' },\n                        rate: { colSpan: 3, placeholder: '$0.00' },\n                        amount: { colSpan: 3, placeholder: '$0.00' }\n                      };\n                      \n                      const config = columnConfig[columnId];\n                      return (\n                        <td key={`${row}-${columnId}`} colSpan={config.colSpan} data-column={columnId}>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder={config.placeholder} />\n                        </td>\n                      );\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </SortableContext>\n\n          {/* Comments and Totals - Sections 8 & 9 */}\n          <SortableContext items={commentsTotalsSectionOrder} strategy={horizontalListSortingStrategy}>\n            <div className=\"comments-totals-section\" style={{ display: 'flex', gap: '20px' }}>\n              {commentsTotalsSectionOrder.map((sectionId) => {\n                if (sectionId === 'section8') {\n                  return (\n                    <div key=\"section8\" id=\"section8\" className=\"sortable-section comments-section\" style={{ flex: 1 }}>\n                      <DraggableSectionHeader id=\"section8\">\n                        Comments or Special Instructions ::\n                      </DraggableSectionHeader>\n                      <div className=\"section-content\">\n                        <div className=\"comments-content\">\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n                        </div>\n                      </div>\n                    </div>\n                  );\n                } else if (sectionId === 'section9') {\n                  return (\n                    <div key=\"section9\" id=\"section9\" className=\"sortable-section totals-section\" style={{ flex: 1 }}>\n                      <DraggableSectionHeader id=\"section9\">\n                        Totals ::\n                      </DraggableSectionHeader>\n                      <div className=\"section-content\">\n                        <div className=\"total-row\" data-field=\"subtotal\">\n                          <span>SUBTOTAL:</span>\n                          <span className=\"calculated-field\">$0.00</span>\n                        </div>\n                        <div className=\"total-row\" data-field=\"tax\">\n                          <span>TAX:</span>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                        </div>\n                        <div className=\"total-row\" data-field=\"shipping\">\n                          <span>SHIPPING:</span>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                        </div>\n                        <div className=\"total-row\" data-field=\"other\">\n                          <span>OTHER:</span>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                        </div>\n                        <div className=\"total-row total-final\" data-field=\"total\">\n                          <span>TOTAL:</span>\n                          <span className=\"calculated-field total-field\">$0.00</span>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }\n                return null;\n              })}\n            </div>\n          </SortableContext>\n\n\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <div className=\"contact-content\">\n              <strong>Contact Information:</strong>\n              <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"button-section\">\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'}\n            </button>\n            <button className=\"btn\" onClick={handleAIFill}>\n              🤖 AI Fill\n            </button>\n            <button className=\"btn export-btn\" onClick={exportToXML}>\n              📄 Generate XML\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                📝 Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  🗑️ Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change) => (\n                  <div key={change.id} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">→</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* XML Output Modal */}\n          {showXMLModal && (\n            <div className=\"xml-modal-overlay\" onClick={closeXMLModal}>\n              <div className=\"xml-modal\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"xml-modal-header\">\n                  <h3>📄 Generated XML Output</h3>\n                  <button className=\"xml-modal-close\" onClick={closeXMLModal}>×</button>\n                </div>\n                <div className=\"xml-modal-content\">\n                  <div className=\"xml-output-container\">\n                    <pre className=\"xml-code\">{xmlOutput}</pre>\n                  </div>\n                </div>\n                <div className=\"xml-modal-actions\">\n                  <button className=\"btn copy-btn\" onClick={copyXMLToClipboard}>\n                    📋 Copy XML\n                  </button>\n                  <button className=\"btn download-btn\" onClick={downloadXML}>\n                    📥 Download XML\n                  </button>\n                  <button className=\"btn close-btn\" onClick={closeXMLModal}>\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n\n\n\n\n        </div>\n      </div>\n      </DndContext>\n      \n      {/* Notification Container */}\n      <div id=\"notification-container\"></div>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}