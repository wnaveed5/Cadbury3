{"ast":null,"code":"import{useSensor,useSensors,PointerSensor,KeyboardSensor,MouseSensor,TouchSensor}from'@dnd-kit/core';import{sortableKeyboardCoordinates,arrayMove}from'@dnd-kit/sortable';export function useDragAndDropSensors(){var _mouseSensor$construc,_touchSensor$construc,_keyboardSensor$const;console.log('ðŸ”§ Creating sensors...');// Try using MouseSensor and TouchSensor instead of PointerSensor\nconst mouseSensor=useSensor(MouseSensor);const touchSensor=useSensor(TouchSensor);const keyboardSensor=useSensor(KeyboardSensor,{coordinateGetter:sortableKeyboardCoordinates});console.log('ðŸ”§ Individual sensors:',{mouseSensor:mouseSensor,touchSensor:touchSensor,keyboardSensor:keyboardSensor,mouseSensorType:mouseSensor===null||mouseSensor===void 0?void 0:(_mouseSensor$construc=mouseSensor.constructor)===null||_mouseSensor$construc===void 0?void 0:_mouseSensor$construc.name,touchSensorType:touchSensor===null||touchSensor===void 0?void 0:(_touchSensor$construc=touchSensor.constructor)===null||_touchSensor$construc===void 0?void 0:_touchSensor$construc.name,keyboardSensorType:keyboardSensor===null||keyboardSensor===void 0?void 0:(_keyboardSensor$const=keyboardSensor.constructor)===null||_keyboardSensor$const===void 0?void 0:_keyboardSensor$const.name});const sensors=useSensors(mouseSensor,touchSensor,keyboardSensor);console.log('ðŸ”§ Sensors created:',{sensors:sensors,sensorCount:sensors.length,sensorTypes:sensors.map(s=>s.constructor.name||'unknown'),timestamp:new Date().toISOString()});return sensors;}export function useCompanyFieldsDragEnd(setCompanyFields){return event=>{const{active,over}=event;if(active.id!==over.id){console.log('ðŸ”„ Company field drag detected:',{active:active.id,over:over.id});setCompanyFields(items=>{const oldIndex=items.findIndex(field=>field.id===active.id);const newIndex=items.findIndex(field=>field.id===over.id);console.log('ðŸ”„ Company field indices:',{oldIndex,newIndex});const newOrder=arrayMove(items,oldIndex,newIndex);console.log('ðŸ”„ New company field order:',newOrder.map(f=>f.id));return newOrder;});}};}export function usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields){return event=>{const{active,over}=event;if(active.id!==over.id){setPurchaseOrderFields(items=>{const oldIndex=items.findIndex(field=>field.id===active.id);const newIndex=items.findIndex(field=>field.id===over.id);return arrayMove(items,oldIndex,newIndex);});}};}export function useVendorFieldsDragEnd(setVendorFields){return event=>{const{active,over}=event;if(active.id!==over.id){setVendorFields(items=>{const oldIndex=items.findIndex(field=>field.id===active.id);const newIndex=items.findIndex(field=>field.id===over.id);return arrayMove(items,oldIndex,newIndex);});}};}export function useShipToFieldsDragEnd(setShipToFields){return event=>{const{active,over}=event;if(active.id!==over.id){setShipToFields(items=>{const oldIndex=items.findIndex(field=>field.id===active.id);const newIndex=items.findIndex(field=>field.id===over.id);return arrayMove(items,oldIndex,newIndex);});}};}","map":{"version":3,"names":["useSensor","useSensors","PointerSensor","KeyboardSensor","MouseSensor","TouchSensor","sortableKeyboardCoordinates","arrayMove","useDragAndDropSensors","_mouseSensor$construc","_touchSensor$construc","_keyboardSensor$const","console","log","mouseSensor","touchSensor","keyboardSensor","coordinateGetter","mouseSensorType","constructor","name","touchSensorType","keyboardSensorType","sensors","sensorCount","length","sensorTypes","map","s","timestamp","Date","toISOString","useCompanyFieldsDragEnd","setCompanyFields","event","active","over","id","items","oldIndex","findIndex","field","newIndex","newOrder","f","usePurchaseOrderFieldsDragEnd","setPurchaseOrderFields","useVendorFieldsDragEnd","setVendorFields","useShipToFieldsDragEnd","setShipToFields"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/hooks/useDragAndDrop.js"],"sourcesContent":["import { useSensor, useSensors, PointerSensor, KeyboardSensor, MouseSensor, TouchSensor } from '@dnd-kit/core';\nimport { sortableKeyboardCoordinates, arrayMove } from '@dnd-kit/sortable';\n\nexport function useDragAndDropSensors() {\n  console.log('ðŸ”§ Creating sensors...');\n  \n  // Try using MouseSensor and TouchSensor instead of PointerSensor\n  const mouseSensor = useSensor(MouseSensor);\n  const touchSensor = useSensor(TouchSensor);\n  const keyboardSensor = useSensor(KeyboardSensor, {\n    coordinateGetter: sortableKeyboardCoordinates,\n  });\n  \n  console.log('ðŸ”§ Individual sensors:', {\n    mouseSensor: mouseSensor,\n    touchSensor: touchSensor,\n    keyboardSensor: keyboardSensor,\n    mouseSensorType: mouseSensor?.constructor?.name,\n    touchSensorType: touchSensor?.constructor?.name,\n    keyboardSensorType: keyboardSensor?.constructor?.name\n  });\n  \n  const sensors = useSensors(mouseSensor, touchSensor, keyboardSensor);\n  \n  console.log('ðŸ”§ Sensors created:', {\n    sensors: sensors,\n    sensorCount: sensors.length,\n    sensorTypes: sensors.map(s => s.constructor.name || 'unknown'),\n    timestamp: new Date().toISOString()\n  });\n  \n  return sensors;\n}\n\n\n\nexport function useCompanyFieldsDragEnd(setCompanyFields) {\n  return (event) => {\n    const { active, over } = event;\n\n    if (active.id !== over.id) {\n      console.log('ðŸ”„ Company field drag detected:', { active: active.id, over: over.id });\n      setCompanyFields((items) => {\n        const oldIndex = items.findIndex(field => field.id === active.id);\n        const newIndex = items.findIndex(field => field.id === over.id);\n        \n        console.log('ðŸ”„ Company field indices:', { oldIndex, newIndex });\n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        console.log('ðŸ”„ New company field order:', newOrder.map(f => f.id));\n        \n        return newOrder;\n      });\n    }\n  };\n}\n\nexport function usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields) {\n  return (event) => {\n    const { active, over } = event;\n\n    if (active.id !== over.id) {\n      setPurchaseOrderFields((items) => {\n        const oldIndex = items.findIndex(field => field.id === active.id);\n        const newIndex = items.findIndex(field => field.id === over.id);\n        \n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n}\n\nexport function useVendorFieldsDragEnd(setVendorFields) {\n  return (event) => {\n    const { active, over } = event;\n\n    if (active.id !== over.id) {\n      setVendorFields((items) => {\n        const oldIndex = items.findIndex(field => field.id === active.id);\n        const newIndex = items.findIndex(field => field.id === over.id);\n        \n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n}\n\nexport function useShipToFieldsDragEnd(setShipToFields) {\n  return (event) => {\n    const { active, over } = event;\n\n    if (active.id !== over.id) {\n      setShipToFields((items) => {\n        const oldIndex = items.findIndex(field => field.id === active.id);\n        const newIndex = items.findIndex(field => field.id === over.id);\n        \n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}