{"ast":null,"code":"var _jsxFileName = \"/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\n\n// Import custom hooks\nimport { useDragAndDropSensors, useCompanyFieldsDragEnd, usePurchaseOrderFieldsDragEnd, useVendorFieldsDragEnd, useShipToFieldsDragEnd } from './hooks/useDragAndDrop';\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\n\n// Main Purchase Order Form Component\n\n// Main Purchase Order Form Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PurchaseOrderForm() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n\n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([{\n    id: 'company-name',\n    label: 'Company Name:',\n    placeholder: 'Enter company name',\n    value: ''\n  }, {\n    id: 'company-address',\n    label: 'Street Address:',\n    placeholder: 'Enter street address',\n    value: ''\n  }, {\n    id: 'company-city-state',\n    label: 'City, ST ZIP:',\n    placeholder: 'City, State ZIP',\n    value: ''\n  }, {\n    id: 'company-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }, {\n    id: 'company-fax',\n    label: 'Fax:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }, {\n    id: 'company-website',\n    label: 'Website:',\n    placeholder: 'www.example.com',\n    value: ''\n  }]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([{\n    id: 'po-title',\n    label: 'Purchase Order',\n    placeholder: '',\n    isTitle: true,\n    value: 'Purchase Order'\n  }, {\n    id: 'po-date',\n    label: 'DATE:',\n    placeholder: 'MM/DD/YYYY',\n    value: ''\n  }, {\n    id: 'po-number',\n    label: 'PO #:',\n    placeholder: 'PO#123456',\n    value: ''\n  }]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([{\n    id: 'vendor-company',\n    label: 'Company:',\n    placeholder: 'Vendor name',\n    value: ''\n  }, {\n    id: 'vendor-contact',\n    label: 'Contact:',\n    placeholder: 'Contact person',\n    value: ''\n  }, {\n    id: 'vendor-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: ''\n  }, {\n    id: 'vendor-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: ''\n  }, {\n    id: 'vendor-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([{\n    id: 'ship-to-name',\n    label: 'Name:',\n    placeholder: 'Contact name',\n    value: ''\n  }, {\n    id: 'ship-to-company',\n    label: 'Company:',\n    placeholder: 'Shipping company',\n    value: ''\n  }, {\n    id: 'ship-to-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: ''\n  }, {\n    id: 'ship-to-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: ''\n  }, {\n    id: 'ship-to-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }]);\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n\n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = newField => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    logChange('field-add', newField.id, '', newField.label, 'company');\n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = fieldId => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed company field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n\n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n\n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n\n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n\n  // Function to display XML output in a modal\n  const displayXMLOutput = xml => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n\n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n\n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n\n  // Function to download XML file\n  const downloadXML = () => {\n    var _purchaseOrderFields$;\n    const blob = new Blob([xmlOutput], {\n      type: 'application/xml'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${((_purchaseOrderFields$ = purchaseOrderFields.find(f => f.id === 'po-number')) === null || _purchaseOrderFields$ === void 0 ? void 0 : _purchaseOrderFields$.value) || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n\n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      var _document$querySelect, _document$querySelect2, _document$querySelect3, _document$querySelect4, _document$querySelect5, _document$querySelect6, _document$querySelect7, _document$querySelect8, _document$querySelect9;\n      console.log('📄 Starting XML generation...');\n\n      // Capture current field values first\n      const capturedData = captureFieldValues();\n\n      // Prepare data for XML generation\n      const exportData = {\n        ...capturedData,\n        // Add additional fields that might not be in the form state\n        lineItems: [\n          // This would be populated from the line items table\n          // Empty array for now - will be populated from actual form data\n        ],\n        requisitioner: ((_document$querySelect = document.querySelector('.shipping-field:nth-child(1) .editable-field')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.textContent) || '',\n        shipVia: ((_document$querySelect2 = document.querySelector('.shipping-field:nth-child(2) .editable-field')) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.textContent) || '',\n        fob: ((_document$querySelect3 = document.querySelector('.shipping-field:nth-child(3) .editable-field')) === null || _document$querySelect3 === void 0 ? void 0 : _document$querySelect3.textContent) || '',\n        shippingTerms: ((_document$querySelect4 = document.querySelector('.shipping-field:nth-child(4) .editable-field')) === null || _document$querySelect4 === void 0 ? void 0 : _document$querySelect4.textContent) || '',\n        subtotal: '0.00',\n        // This would be calculated from line items\n        tax: ((_document$querySelect5 = document.querySelector('.total-row:nth-child(2) .editable-field')) === null || _document$querySelect5 === void 0 ? void 0 : _document$querySelect5.textContent) || '0.00',\n        shipping: ((_document$querySelect6 = document.querySelector('.total-row:nth-child(3) .editable-field')) === null || _document$querySelect6 === void 0 ? void 0 : _document$querySelect6.textContent) || '0.00',\n        other: ((_document$querySelect7 = document.querySelector('.total-row:nth-child(4) .editable-field')) === null || _document$querySelect7 === void 0 ? void 0 : _document$querySelect7.textContent) || '0.00',\n        total: '0.00',\n        // This would be calculated\n        comments: ((_document$querySelect8 = document.querySelector('.comments-content .editable-field')) === null || _document$querySelect8 === void 0 ? void 0 : _document$querySelect8.textContent) || '',\n        contactInfo: ((_document$querySelect9 = document.querySelector('.contact-section .editable-field')) === null || _document$querySelect9 === void 0 ? void 0 : _document$querySelect9.textContent) || ''\n      };\n      console.log('📄 Export data prepared:', exportData);\n\n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n\n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n\n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = event => {\n    _s();\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n\n  // Function to log a summary of all field states\n  _s(handleCompanyDragEnd, \"Z4WIFLscuzsxuDjcfj/36TQtLNg=\", false, function () {\n    return [useCompanyFieldsDragEnd];\n  });\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({\n          id: f.id,\n          label: f.label\n        }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({\n          id: f.id,\n          label: f.label,\n          isTitle: f.isTitle\n        }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = newField => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = fieldId => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = event => {\n    _s2();\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n\n  // State for section order\n  _s2(handlePurchaseOrderDragEnd, \"v6fWquKCV6fyV8vMqH2r576JyB4=\", false, function () {\n    return [usePurchaseOrderFieldsDragEnd];\n  });\n  const [sectionOrder, setSectionOrder] = useState(['section1', 'section2']);\n\n  // State for vendor/ship-to section order\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n\n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5', 'section6']);\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSectionOrder(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New section order:', newOrder);\n\n        // Swap the actual field data when sections are reordered\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n          // Section 1 moved to position 2\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle,\n              // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          console.log('🔄 Fields swapped in state!');\n\n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          showNotification('🔄 Sections swapped!', 'info');\n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n          // Section 2 moved to position 1\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle,\n              // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          console.log('🔄 Fields swapped in state!');\n\n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          showNotification('🔄 Sections swapped!', 'info');\n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        }\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New sections 5&6 order:', newOrder);\n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New vendor/ship-to order:', newOrder);\n\n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n\n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle,\n        // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n\n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n\n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    showNotification('🔄 Sections swapped!', 'info');\n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n\n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      }))\n    });\n  };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n\n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n\n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n\n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n\n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n\n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n\n    // Capture company field values\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    console.log('📝 Field values captured and state updated!');\n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"purchase-order-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Purchase Order Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create, edit, and manage purchase orders with ease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-indicator\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCCA Total Fields:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().totalFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83C\\uDFE2 Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().companyFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCCB Purchase Order:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().purchaseOrderFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCDD Changes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().totalChanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDD52 Last Modified:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: new Date(getFormStats().lastModified).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 11\n        }, this), lastExportTime && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCC4 Last Export:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: new Date(lastExportTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-section\",\n            children: /*#__PURE__*/_jsxDEV(DndContext, {\n              sensors: sensors,\n              collisionDetection: closestCenter,\n              onDragEnd: handleSectionDragEnd,\n              children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                items: sectionOrder,\n                strategy: verticalListSortingStrategy,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"section1\",\n                  className: \"sortable-section\",\n                  children: /*#__PURE__*/_jsxDEV(Section1CompanyInfo, {\n                    companyFields: companyFields,\n                    sensors: sensors,\n                    onCompanyDragEnd: handleCompanyDragEnd,\n                    onAddCompanyField: handleAddCompanyField,\n                    onRemoveCompanyField: handleRemoveCompanyField,\n                    onLabelChange: handleCompanyFieldLabelChange,\n                    onContentChange: handleContentChange,\n                    lastModified: lastModified\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 947,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 946,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"section2\",\n                  className: \"sortable-section\",\n                  children: /*#__PURE__*/_jsxDEV(Section2PurchaseOrder, {\n                    purchaseOrderFields: purchaseOrderFields,\n                    sensors: sensors,\n                    onPurchaseOrderDragEnd: handlePurchaseOrderDragEnd,\n                    onAddPurchaseOrderField: handleAddPurchaseOrderField,\n                    onRemovePurchaseOrderField: handleRemovePurchaseOrderField,\n                    onLabelChange: handlePurchaseOrderFieldLabelChange,\n                    onContentChange: handleContentChange,\n                    lastModified: poLastModified\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 961,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 960,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 934,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n          sensors: sensors,\n          collisionDetection: closestCenter,\n          onDragEnd: handleSections5And6DragEnd,\n          children: /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: sections5And6Order,\n            strategy: verticalListSortingStrategy,\n            children: sections5And6Order.map(sectionId => {\n              if (sectionId === 'section5') {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"section5\",\n                  className: \"sortable-section section-5\",\n                  children: /*#__PURE__*/_jsxDEV(Section3VendorShipTo, {\n                    vendorFields: vendorFields,\n                    shipToFields: shipToFields,\n                    sensors: sensors,\n                    onVendorDragEnd: handleVendorDragEnd,\n                    onShipToDragEnd: handleShipToDragEnd,\n                    onVendorShipToSectionDragEnd: handleVendorShipToSectionDragEnd,\n                    vendorShipToSectionOrder: vendorShipToSectionOrder\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 992,\n                    columnNumber: 23\n                  }, this)\n                }, \"section5\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 21\n                }, this);\n              } else if (sectionId === 'section6') {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"section6\",\n                  className: \"sortable-section section-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"shipping-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"REQUISITIONER\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1008,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"SHIP VIA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1009,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"F.O.B.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1010,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: \"SHIPPING TERMS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1011,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"Requisitioner name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1012,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1012,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"Shipping method\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1013,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1013,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"FOB terms\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1014,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1014,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"shipping-field\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"editable-field\",\n                        contentEditable: \"true\",\n                        \"data-placeholder\": \"Shipping terms\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1015,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1015,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1007,\n                    columnNumber: 23\n                  }, this)\n                }, \"section6\", false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1005,\n                  columnNumber: 21\n                }, this);\n              }\n              return null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"itemtable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"3\",\n                children: \"Item#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"12\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"2\",\n                children: \"Qty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1032,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"3\",\n                children: \"Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1033,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"3\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [1, 2, 3, 4, 5].map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"draggable-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1040,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"Item number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1041,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"Item description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1042,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"2\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"$0.00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1044,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"$0.00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1045,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1045,\n                columnNumber: 19\n              }, this)]\n            }, row, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-totals-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              children: \"Comments or Special Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-content\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"Enter comments or special instructions...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1055,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"totals-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"SUBTOTAL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"calculated-field\",\n                children: \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1063,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1061,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"TAX:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"SHIPPING:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1071,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1069,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"OTHER:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1074,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1075,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1073,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row total-final\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"TOTAL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"calculated-field total-field\",\n                children: \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1079,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1060,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contact Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1086,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1086,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"editable-field\",\n            contentEditable: \"true\",\n            \"data-placeholder\": \"Enter contact information here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn preview-btn\",\n            onClick: togglePreviewMode,\n            children: isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn export-btn\",\n            onClick: exportToXML,\n            children: \"\\uD83D\\uDCC4 Generate XML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 11\n        }, this), changeHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-history-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [\"\\uD83D\\uDCDD Change History (\", changeHistory.length, \" changes)\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-history-btn\",\n              onClick: clearChangeHistory,\n              children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-list\",\n            children: [changeHistory.slice(0, 10).map(change => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-time\",\n                children: new Date(change.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1112,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-type\",\n                children: change.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-field\",\n                children: change.fieldId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1116,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-old\",\n                children: change.oldValue || 'empty'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1117,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-arrow\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-new\",\n                children: change.newValue || 'empty'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 21\n              }, this)]\n            }, change.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1111,\n              columnNumber: 19\n            }, this)), changeHistory.length > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-more\",\n              children: [\"... and \", changeHistory.length - 10, \" more changes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1102,\n          columnNumber: 13\n        }, this), showXMLModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"xml-modal-overlay\",\n          onClick: closeXMLModal,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"xml-modal\",\n            onClick: e => e.stopPropagation(),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"xml-modal-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\uD83D\\uDCC4 Generated XML Output\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"xml-modal-close\",\n                onClick: closeXMLModal,\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"xml-modal-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-output-container\",\n                children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                  className: \"xml-code\",\n                  children: xmlOutput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1141,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1140,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"xml-modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn copy-btn\",\n                onClick: copyXMLToClipboard,\n                children: \"\\uD83D\\uDCCB Copy XML\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn download-btn\",\n                onClick: downloadXML,\n                children: \"\\uD83D\\uDCE5 Download XML\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn close-btn\",\n                onClick: closeXMLModal,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 886,\n    columnNumber: 5\n  }, this);\n}\n_s3(PurchaseOrderForm, \"SfBhvaT0PcW+3/qgDQMc/khL6HQ=\", false, function () {\n  return [useDragAndDropSensors, useVendorFieldsDragEnd, useShipToFieldsDragEnd];\n});\n_c = PurchaseOrderForm;\nexport default PurchaseOrderForm;\nvar _c;\n$RefreshReg$(_c, \"PurchaseOrderForm\");","map":{"version":3,"names":["React","useState","useEffect","generatePurchaseOrderXML","Section1CompanyInfo","Section2PurchaseOrder","Section3VendorShipTo","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","SortableContext","verticalListSortingStrategy","jsxDEV","_jsxDEV","PurchaseOrderForm","_s3","_s","$RefreshSig$","_s2","companyFields","setCompanyFields","id","label","placeholder","value","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","purchaseOrderFields","setPurchaseOrderFields","isTitle","vendorFields","setVendorFields","shipToFields","setShipToFields","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","handleAddCompanyField","newField","prevFields","logChange","console","log","handleRemoveCompanyField","fieldId","fieldToRemove","find","field","showNotification","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","changeType","oldValue","newValue","section","change","now","timestamp","type","prev","slice","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","map","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","f","togglePreviewMode","clearChangeHistory","showXMLModal","setShowXMLModal","xmlOutput","setXmlOutput","displayXMLOutput","xml","closeXMLModal","copyXMLToClipboard","navigator","clipboard","writeText","then","catch","downloadXML","_purchaseOrderFields$","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","exportToXML","_document$querySelect","_document$querySelect2","_document$querySelect3","_document$querySelect4","_document$querySelect5","_document$querySelect6","_document$querySelect7","_document$querySelect8","_document$querySelect9","capturedData","captureFieldValues","exportData","lineItems","requisitioner","querySelector","textContent","shipVia","fob","shippingTerms","subtotal","tax","shipping","other","total","comments","contactInfo","error","message","existingNotification","remove","notification","className","innerHTML","style","cssText","head","setTimeout","parentElement","getFormStats","totalFields","length","totalChanges","Math","max","getTime","handleCompanyDragEnd","event","active","over","logFieldSummary","company","toLocaleString","fields","purchaseOrder","handleAddPurchaseOrderField","handleRemovePurchaseOrderField","handlePurchaseOrderDragEnd","sectionOrder","setSectionOrder","vendorShipToSectionOrder","setVendorShipToSectionOrder","sections5And6Order","setSections5And6Order","handleSectionDragEnd","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","companyFieldValues","element","getElementById","trim","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSections5And6DragEnd","handleVendorShipToSectionDragEnd","handleSwapSections","handleSwapVendorShipTo","vendorFieldValues","shipToFieldValues","reverse","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","collisionDetection","onDragEnd","items","strategy","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","sectionId","onVendorDragEnd","onShipToDragEnd","onVendorShipToSectionDragEnd","contentEditable","colSpan","row","onClick","e","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\n\n\n// Main Purchase Order Form Component\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: '' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: '' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: '' }\n  ]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: '' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: '' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: '' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: '' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: '' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChange('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      showNotification(`🗑️ Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n  \n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n  \n  // Function to display XML output in a modal\n  const displayXMLOutput = (xml) => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n  \n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n  \n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n  \n  // Function to download XML file\n  const downloadXML = () => {\n    const blob = new Blob([xmlOutput], { type: 'application/xml' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${purchaseOrderFields.find(f => f.id === 'po-number')?.value || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n  \n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('📄 Starting XML generation...');\n      \n      // Capture current field values first\n      const capturedData = captureFieldValues();\n      \n      // Prepare data for XML generation\n      const exportData = {\n        ...capturedData,\n        // Add additional fields that might not be in the form state\n        lineItems: [\n          // This would be populated from the line items table\n          // Empty array for now - will be populated from actual form data\n        ],\n        requisitioner: document.querySelector('.shipping-field:nth-child(1) .editable-field')?.textContent || '',\n        shipVia: document.querySelector('.shipping-field:nth-child(2) .editable-field')?.textContent || '',\n        fob: document.querySelector('.shipping-field:nth-child(3) .editable-field')?.textContent || '',\n        shippingTerms: document.querySelector('.shipping-field:nth-child(4) .editable-field')?.textContent || '',\n        subtotal: '0.00', // This would be calculated from line items\n        tax: document.querySelector('.total-row:nth-child(2) .editable-field')?.textContent || '0.00',\n        shipping: document.querySelector('.total-row:nth-child(3) .editable-field')?.textContent || '0.00',\n        other: document.querySelector('.total-row:nth-child(4) .editable-field')?.textContent || '0.00',\n        total: '0.00', // This would be calculated\n        comments: document.querySelector('.comments-content .editable-field')?.textContent || '',\n        contactInfo: document.querySelector('.contact-section .editable-field')?.textContent || ''\n      };\n      \n      console.log('📄 Export data prepared:', exportData);\n      \n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n      \n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n      \n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      \n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n      \n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n\n\n\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Company fields reordered');\n      \n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Purchase order fields reordered');\n\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for section order\n  const [sectionOrder, setSectionOrder] = useState(['section1', 'section2']);\n  \n  // State for vendor/ship-to section order\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n  \n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5', 'section6']);\n  \n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', { active: active.id, over: over.id });\n      \n      setSectionOrder(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New section order:', newOrder);\n        \n        // Swap the actual field data when sections are reordered\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n          \n          // Section 1 moved to position 2\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle, // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n          \n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          \n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          \n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          \n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          \n          console.log('🔄 Fields swapped in state!');\n          \n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          \n          showNotification('🔄 Sections swapped!', 'info');\n          \n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n          \n          // Section 2 moved to position 1\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle, // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n          \n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          \n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          \n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          \n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          \n          console.log('🔄 Fields swapped in state!');\n          \n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          \n          showNotification('🔄 Sections swapped!', 'info');\n          \n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        }\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', { active: active.id, over: over.id });\n      \n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New sections 5&6 order:', newOrder);\n        \n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor/ship-to order:', newOrder);\n        \n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n              showNotification('🔄 Sections swapped!', 'info');\n    \n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n    };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n    \n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n    \n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n    \n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    \n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    \n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n    \n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n    \n    // Capture company field values\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    \n    console.log('📝 Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields\n    };\n  };\n\n\n\n  return (\n    <div className=\"purchase-order-container\">\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n      </header>\n\n      {/* Real-time Status Indicator */}\n      <div className=\"status-indicator\">\n        <div className=\"status-grid\">\n          <div className=\"status-item\">\n            <span className=\"status-label\">📊 Total Fields:</span>\n            <span className=\"status-value\">{getFormStats().totalFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">🏢 Company:</span>\n            <span className=\"status-value\">{getFormStats().companyFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">📋 Purchase Order:</span>\n            <span className=\"status-value\">{getFormStats().purchaseOrderFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">📝 Changes:</span>\n            <span className=\"status-value\">{getFormStats().totalChanges}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">🕒 Last Modified:</span>\n            <span className=\"status-value\">\n              {new Date(getFormStats().lastModified).toLocaleTimeString()}\n            </span>\n          </div>\n          {lastExportTime && (\n            <div className=\"status-item\">\n              <span className=\"status-label\">📄 Last Export:</span>\n              <span className=\"status-value\">\n                {new Date(lastExportTime).toLocaleTimeString()}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section\">\n              {/* Section-level Drag and Drop */}\n              <DndContext \n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragEnd={handleSectionDragEnd}\n              >\n                <SortableContext \n                  items={sectionOrder}\n                  strategy={verticalListSortingStrategy}\n                >\n                  {/* Section 1: Company Info */}\n                  <div id=\"section1\" className=\"sortable-section\">\n                    <Section1CompanyInfo \n                      companyFields={companyFields}\n                      sensors={sensors}\n                      onCompanyDragEnd={handleCompanyDragEnd}\n                      onAddCompanyField={handleAddCompanyField}\n                      onRemoveCompanyField={handleRemoveCompanyField}\n                      onLabelChange={handleCompanyFieldLabelChange}\n                      onContentChange={handleContentChange}\n                      lastModified={lastModified}\n                    />\n                  </div>\n                  \n                  {/* Section 2: Purchase Order */}\n                  <div id=\"section2\" className=\"sortable-section\">\n                    <Section2PurchaseOrder \n                      purchaseOrderFields={purchaseOrderFields}\n                      sensors={sensors}\n                      onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                      onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                      onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                      onLabelChange={handlePurchaseOrderFieldLabelChange}\n                      onContentChange={handleContentChange}\n                      lastModified={poLastModified}\n                    />\n                  </div>\n                </SortableContext>\n              </DndContext>\n            </div>\n          </div>\n\n          {/* Sections 5 & 6: Vendor/Ship-To and Shipping Details (Vertically Swappable) */}\n          <DndContext \n            sensors={sensors}\n            collisionDetection={closestCenter}\n            onDragEnd={handleSections5And6DragEnd}\n          >\n            <SortableContext \n              items={sections5And6Order}\n              strategy={verticalListSortingStrategy}\n            >\n              {sections5And6Order.map(sectionId => {\n                if (sectionId === 'section5') {\n                  return (\n                    <div key=\"section5\" id=\"section5\" className=\"sortable-section section-5\">\n                      {/* Section 5: Vendor and Ship To */}\n                      <Section3VendorShipTo \n                        vendorFields={vendorFields}\n                        shipToFields={shipToFields}\n                        sensors={sensors}\n                        onVendorDragEnd={handleVendorDragEnd}\n                        onShipToDragEnd={handleShipToDragEnd}\n                        onVendorShipToSectionDragEnd={handleVendorShipToSectionDragEnd}\n                        vendorShipToSectionOrder={vendorShipToSectionOrder}\n                      />\n                    </div>\n                  );\n                } else if (sectionId === 'section6') {\n                  return (\n                    <div key=\"section6\" id=\"section6\" className=\"sortable-section section-6\">\n                      {/* Section 6: Shipping Details */}\n                      <div className=\"shipping-details\">\n                        <div className=\"section-header\">REQUISITIONER</div>\n                        <div className=\"section-header\">SHIP VIA</div>\n                        <div className=\"section-header\">F.O.B.</div>\n                        <div className=\"section-header\">SHIPPING TERMS</div>\n                        <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Requisitioner name\" /></div>\n                        <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping method\" /></div>\n                        <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"FOB terms\" /></div>\n                        <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping terms\" /></div>\n                      </div>\n                    </div>\n                  );\n                }\n                return null;\n              })}\n            </SortableContext>\n          </DndContext>\n\n          {/* Items Table */}\n          <table className=\"itemtable\">\n            <thead>\n              <tr>\n                <th></th>\n                <th colSpan=\"3\">Item#</th>\n                <th colSpan=\"12\">Description</th>\n                <th colSpan=\"2\">Qty</th>\n                <th colSpan=\"3\">Rate</th>\n                <th colSpan=\"3\">Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              {[1, 2, 3, 4, 5].map((row) => (\n                <tr key={row} className=\"draggable-row\">\n                  <td></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Item number\" /></td>\n                  <td colSpan=\"12\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Item description\" /></td>\n                  <td colSpan=\"2\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Qty\" /></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" /></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" /></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          {/* Comments and Totals */}\n          <div className=\"comments-totals-section\">\n            <div className=\"comments-section\">\n              <div className=\"section-header\">Comments or Special Instructions</div>\n              <div className=\"comments-content\">\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n              </div>\n            </div>\n            \n            <div className=\"totals-section\">\n              <div className=\"total-row\">\n                <span>SUBTOTAL:</span>\n                <span className=\"calculated-field\">$0.00</span>\n              </div>\n              <div className=\"total-row\">\n                <span>TAX:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row\">\n                <span>SHIPPING:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row\">\n                <span>OTHER:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row total-final\">\n                <span>TOTAL:</span>\n                <span className=\"calculated-field total-field\">$0.00</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <strong>Contact Information:</strong><br />\n            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"button-section\">\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'}\n            </button>\n            <button className=\"btn export-btn\" onClick={exportToXML}>\n              📄 Generate XML\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                📝 Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  🗑️ Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change) => (\n                  <div key={change.id} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">→</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* XML Output Modal */}\n          {showXMLModal && (\n            <div className=\"xml-modal-overlay\" onClick={closeXMLModal}>\n              <div className=\"xml-modal\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"xml-modal-header\">\n                  <h3>📄 Generated XML Output</h3>\n                  <button className=\"xml-modal-close\" onClick={closeXMLModal}>×</button>\n                </div>\n                <div className=\"xml-modal-content\">\n                  <div className=\"xml-output-container\">\n                    <pre className=\"xml-code\">{xmlOutput}</pre>\n                  </div>\n                </div>\n                <div className=\"xml-modal-actions\">\n                  <button className=\"btn copy-btn\" onClick={copyXMLToClipboard}>\n                    📋 Copy XML\n                  </button>\n                  <button className=\"btn download-btn\" onClick={downloadXML}>\n                    📥 Download XML\n                  </button>\n                  <button className=\"btn close-btn\" onClick={closeXMLModal}>\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n\n\n\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}