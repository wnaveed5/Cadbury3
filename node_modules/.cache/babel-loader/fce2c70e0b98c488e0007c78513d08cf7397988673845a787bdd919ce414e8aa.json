{"ast":null,"code":"import _objectSpread from\"/Users/waleed/Documents/GitHub/Cadbury3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./PurchaseOrderForm.css';import{generatePurchaseOrderXML}from'./templates/PurchaseOrderTemplate';// Import modular components\nimport Section1CompanyInfo from'./components/Section1CompanyInfo';import Section2PurchaseOrder from'./components/Section2PurchaseOrder';import Section3VendorShipTo from'./components/Section3VendorShipTo';import{useAIProvider}from'./hooks/useAIProvider';// Import custom hooks\nimport{useDragAndDropSensors,useCompanyFieldsDragEnd,usePurchaseOrderFieldsDragEnd,useVendorFieldsDragEnd,useShipToFieldsDragEnd}from'./hooks/useDragAndDrop';import{DndContext,closestCenter,useDraggable,useDroppable}from'@dnd-kit/core';import{SortableContext,verticalListSortingStrategy,horizontalListSortingStrategy,useSortable}from'@dnd-kit/sortable';import{CSS}from'@dnd-kit/utilities';import{arrayMove}from'@dnd-kit/sortable';// Draggable Section Wrapper Component for Sections 5 & 6\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DraggableSectionWrapper(_ref){let{children,id,sectionNumber}=_ref;const{attributes,listeners,setNodeRef,transform,transition}=useSortable({id});const style={transform:CSS.Transform.toString(transform),transition};return/*#__PURE__*/_jsxs(\"div\",{ref:setNodeRef,style:style,className:\"sortable-section section-\".concat(sectionNumber),\"data-section\":sectionNumber,children:[/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({className:\"left-drag-handle\"},attributes),listeners),{},{title:\"Drag to reorder sections\",children:\"::\"})),children]});}// Sortable column header component for line items\nfunction SortableColumnHeader(_ref2){let{children,id}=_ref2;const{attributes,listeners,setNodeRef,transform,transition,isDragging}=useSortable({id});const style={transform:CSS.Transform.toString(transform),transition,cursor:'grab',userSelect:'none'};return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style},attributes),listeners),{},{className:\"sortable-column-header \".concat(isDragging?'dragging':''),children:[children,\" ::\"]}));}// Sortable shipping column header component for shipping details\nfunction SortableShippingColumnHeader(_ref3){let{children,id}=_ref3;const{attributes,listeners,setNodeRef,transform,transition,isDragging}=useSortable({id});const style={transform:CSS.Transform.toString(transform),transition,cursor:'grab',userSelect:'none'};return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style},attributes),listeners),{},{className:\"sortable-column-header \".concat(isDragging?'dragging':''),children:children}));}// Draggable Section Header Component for Comments and Totals\nfunction DraggableSectionHeader(_ref4){let{children,id}=_ref4;const{attributes,listeners,setNodeRef,transform,transition}=useSortable({id});const style={transform:CSS.Transform.toString(transform),transition};return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style,className:\"section-header\"},attributes),listeners),{},{title:\"Drag to reorder sections\",children:children}));}// Main Purchase Order Form Component\nfunction PurchaseOrderForm(){// ============================================================================\n// STATE MANAGEMENT\n// ============================================================================\n// Company fields state for Section 1\nconst[companyFields,setCompanyFields]=useState([{id:'company-name',label:'Company Name:',placeholder:'Enter company name',value:''},{id:'company-address',label:'Street Address:',placeholder:'Enter street address',value:''},{id:'company-city-state',label:'City, ST ZIP:',placeholder:'City, State ZIP',value:''},{id:'company-phone',label:'Phone:',placeholder:'(555) 123-4567',value:''},{id:'company-fax',label:'Fax:',placeholder:'(555) 123-4567',value:''},{id:'company-website',label:'Website:',placeholder:'www.example.com',value:''}]);// Debug: Log company fields state changes\nuseEffect(()=>{console.log('🔄 Company fields state updated:',companyFields.map(f=>({id:f.id,label:f.label})));},[companyFields]);// Track last modification time for company fields\nconst[lastModified,setLastModified]=useState(new Date().toISOString());// Track last modification time for purchase order fields\nconst[poLastModified,setPoLastModified]=useState(new Date().toISOString());// ============================================================================\n// FIELD LIST COMPONENT\n// ============================================================================\n// Hardcoded list of fields that are not currently on the form\nconst availableFields=[// Company Information Fields\n{category:'Company Information',fields:['Tax ID Number','DUNS Number','Business License','Industry Classification','Year Established','Employee Count','Annual Revenue','Parent Company','Subsidiaries','Business Type (LLC, Corp, etc.)']},// Purchase Order Fields\n{category:'Purchase Order Details',fields:['Delivery Date','Payment Terms','Currency','Purchase Order Type','Priority Level','Department','Project Code','Cost Center','Approval Status','Approved By']},// Vendor Fields\n{category:'Vendor Information',fields:['Vendor Tax ID','Vendor DUNS','Vendor Rating','Payment History','Contract Terms','Insurance Certificate','Bond Information','Quality Rating','Delivery Performance','Warranty Terms']},// Shipping Fields\n{category:'Shipping & Delivery',fields:['Expected Delivery','Carrier Information','Tracking Number','Delivery Instructions','Special Handling','Packaging Requirements','Delivery Confirmation','Return Policy','Damage Claims','Freight Class']},// Financial Fields\n{category:'Financial Details',fields:['Discount Percentage','Early Payment Discount','Late Payment Penalty','Installment Terms','Security Deposit','Performance Bond','Liquidated Damages','Retention Amount','Change Order Process','Budget Approval']},// Compliance Fields\n{category:'Compliance & Legal',fields:['Regulatory Compliance','Safety Requirements','Environmental Standards','Quality Certifications','Audit Requirements','Documentation Standards','Record Retention','Confidentiality Terms','Non-Compete Clauses','Dispute Resolution']}];// State for sidebar visibility on mobile\nconst[sidebarVisible,setSidebarVisible]=useState(true);// Toggle sidebar visibility\nconst toggleSidebar=()=>{setSidebarVisible(!sidebarVisible);};// Helper: slugify and ensure unique id for new fields\nconst generateUniqueFieldId=(baseLabel,existingIds)=>{const slugBase=String(baseLabel).toLowerCase().replace(/[^a-z0-9]+/g,'-').replace(/(^-|-$)/g,'');let candidate=slugBase||'field';let counter=1;while(existingIds.includes(candidate)){candidate=\"\".concat(slugBase,\"-\").concat(counter++);}return candidate;};// dnd-kit: palette draggable item\nconst PaletteDraggable=_ref5=>{let{label,category}=_ref5;const id=\"palette-\".concat(category,\"-\").concat(label);const{attributes,listeners,setNodeRef,transform,isDragging}=useDraggable({id,data:{source:'palette',label,category}});const style={transform:transform?\"translate3d(\".concat(transform.x,\"px, \").concat(transform.y,\"px, 0)\"):undefined,cursor:'grab',opacity:isDragging?0.6:1};return/*#__PURE__*/_jsxs(\"li\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style,className:\"field-item\"},attributes),listeners),{},{children:[/*#__PURE__*/_jsx(\"span\",{className:\"field-name\",children:label}),/*#__PURE__*/_jsx(\"button\",{className:\"add-field-btn\",title:\"Add \".concat(label,\" to form\"),onClick:e=>{e.stopPropagation();showNotification(\"\\u2795 \".concat(label,\" field added to form\"),'info');},children:\"+\"})]}));};// dnd-kit: droppable wrapper for sections\nconst DroppableZone=_ref6=>{let{id,children}=_ref6;const{isOver,setNodeRef}=useDroppable({id});return/*#__PURE__*/_jsx(\"div\",{ref:setNodeRef,className:\"droppable-zone \".concat(isOver?'droppable-over':''),children:children});};// Handle palette drag end to add fields to target sections\nconst handlePaletteDragEnd=event=>{var _active$data;const{active,over}=event;if(!(active!==null&&active!==void 0&&(_active$data=active.data)!==null&&_active$data!==void 0&&_active$data.current)||!(over!==null&&over!==void 0&&over.id))return;const data=active.data.current;if(data.source!=='palette')return;const baseLabel=data.label;if(over.id==='drop-company'){const existingIds=companyFields.map(f=>f.id);const id=generateUniqueFieldId(baseLabel,existingIds);const newField={id,label:\"\".concat(baseLabel,\":\"),placeholder:baseLabel,value:''};handleAddCompanyField(newField);showNotification(\"\\u2795 Added \\\"\".concat(baseLabel,\"\\\" to Company Info\"),'success');}else if(over.id==='drop-po'){const existingIds=purchaseOrderFields.map(f=>f.id);const id=generateUniqueFieldId(baseLabel,existingIds);const newField={id,label:\"\".concat(baseLabel,\":\"),placeholder:baseLabel,value:''};handleAddPurchaseOrderField(newField);showNotification(\"\\u2795 Added \\\"\".concat(baseLabel,\"\\\" to Purchase Order\"),'success');}else if(over.id==='drop-vendor'){const existingIds=vendorFields.map(f=>f.id);const id=generateUniqueFieldId(baseLabel,existingIds);const newField={id,label:\"\".concat(baseLabel,\":\"),placeholder:baseLabel,value:''};// Add to vendor fields\nsetVendorFields(prevFields=>[...prevFields,newField]);showNotification(\"\\u2795 Added \\\"\".concat(baseLabel,\"\\\" to Vendor section\"),'success');}else if(over.id==='drop-ship-to'){const existingIds=shipToFields.map(f=>f.id);const id=generateUniqueFieldId(baseLabel,existingIds);const newField={id,label:\"\".concat(baseLabel,\":\"),placeholder:baseLabel,value:''};// Add to ship-to fields\nsetShipToFields(prevFields=>[...prevFields,newField]);showNotification(\"\\u2795 Added \\\"\".concat(baseLabel,\"\\\" to Ship To section\"),'success');}};// Purchase Order fields state for Section 2\nconst[purchaseOrderFields,setPurchaseOrderFields]=useState([{id:'po-title',label:'Purchase Order',placeholder:'',isTitle:true,value:'Purchase Order'},{id:'po-date',label:'DATE:',placeholder:'MM/DD/YYYY',value:''},{id:'po-number',label:'PO #:',placeholder:'PO#123456',value:''}]);// Vendor fields state for Section 3\nconst[vendorFields,setVendorFields]=useState([{id:'vendor-company',label:'Company:',placeholder:'Vendor name',value:''},{id:'vendor-contact',label:'Contact:',placeholder:'Contact person',value:''},{id:'vendor-address',label:'Address:',placeholder:'Street address',value:''},{id:'vendor-city-state',label:'City/State:',placeholder:'City, ST ZIP',value:''},{id:'vendor-phone',label:'Phone:',placeholder:'(555) 123-4567',value:''}]);// Ship To fields state for Section 3\nconst[shipToFields,setShipToFields]=useState([{id:'ship-to-name',label:'Name:',placeholder:'Contact name',value:''},{id:'ship-to-company',label:'Company:',placeholder:'Shipping company',value:''},{id:'ship-to-address',label:'Address:',placeholder:'Street address',value:''},{id:'ship-to-city-state',label:'City/State:',placeholder:'City, ST ZIP',value:''},{id:'ship-to-phone',label:'Phone:',placeholder:'(555) 123-4567',value:''}]);// Totals fields state for Section 9\nconst[totalsFields,setTotalsFields]=useState([{id:'subtotal',label:'SUBTOTAL:',placeholder:'$0.00',value:'$0.00',isCalculated:true},{id:'tax',label:'TAX:',placeholder:'$0.00',value:''},{id:'shipping',label:'SHIPPING:',placeholder:'$0.00',value:''},{id:'other',label:'OTHER:',placeholder:'$0.00',value:''},{id:'total',label:'TOTAL:',placeholder:'$0.00',value:'$0.00',isCalculated:true}]);// ============================================================================\n// CUSTOM HOOKS\n// ============================================================================\nconst sensors=useDragAndDropSensors();const handleVendorDragEnd=useVendorFieldsDragEnd(setVendorFields);const handleShipToDragEnd=useShipToFieldsDragEnd(setShipToFields);// ============================================================================\n// COMPANY FIELD MANAGEMENT FUNCTIONS\n// ============================================================================\n// Helper function to update timestamp when company fields change\nconst updateCompanyFieldsTimestamp=()=>{setLastModified(new Date().toISOString());};// Add new company field\nconst handleAddCompanyField=newField=>{setCompanyFields(prevFields=>[...prevFields,newField]);updateCompanyFieldsTimestamp();logChange('field-add',newField.id,'',newField.label,'company');console.log('➕ Added new company field:',newField);};// Remove company field\nconst handleRemoveCompanyField=fieldId=>{setCompanyFields(prevFields=>{const fieldToRemove=prevFields.find(field=>field.id===fieldId);showNotification(\"\\uD83D\\uDDD1\\uFE0F Removed company field: \\\"\".concat(fieldToRemove===null||fieldToRemove===void 0?void 0:fieldToRemove.label,\"\\\"\"),'warning');console.log('🗑️ Removed company field:',fieldToRemove);return prevFields.filter(field=>field.id!==fieldId);});updateCompanyFieldsTimestamp();};// ============================================================================\n// ENHANCED CHANGE TRACKING\n// ============================================================================\n// State for tracking all changes\nconst[changeHistory,setChangeHistory]=useState([]);const[isPreviewMode,setIsPreviewMode]=useState(false);const[lastExportTime,setLastExportTime]=useState(null);// Function to log changes with timestamps\nconst logChange=(changeType,fieldId,oldValue,newValue,section)=>{const change={id:Date.now(),timestamp:new Date().toISOString(),type:changeType,fieldId,oldValue,newValue,section};setChangeHistory(prev=>[change,...prev.slice(0,49)]);// Keep last 50 changes\nconsole.log('📝 Change logged:',change);};// Enhanced field update functions with change logging\nconst handleCompanyFieldLabelChange=(fieldId,newLabel)=>{setCompanyFields(prevFields=>{const oldField=prevFields.find(field=>field.id===fieldId);const oldLabel=oldField?oldField.label:'';logChange('label-change',fieldId,oldLabel,newLabel,'company');return prevFields.map(field=>field.id===fieldId?_objectSpread(_objectSpread({},field),{},{label:newLabel}):field);});updateCompanyFieldsTimestamp();};const handlePurchaseOrderFieldLabelChange=(fieldId,newLabel)=>{setPurchaseOrderFields(prevFields=>{const oldField=prevFields.find(field=>field.id===fieldId);const oldLabel=oldField?oldField.label:'';logChange('label-change',fieldId,oldLabel,newLabel,'purchase-order');return prevFields.map(field=>field.id===fieldId?_objectSpread(_objectSpread({},field),{},{label:newLabel}):field);});updatePurchaseOrderFieldsTimestamp();};// Function to handle content changes in editable fields\nconst handleContentChange=(fieldId,newContent,section)=>{// Find the field and log the change\nlet oldValue='';let fieldType='';if(section==='company'){const field=companyFields.find(f=>f.id===fieldId);if(field){oldValue=field.value||'';fieldType=field.label;}}else if(section==='purchase-order'){const field=purchaseOrderFields.find(f=>f.id===fieldId);if(field){oldValue=field.value||'';fieldType=field.label;}}if(oldValue!==newContent){logChange('content-change',fieldId,oldValue,newContent,section);}};// Function to toggle preview mode\nconst togglePreviewMode=()=>{setIsPreviewMode(!isPreviewMode);};// Function to clear change history\nconst clearChangeHistory=()=>{setChangeHistory([]);console.log('🗑️ Change history cleared');};// ============================================================================\n// XML DISPLAY MODAL\n// ============================================================================\n// State for XML modal\nconst[showXMLModal,setShowXMLModal]=useState(false);const[xmlOutput,setXmlOutput]=useState('');// Function to display XML output in a modal\nconst displayXMLOutput=xml=>{setXmlOutput(xml);setShowXMLModal(true);};// Function to close XML modal\nconst closeXMLModal=()=>{setShowXMLModal(false);setXmlOutput('');};// Function to copy XML to clipboard\nconst copyXMLToClipboard=()=>{navigator.clipboard.writeText(xmlOutput).then(()=>{showNotification('📋 XML copied to clipboard!','success');}).catch(()=>{showNotification('❌ Failed to copy XML to clipboard','error');});};// Function to download XML file\nconst downloadXML=()=>{var _purchaseOrderFields$;const blob=new Blob([xmlOutput],{type:'application/xml'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=\"purchase-order-\".concat(((_purchaseOrderFields$=purchaseOrderFields.find(f=>f.id==='po-number'))===null||_purchaseOrderFields$===void 0?void 0:_purchaseOrderFields$.value)||'unknown',\".xml\");document.body.appendChild(a);a.click();document.body.removeChild(a);window.URL.revokeObjectURL(url);showNotification('📥 XML downloaded successfully!','success');};// =========================================================================\n// AI SUGGESTIONS\n// =========================================================================\nconst{getFieldSuggestions}=useAIProvider();const applySuggestionsToFields=(suggestionsMap,fields)=>{if(!Array.isArray(fields))return fields;return fields.map(f=>{const newVal=suggestionsMap===null||suggestionsMap===void 0?void 0:suggestionsMap[f.id];if(typeof newVal==='string'){return _objectSpread(_objectSpread({},f),{},{value:newVal});}return f;});};const handleAIFill=async()=>{try{showNotification('🤖 Fetching AI suggestions...','info');const payload={context:'purchase_order',companyFields,purchaseOrderFields,vendorFields,shipToFields,shippingFields:[{id:'requisitioner',label:'Requisitioner name'},{id:'shipVia',label:'Shipping method'},{id:'fob',label:'FOB terms'},{id:'shippingTerms',label:'Shipping terms'}]};const{suggestions}=await getFieldSuggestions(payload);try{console.debug('🧪 AI suggestions keys:',Object.keys(suggestions||{}));// Preview a few critical values to verify mapping\nconsole.debug('🧪 AI preview:',{company:{name:suggestions===null||suggestions===void 0?void 0:suggestions['company-name'],phone:suggestions===null||suggestions===void 0?void 0:suggestions['company-phone']},po:{date:suggestions===null||suggestions===void 0?void 0:suggestions['po-date'],number:suggestions===null||suggestions===void 0?void 0:suggestions['po-number']},shipping:{requisitioner:suggestions===null||suggestions===void 0?void 0:suggestions.requisitioner,shipVia:suggestions===null||suggestions===void 0?void 0:suggestions.shipVia},totals:{subtotal:suggestions===null||suggestions===void 0?void 0:suggestions.subtotal,tax:suggestions===null||suggestions===void 0?void 0:suggestions.tax,total:suggestions===null||suggestions===void 0?void 0:suggestions.total},line1:{item:suggestions===null||suggestions===void 0?void 0:suggestions.itemNumber1,desc:suggestions===null||suggestions===void 0?void 0:suggestions.description1,qty:suggestions===null||suggestions===void 0?void 0:suggestions.qty1,rate:suggestions===null||suggestions===void 0?void 0:suggestions.rate1,amount:suggestions===null||suggestions===void 0?void 0:suggestions.amount1}});}catch(_unused){}// 1) Apply to Section 1–3 states (company/po/vendor/ship-to) with mapping logs\nsetCompanyFields(prev=>{const next=applySuggestionsToFields(suggestions,prev);try{const before=Object.fromEntries(prev.map(f=>[f.id,f.value]));const after=Object.fromEntries(next.map(f=>[f.id,f.value]));Object.keys(after).forEach(id=>{if(before[id]!==after[id]&&suggestions[id]!==undefined){console.debug('🧭 map(companyFields):',{id,from:before[id],to:after[id],sourceKey:id});}});}catch(_unused2){}return next;});setPurchaseOrderFields(prev=>{const next=applySuggestionsToFields(suggestions,prev);try{const before=Object.fromEntries(prev.map(f=>[f.id,f.value]));const after=Object.fromEntries(next.map(f=>[f.id,f.value]));Object.keys(after).forEach(id=>{if(before[id]!==after[id]&&suggestions[id]!==undefined){console.debug('🧭 map(purchaseOrderFields):',{id,from:before[id],to:after[id],sourceKey:id});}});}catch(_unused3){}return next;});setVendorFields(prev=>{const next=applySuggestionsToFields(suggestions,prev);try{const before=Object.fromEntries(prev.map(f=>[f.id,f.value]));const after=Object.fromEntries(next.map(f=>[f.id,f.value]));Object.keys(after).forEach(id=>{if(before[id]!==after[id]&&suggestions[id]!==undefined){console.debug('🧭 map(vendorFields):',{id,from:before[id],to:after[id],sourceKey:id});}});}catch(_unused4){}return next;});setShipToFields(prev=>{const next=applySuggestionsToFields(suggestions,prev);try{const before=Object.fromEntries(prev.map(f=>[f.id,f.value]));const after=Object.fromEntries(next.map(f=>[f.id,f.value]));Object.keys(after).forEach(id=>{if(before[id]!==after[id]&&suggestions[id]!==undefined){console.debug('🧭 map(shipToFields):',{id,from:before[id],to:after[id],sourceKey:id});}});}catch(_unused5){}return next;});// 2) Shipping details (DOM spans)\nconst write=(el,val)=>{if(el&&typeof val==='string')el.textContent=val;};const shipSelectors=key=>[\".shipping-details [data-field=\\\"\".concat(key,\"\\\"] .editable-field\"),\".shipping-field[data-field=\\\"\".concat(key,\"\\\"] .editable-field\"),\"#shipping-\".concat(key),\".shipping-field-\".concat(key,\" .editable-field\")];const shipOrder=['requisitioner','shipVia','fob','shippingTerms'];shipOrder.forEach((key,idx)=>{let el=null,used='';for(const sel of shipSelectors(key)){el=document.querySelector(sel);if(el){used=sel;break;}}// Fallback to positional selector used in your JSX\nif(!el){const nth=idx+1;// 1-based\n// Prefer :nth-of-type within container to ignore headers\nconst selA=\".shipping-details .shipping-field:nth-of-type(\".concat(nth,\") .editable-field\");el=document.querySelector(selA);if(el){used=selA;}else{// Last resort: original child-based selector\nconst selB=\".shipping-field:nth-child(\".concat(nth,\") .editable-field\");el=document.querySelector(selB);if(el)used=selB;}}write(el,suggestions[key]);try{const count=document.querySelectorAll('.shipping-details .shipping-field').length;console.debug('🧭 map(shippingDetails):',{key,selector:used||'(not found)',value:suggestions[key],fieldsInDOM:count});}catch(_unused6){}});// 3) Line items (first 3 rows only)\n// Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\nconst setCell=(row,col,val)=>{const selector=\".itemtable tbody tr:nth-child(\".concat(row,\") td[data-column=\\\"\").concat(col,\"\\\"] .editable-field\");const cell=document.querySelector(selector);if(cell&&typeof val==='string'){cell.textContent=val;}try{console.debug('🧭 map(lineItem):',{row,col,selector,value:val});}catch(_unused7){}};const li=(i,k)=>suggestions===null||suggestions===void 0?void 0:suggestions[\"\".concat(k).concat(i)];for(let i=1;i<=3;i++){setCell(i,'itemNumber',li(i,'itemNumber'));setCell(i,'description',li(i,'description'));setCell(i,'qty',li(i,'qty'));setCell(i,'rate',li(i,'rate'));setCell(i,'amount',li(i,'amount'));}// 4) Totals (state + DOM)\nsetTotalsFields(prev=>{const map={subtotal:suggestions.subtotal,tax:suggestions.tax,shipping:suggestions.shipping,other:suggestions.other,total:suggestions.total};const next=prev.map(f=>map[f.id]?_objectSpread(_objectSpread({},f),{},{value:map[f.id]}):f);try{const before=Object.fromEntries(prev.map(f=>[f.id,f.value]));const after=Object.fromEntries(next.map(f=>[f.id,f.value]));Object.keys(after).forEach(id=>{if(before[id]!==after[id]&&map[id]!==undefined){console.debug('🧭 map(totalsFields):',{id,from:before[id],to:after[id],sourceKey:id});}});}catch(_unused8){}return next;});// Write editable totals into DOM for non-calculated rows\nconst domTotals=field=>document.querySelector(\".totals-section .total-row[data-field=\\\"\".concat(field,\"\\\"] .editable-field\"));['tax','shipping','other'].forEach(key=>{const sel=\".totals-section .total-row[data-field=\\\"\".concat(key,\"\\\"] .editable-field\");write(domTotals(key),suggestions[key]);try{console.debug('🧭 map(totalsDOM):',{key,selector:sel,value:suggestions[key]});}catch(_unused9){}});// Calculated-looking spans (subtotal, total) in your layout use .calculated-field\nconst calcTotal=document.querySelector(\".totals-section .total-row[data-field=\\\"total\\\"] .total-field\");const calcSub=document.querySelector(\".totals-section .total-row[data-field=\\\"subtotal\\\"] .calculated-field\");write(calcSub,suggestions.subtotal);write(calcTotal,suggestions.total);try{console.debug('🧭 map(totalsDOM):',{key:'subtotal',selector:\".totals-section .total-row[data-field=\\\"subtotal\\\"] .calculated-field\",value:suggestions.subtotal});console.debug('🧭 map(totalsDOM):',{key:'total',selector:\".totals-section .total-row[data-field=\\\"total\\\"] .total-field\",value:suggestions.total});}catch(_unused0){}// 5) Comments, Contact Info (DOM)\nconst commentsEl=document.querySelector('.comments-content .editable-field');const contactEl=document.querySelector('.contact-section .editable-field');write(commentsEl,suggestions.comments);write(contactEl,suggestions.contactInfo);try{console.debug('🧭 map(comments):',{selector:'.comments-content .editable-field',value:suggestions.comments});console.debug('🧭 map(contactInfo):',{selector:'.contact-section .editable-field',value:suggestions.contactInfo});}catch(_unused1){}// 6) Bump timestamps\nupdateCompanyFieldsTimestamp();updatePurchaseOrderFieldsTimestamp();showNotification('✅ AI suggestions applied','success');}catch(e){console.error('AI fill failed:',e);showNotification(\"\\u274C AI fill failed: \".concat(e.message),'error');}};// ============================================================================\n// XML EXPORT FUNCTIONALITY\n// ============================================================================\n// Function to export form data as XML\nconst exportToXML=()=>{try{console.log('📄 Starting XML generation...');// Capture current field values first\nconst capturedData=captureFieldValues();// Prepare data for XML generation\n// Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\nconst headerSections=Array.from(document.querySelectorAll('.header-section .sortable-section'));const visualSections1And2=headerSections.map(el=>el.id).filter(id=>id==='section1'||id==='section2');const sections1And2ForExport=visualSections1And2.length===2?visualSections1And2:sections1And2Order;// Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\nconst vendorShipToSections=Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));const visualSections3And4=vendorShipToSections.map(el=>el.id).filter(id=>id==='section3'||id==='section4');const sections3And4ForExport=visualSections3And4.length===2?visualSections3And4:vendorShipToSectionOrder;// Helpers for DOM reads\nconst getText=sel=>{var _document$querySelect,_document$querySelect2;return((_document$querySelect=document.querySelector(sel))===null||_document$querySelect===void 0?void 0:(_document$querySelect2=_document$querySelect.textContent)===null||_document$querySelect2===void 0?void 0:_document$querySelect2.trim())||'';};// Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\nconst normalizedLineItems=(capturedData.lineItems||[]).map(row=>({// original UI keys\nitemNumber:row.itemNumber||'',description:row.description||'',qty:row.qty||row.quantity||'',rate:row.rate||row.unitPrice||'',amount:row.amount||row.total||'',// template-expected keys\nquantity:row.quantity||row.qty||'',unitPrice:row.unitPrice||row.rate||'',total:row.total||row.amount||''}));const exportData=_objectSpread(_objectSpread({},capturedData),{},{// Add section order information for dynamic XML generation\nsectionOrder:{sections1And2:sections1And2ForExport,// Use current visual order to ensure XML matches UI\nsections3And4:sections3And4ForExport,// Use current visual order to ensure XML matches UI\nsections5And6:sections5And6Order,// Use actual state for sections 5&6\nsections3And4And5And6:vendorShipToAndShippingDetailsOrder,// Vendor-ShipTo and Shipping Details order\nsections8And9:commentsTotalsSectionOrder,// Use actual state for sections 8&9\nlineItemColumns:lineItemColumnOrder,// Use actual state for line item columns\nshippingColumns:shippingColumnOrder// Use actual state for shipping columns\n},// CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\nfieldOrder:{company:companyFieldOrder,// Preserve company field order independently of section position\npurchaseOrder:purchaseOrderFieldOrder,// Preserve PO field order independently of section position\nvendor:vendorFields.map(f=>f.id),// Vendor field order\nshipTo:shipToFields.map(f=>f.id)// Ship-to field order\n},// Add normalized line items (support both key schemes)\nlineItems:normalizedLineItems,// Shipping details (prefer data-field; fall back handled in XML builder too)\nrequisitioner:getText('.shipping-details [data-field=\"requisitioner\"] .editable-field'),shipVia:getText('.shipping-details [data-field=\"shipVia\"] .editable-field'),fob:getText('.shipping-details [data-field=\"fob\"] .editable-field'),shippingTerms:getText('.shipping-details [data-field=\"shippingTerms\"] .editable-field'),// Totals: read what the user sees\nsubtotal:getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field')||'$0.00',tax:getText('.totals-section .total-row[data-field=\"tax\"] .editable-field')||'$0.00',shipping:getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field')||'$0.00',other:getText('.totals-section .total-row[data-field=\"other\"] .editable-field')||'$0.00',total:getText('.totals-section .total-row[data-field=\"total\"] .total-field')||'$0.00',comments:getText('.comments-content .editable-field'),contactInfo:getText('.contact-section .editable-field')});console.debug('🔎 Export DOM reads:',{requisitioner:exportData.requisitioner,shipVia:exportData.shipVia,fob:exportData.fob,shippingTerms:exportData.shippingTerms,subtotal:exportData.subtotal,tax:exportData.tax,shipping:exportData.shipping,other:exportData.other,total:exportData.total});console.log('📄 Export data prepared:',exportData);console.log('🔀 Section order being sent to XML:',exportData.sectionOrder);console.log('🔀 Sections 1&2 order:',exportData.sectionOrder.sections1And2);console.log('🔀 Sections 3&4 order:',exportData.sectionOrder.sections3And4);console.log('🔀 Sections 3&4 + 5&6 order:',exportData.sectionOrder.sections3And4And5And6);console.log('🔀 Line item columns order:',exportData.sectionOrder.lineItemColumns);console.log('🔀 Shipping columns order:',exportData.sectionOrder.shippingColumns);console.log('🔀 Line items data:',exportData.lineItems);// CRITICAL: Log field order information\nconsole.log('🔀 Field order being sent to XML:',exportData.fieldOrder);console.log('🔀 Company field order:',exportData.fieldOrder.company);console.log('🔀 Purchase order field order:',exportData.fieldOrder.purchaseOrder);console.log('🔀 Vendor field order:',exportData.fieldOrder.vendor);console.log('🔀 Ship-to field order:',exportData.fieldOrder.shipTo);// Generate XML\nconst xml=generatePurchaseOrderXML(exportData);// Display XML in a modal instead of downloading\ndisplayXMLOutput(xml);// Update export timestamp\nsetLastExportTime(new Date().toISOString());showNotification('📄 XML generated successfully!','success');console.log('✅ XML generation completed successfully');}catch(error){console.error('❌ XML generation failed:',error);showNotification(\"\\u274C XML generation failed: \".concat(error.message),'error');}};// Show notification function\nconst showNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';// Remove any existing notifications\nconst existingNotification=document.querySelector('.notification');if(existingNotification){existingNotification.remove();}// Create notification element\nconst notification=document.createElement('div');notification.className=\"notification notification-\".concat(type);notification.innerHTML=\"\\n      <div class=\\\"notification-content\\\">\\n        <span class=\\\"notification-message\\\">\".concat(message,\"</span>\\n        <button class=\\\"notification-close\\\" onclick=\\\"this.parentElement.parentElement.remove()\\\">\\xD7</button>\\n      </div>\\n    \");// Add styles\nnotification.style.cssText=\"\\n      position: fixed;\\n      top: 20px;\\n      right: 20px;\\n      background: \".concat(type==='success'?'#28a745':type==='error'?'#dc3545':'#17a2b8',\";\\n      color: white;\\n      padding: 12px 20px;\\n      border-radius: 5px;\\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\\n      z-index: 10000;\\n      font-family: Arial, sans-serif;\\n      font-size: 14px;\\n      max-width: 300px;\\n      animation: slideIn 0.3s ease-out;\\n    \");// Add animation styles\nconst style=document.createElement('style');style.textContent=\"\\n      @keyframes slideIn {\\n        from {\\n          transform: translateX(100%);\\n          opacity: 0;\\n        }\\n        to {\\n          transform: translateX(0);\\n          opacity: 1;\\n        }\\n      }\\n      .notification-content {\\n        display: flex;\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n      .notification-close {\\n        background: none;\\n        border: none;\\n        color: white;\\n        font-size: 18px;\\n        cursor: pointer;\\n        margin-left: 10px;\\n        padding: 0;\\n        width: 20px;\\n        height: 20px;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n      }\\n      .notification-close:hover {\\n        opacity: 0.8;\\n      }\\n    \";document.head.appendChild(style);// Add to page\ndocument.body.appendChild(notification);// Auto-remove after 3 seconds\nsetTimeout(()=>{if(notification.parentElement){notification.remove();}},3000);};// Get current form statistics\nconst getFormStats=()=>{return{totalFields:companyFields.length+purchaseOrderFields.length+vendorFields.length+shipToFields.length,companyFields:companyFields.length,purchaseOrderFields:purchaseOrderFields.length,vendorFields:vendorFields.length,shipToFields:shipToFields.length,totalChanges:changeHistory.length,lastModified:Math.max(new Date(lastModified).getTime(),new Date(poLastModified).getTime())};};// Handle company field drag and drop with timestamp update\nconst handleCompanyDragEnd=event=>{useCompanyFieldsDragEnd(setCompanyFields)(event);updateCompanyFieldsTimestamp();// CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\nif(event.active.id!==event.over.id){setCompanyFieldOrder(prevOrder=>{const oldIndex=prevOrder.indexOf(event.active.id);const newIndex=prevOrder.indexOf(event.over.id);const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,event.active.id);console.log('🔄 Company field order updated:',{oldIndex,newIndex,newOrder});return newOrder;});console.log('🔄 Company fields reordered');}};// ============================================================================\n// SUMMARY LOGGING FUNCTION\n// ============================================================================\n// Function to log a summary of all field states\nconst logFieldSummary=()=>{console.log('📊 FIELD SUMMARY:',{company:{total:companyFields.length,lastModified:new Date(lastModified).toLocaleString(),fields:companyFields.map(f=>({id:f.id,label:f.label}))},purchaseOrder:{total:purchaseOrderFields.length,lastModified:new Date(poLastModified).toLocaleString(),fields:purchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle}))}});};// Log summary on component mount\nReact.useEffect(()=>{logFieldSummary();},[]);// Only run once on mount\n// ============================================================================\n// PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n// ============================================================================\n// Helper function to update timestamp when purchase order fields change\nconst updatePurchaseOrderFieldsTimestamp=()=>{setPoLastModified(new Date().toISOString());};// Add new purchase order field\nconst handleAddPurchaseOrderField=newField=>{setPurchaseOrderFields(prevFields=>[...prevFields,newField]);updatePurchaseOrderFieldsTimestamp();console.log('➕ Added new purchase order field:',newField);};// Remove purchase order field\nconst handleRemovePurchaseOrderField=fieldId=>{setPurchaseOrderFields(prevFields=>{const fieldToRemove=prevFields.find(field=>field.id===fieldId);console.log('🗑️ Removed purchase order field:',fieldToRemove);return prevFields.filter(field=>field.id!==fieldId);});updatePurchaseOrderFieldsTimestamp();};// Handle purchase order field drag and drop with timestamp update\nconst handlePurchaseOrderDragEnd=event=>{usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);updatePurchaseOrderFieldsTimestamp();// CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\nif(event.active.id!==event.over.id){setPurchaseOrderFieldOrder(prevOrder=>{const oldIndex=prevOrder.indexOf(event.active.id);const newIndex=prevOrder.indexOf(event.over.id);const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,event.active.id);console.log('🔄 Purchase order field order updated:',{oldIndex,newIndex,newOrder});return newOrder;});console.log('🔄 Purchase order fields reordered');}};// ============================================================================\n// SECTION-LEVEL DRAG AND DROP\n// ============================================================================\n// State for vendor/ship-to section order\nconst[vendorShipToSectionOrder,setVendorShipToSectionOrder]=useState(['section3','section4']);// State for sections 1 and 2 order (Company Info and Purchase Order)\nconst[sections1And2Order,setSections1And2Order]=useState(['section1','section2']);// State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\nconst[sections5And6Order,setSections5And6Order]=useState(['section5','section6']);// State for vendor-ship-to and shipping-details sections order\nconst[vendorShipToAndShippingDetailsOrder,setVendorShipToAndShippingDetailsOrder]=useState(['sections3And4','sections5And6']);// CRITICAL: Add field order state management (same pattern as section order)\n// State for company field order (preserves drag-and-drop order independently of section position)\nconst[companyFieldOrder,setCompanyFieldOrder]=useState([]);// State for purchase order field order (preserves drag-and-drop order independently of section position)\nconst[purchaseOrderFieldOrder,setPurchaseOrderFieldOrder]=useState([]);// Initialize field order states with current field IDs\nReact.useEffect(()=>{setCompanyFieldOrder(companyFields.map(field=>field.id));},[companyFields]);React.useEffect(()=>{setPurchaseOrderFieldOrder(purchaseOrderFields.map(field=>field.id));},[purchaseOrderFields]);// Line item column order state\nconst[lineItemColumnOrder,setLineItemColumnOrder]=useState(['itemNumber','description','qty','rate','amount']);// Shipping column order state\nconst[shippingColumnOrder,setShippingColumnOrder]=useState(['requisitioner','shipVia','fob','shippingTerms']);// Log line item column order changes\nuseEffect(()=>{console.log('🔀 Line item column order updated:',lineItemColumnOrder);},[lineItemColumnOrder]);// Log shipping column order changes\nuseEffect(()=>{console.log('🚢 Shipping column order updated:',shippingColumnOrder);},[shippingColumnOrder]);// Comments and Totals section order state (Section 8 & 9)\nconst[commentsTotalsSectionOrder,setCommentsTotalsSectionOrder]=useState(['section8','section9']);// Function to handle section reordering\nconst handleSectionDragEnd=event=>{const{active,over}=event;console.log('🔍 DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Section swap detected!',{active:active.id,over:active.id});setSections1And2Order(prevOrder=>{console.log('🔄 Previous section order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New section order:',newOrder);// CRITICAL: Only swap section positions, preserve field content and order\nif(active.id==='section1'&&over.id==='section2'){console.log('🔄 SWAP TYPE: Section 1 → Section 2 (POSITION ONLY)');console.log('🔄 Company fields remain company fields (with custom order)');console.log('🔄 Purchase Order fields remain PO fields (with custom order)');showNotification('🔄 Sections swapped! (Field content preserved)','info');console.log('🔄 Sections swapped via drag & drop! (Field content preserved)');}else if(active.id==='section2'&&over.id==='section1'){console.log('🔄 SWAP TYPE: Section 2 → Section 1 (POSITION ONLY)');console.log('🔄 Company fields remain company fields (with custom order)');console.log('🔄 Purchase Order fields remain PO fields (with custom order)');showNotification('🔄 Sections swapped! (Field content preserved)','info');console.log('🔄 Sections swapped via drag & drop! (Field content preserved)');}return newOrder;});}else{console.log('🔍 No section swap - same position');}};// Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\nconst handleSections5And6DragEnd=event=>{const{active,over}=event;console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Sections 5&6 swap detected!',{active:active.id,over:over.id});setSections5And6Order(prevOrder=>{console.log('🔄 Previous sections 5&6 order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New sections 5&6 order:',newOrder);showNotification('🔄 Sections 5 and 6 reordered!','info');console.log('🔄 Sections 5&6 reordered via drag & drop!');console.log('📊 New section order:',newOrder);return newOrder;});}else{console.log('🔍 No sections 5&6 swap - same position');}};// Handle line item column drag end\nconst handleLineItemColumnDragEnd=event=>{const{active,over}=event;console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:',{active:active.id,over:over.id});if(active.id!==over.id){console.log('🔄 Line item column swap detected!',{active:active.id,over:over.id});setLineItemColumnOrder(items=>{const oldIndex=items.indexOf(active.id);const newIndex=items.indexOf(over.id);console.log('🔄 Previous line item column order:',items);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=arrayMove(items,oldIndex,newIndex);console.log('🔄 New line item column order:',newOrder);showNotification('🔄 Line item columns reordered!','info');return newOrder;});}else{console.log('🔍 No line item column swap - same position');}};// Handle Comments and Totals section drag end\nconst handleCommentsTotalsDragEnd=event=>{const{active,over}=event;if(active.id!==over.id){setCommentsTotalsSectionOrder(items=>{const oldIndex=items.indexOf(active.id);const newIndex=items.indexOf(over.id);return arrayMove(items,oldIndex,newIndex);});}};// Function to handle vendor/ship-to section reordering\nconst handleVendorShipToSectionDragEnd=event=>{const{active,over}=event;console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Vendor/Ship-To section swap detected!',{active:active.id,over:over.id});setVendorShipToSectionOrder(prevOrder=>{console.log('🔄 Previous vendor/ship-to order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New vendor/ship-to order:',newOrder);// The sections are already reordered by the code above, no need to swap field data\n// Just show notification that sections were reordered\nshowNotification('🔄 Vendor and Ship To sections reordered!','info');console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');console.log('📊 New section order:',newOrder);return newOrder;});}else{console.log('🔍 No vendor/ship-to swap - same position');}};// Function to handle vendor-ship-to and shipping-details sections reordering\nconst handleVendorShipToAndShippingDetailsDragEnd=event=>{const{active,over}=event;console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!',{active:active.id,over:over.id});setVendorShipToAndShippingDetailsOrder(prevOrder=>{console.log('🔄 Previous vendor-shipTo + shipping details order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New vendor-shipTo + shipping details order:',newOrder);showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!','info');console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');console.log('📊 New section order:',newOrder);return newOrder;});}else{console.log('🔍 No vendor-shipTo + shipping details swap - same position');}};// ============================================================================\n// SECTION SWAPPING FUNCTION\n// ============================================================================\n// Function to swap Section 1 and Section 2\nconst handleSwapSections=()=>{console.log('🔄 MANUAL SWAP FUNCTION CALLED');console.log('🔄 Before swap - Company fields:',companyFields);console.log('🔄 Before swap - Purchase Order fields:',purchaseOrderFields);// Store current values before swapping\nconst companyFieldValues=companyFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const purchaseOrderFieldValues=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle,// Explicitly preserve isTitle property\nvalue:element?element.textContent.trim():''});});console.log('🔍 Before swap - Purchase Order fields:',purchaseOrderFieldValues);console.log('🔍 Title field check:',purchaseOrderFieldValues.find(f=>f.isTitle));// IMPORTANT: Create new field arrays to avoid reference issues\nconst newCompanyFields=purchaseOrderFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle// Ensure isTitle is preserved\n}));const newPurchaseOrderFields=companyFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:false// Company fields should never be title\n}));console.log('🔄 About to swap fields...');console.log('🔄 New company fields (with title check):',newCompanyFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));console.log('🔄 New PO fields (with title check):',newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));// Swap the fields - keep Purchase Order section intact (title + date + po#)\nsetCompanyFields(newCompanyFields);setPurchaseOrderFields(newPurchaseOrderFields);// Update timestamps\nsetLastModified(new Date().toISOString());setPoLastModified(new Date().toISOString());showNotification('🔄 Sections swapped!','info');console.log('🔄 Sections swapped successfully!');console.log('📊 New Section 1 (was Section 2):',newCompanyFields);console.log('📊 New Section 2 (was Section 1):',newPurchaseOrderFields);// Log the swap operation\nconsole.log('🔄 Section Swap Details:',{'Section 1 → Section 2':newCompanyFields.map(f=>({id:f.id,label:f.label,value:f.value,isTitle:f.isTitle})),'Section 2 → Section 1':newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,value:f.value,isTitle:f.isTitle}))});};// Function to manually swap Vendor and Ship To sections\nconst handleSwapVendorShipTo=()=>{console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');console.log('🔄 Before swap - Vendor fields:',vendorFields);console.log('🔄 Before swap - Ship To fields:',shipToFields);// Store current values before swapping\nconst vendorFieldValues=vendorFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const shipToFieldValues=shipToFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});console.log('🔍 Before swap - Vendor field values:',vendorFieldValues);console.log('🔍 Before swap - Ship To field values:',shipToFieldValues);// Swap the fields\nsetVendorFields(shipToFieldValues);setShipToFields(vendorFieldValues);// Update section order\nsetVendorShipToSectionOrder(prevOrder=>{const newOrder=[...prevOrder].reverse();return newOrder;});showNotification('🔄 Vendor and Ship To sections swapped!','info');console.log('🔄 Vendor and Ship To sections swapped successfully!');console.log('📊 New Vendor fields (was Ship To):',shipToFieldValues);console.log('📊 New Ship To fields (was Vendor):',vendorFieldValues);// Log the swap operation\nconsole.log('🔄 Vendor/Ship-To Swap Details:',{'Vendor → Ship To':shipToFieldValues.map(f=>({id:f.id,label:f.label,value:f.value})),'Ship To → Vendor':vendorFieldValues.map(f=>({id:f.id,label:f.label,value:f.value}))});};// ============================================================================\n// FIELD VALUE CAPTURE\n// ============================================================================\n// Function to capture current field values from the DOM\nconst captureFieldValues=()=>{console.log('📝 Capturing field values from DOM...');// Capture company field values - PRESERVE CURRENT ORDER\nconsole.log('🔍 DEBUG: Current company fields order before capture:',companyFields.map(f=>({id:f.id,label:f.label})));const updatedCompanyFields=companyFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Company field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});console.log('🔍 DEBUG: Updated company fields order after capture:',updatedCompanyFields.map(f=>({id:f.id,label:f.label})));// Capture purchase order field values\nconst updatedPurchaseOrderFields=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD PO field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture vendor field values\nconst updatedVendorFields=vendorFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Vendor field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture ship-to field values\nconst updatedShipToFields=shipToFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Ship-to field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture line item values from the table\nconst capturedLineItems=[];for(let rowIndex=0;rowIndex<5;rowIndex++){const rowData={};lineItemColumnOrder.forEach(columnId=>{const cellSelector=\"tr:nth-child(\".concat(rowIndex+1,\") td[data-column=\\\"\").concat(columnId,\"\\\"] .editable-field\");const cell=document.querySelector(\".itemtable tbody \".concat(cellSelector));const value=cell?cell.textContent.trim():'';rowData[columnId]=value;});capturedLineItems.push(rowData);}console.log('📝 Line items captured:',capturedLineItems);// Capture totals field values using the new state structure\nconst updatedTotalsFields=totalsFields.map(field=>{let value=field.value;// Default to current state value\n// For editable fields, try to get from DOM\nif(!field.isCalculated){const selector=\".totals-section .total-row[data-field=\\\"\".concat(field.id,\"\\\"] .editable-field\");const element=document.querySelector(selector);if(element){value=element.textContent.trim();}}console.log(\"\\uD83D\\uDCDD Totals field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Update state with captured values\nsetCompanyFields(updatedCompanyFields);setPurchaseOrderFields(updatedPurchaseOrderFields);setVendorFields(updatedVendorFields);setShipToFields(updatedShipToFields);setTotalsFields(updatedTotalsFields);console.log('📝 Field values captured and state updated!');return{companyFields:updatedCompanyFields,purchaseOrderFields:updatedPurchaseOrderFields,vendorFields:updatedVendorFields,shipToFields:updatedShipToFields,lineItems:capturedLineItems,totalsFields:updatedTotalsFields};};// Unified drag end dispatcher for a single top-level DndContext\nconst handleRootDragEnd=event=>{var _active$data2,_active$data2$current;const{active}=event;const activeId=(active===null||active===void 0?void 0:active.id)||'';const source=active===null||active===void 0?void 0:(_active$data2=active.data)===null||_active$data2===void 0?void 0:(_active$data2$current=_active$data2.current)===null||_active$data2$current===void 0?void 0:_active$data2$current.source;if(source==='palette'){handlePaletteDragEnd(event);return;}// Sections 1 & 2 swap\nif(activeId==='section1'||activeId==='section2'){handleSectionDragEnd(event);return;}// Vendor-ShipTo + ShippingDetails container swap\nif(activeId==='sections3And4'||activeId==='sections5And6'){handleVendorShipToAndShippingDetailsDragEnd(event);return;}// Vendor or Ship-To individual field drags\nif(String(activeId).startsWith('vendor-')){handleVendorDragEnd(event);return;}if(String(activeId).startsWith('ship-to-')){handleShipToDragEnd(event);return;}// Line item column reorder\nif(['itemNumber','description','qty','rate','amount'].includes(activeId)){handleLineItemColumnDragEnd(event);return;}// Comments & totals sections reorder\nif(activeId==='section8'||activeId==='section9'){handleCommentsTotalsDragEnd(event);return;}};return/*#__PURE__*/_jsx(\"div\",{className:\"purchase-order-container \".concat(!sidebarVisible?'sidebar-hidden':''),children:/*#__PURE__*/_jsxs(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragEnd:handleRootDragEnd,children:[sidebarVisible&&/*#__PURE__*/_jsxs(\"div\",{className:\"field-list-sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"field-list-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCB Available Fields\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Fields not currently on the form\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"field-list-content\",children:availableFields.map((category,categoryIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"field-category\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"category-title\",children:category.category}),/*#__PURE__*/_jsx(\"ul\",{className:\"field-list\",children:category.fields.map((field,fieldIndex)=>/*#__PURE__*/_jsx(PaletteDraggable,{label:field,category:category.category},\"\".concat(categoryIndex,\"-\").concat(fieldIndex)))})]},categoryIndex))})]}),/*#__PURE__*/_jsxs(\"header\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Purchase Order Management System\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Create, edit, and manage purchase orders with ease\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',alignItems:'center',gap:10,marginTop:8},children:/*#__PURE__*/_jsx(\"button\",{className:\"sidebar-toggle-btn\",onClick:toggleSidebar,title:sidebarVisible?\"Hide Field List\":\"Show Field List\",children:sidebarVisible?\"📋 Hide Fields\":\"📋 Show Fields\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"header-section\",children:/*#__PURE__*/_jsx(SortableContext,{items:sections1And2Order,strategy:verticalListSortingStrategy,children:sections1And2Order.map(sectionId=>{if(sectionId==='section1'){return/*#__PURE__*/_jsx(DroppableZone,{id:\"drop-company\",children:/*#__PURE__*/_jsx(\"div\",{id:\"section1\",className:\"sortable-section\",children:/*#__PURE__*/_jsx(Section1CompanyInfo,{companyFields:companyFields,sensors:sensors,onCompanyDragEnd:handleCompanyDragEnd,onAddCompanyField:handleAddCompanyField,onRemoveCompanyField:handleRemoveCompanyField,onLabelChange:handleCompanyFieldLabelChange,onContentChange:handleContentChange,lastModified:lastModified})})},\"section1\");}else if(sectionId==='section2'){return/*#__PURE__*/_jsx(DroppableZone,{id:\"drop-po\",children:/*#__PURE__*/_jsx(\"div\",{id:\"section2\",className:\"sortable-section\",children:/*#__PURE__*/_jsx(Section2PurchaseOrder,{purchaseOrderFields:purchaseOrderFields,sensors:sensors,onPurchaseOrderDragEnd:handlePurchaseOrderDragEnd,onAddPurchaseOrderField:handleAddPurchaseOrderField,onRemovePurchaseOrderField:handleRemovePurchaseOrderField,onLabelChange:handlePurchaseOrderFieldLabelChange,onContentChange:handleContentChange,lastModified:poLastModified})})},\"section2\");}return null;})})})}),/*#__PURE__*/_jsx(SortableContext,{items:vendorShipToAndShippingDetailsOrder,strategy:verticalListSortingStrategy,children:vendorShipToAndShippingDetailsOrder.map(sectionId=>{if(sectionId==='sections3And4'){return/*#__PURE__*/_jsx(DraggableSectionWrapper,{id:\"sections3And4\",sectionNumber:\"3&4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"vendor-shipping-section\",children:[/*#__PURE__*/_jsx(DroppableZone,{id:\"drop-vendor\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"vendor-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"VENDOR\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-content\",children:vendorFields.map(field=>/*#__PURE__*/_jsx(\"div\",{className:\"vendor-field\",\"data-field\":field.id,children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":field.placeholder,children:field.value})},field.id))})]})}),/*#__PURE__*/_jsx(DroppableZone,{id:\"drop-ship-to\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ship-to-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"SHIP TO\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-content\",children:shipToFields.map(field=>/*#__PURE__*/_jsx(\"div\",{className:\"ship-to-field\",\"data-field\":field.id,children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":field.placeholder,children:field.value})},field.id))})]})})]})},\"sections3And4\");}else if(sectionId==='sections5And6'){return/*#__PURE__*/_jsx(DraggableSectionWrapper,{id:\"sections5And6\",sectionNumber:\"5&6\",children:/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragEnd:handleShippingColumnDragEnd,children:/*#__PURE__*/_jsx(SortableContext,{items:shippingColumnOrder,strategy:horizontalListSortingStrategy,children:/*#__PURE__*/_jsxs(\"div\",{className:\"shipping-details\",children:[shippingColumnOrder.map(columnId=>{const columnConfig={requisitioner:{label:'REQUISITIONER'},shipVia:{label:'SHIP VIA'},fob:{label:'F.O.B.'},shippingTerms:{label:'SHIPPING TERMS'}};const config=columnConfig[columnId];return/*#__PURE__*/_jsx(\"div\",{className:\"section-header draggable-column-header\",children:/*#__PURE__*/_jsx(SortableShippingColumnHeader,{id:columnId,children:config.label})},columnId);}),shippingColumnOrder.map(columnId=>{const fieldConfig={requisitioner:{placeholder:'Requisitioner name'},shipVia:{placeholder:'Shipping method'},fob:{placeholder:'FOB terms'},shippingTerms:{placeholder:'Shipping terms'}};const config=fieldConfig[columnId];return/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",\"data-field\":columnId,children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":config.placeholder})},\"field-\".concat(columnId));})]})})})},\"sections5And6\");}return null;})}),/*#__PURE__*/_jsx(SortableContext,{items:lineItemColumnOrder,strategy:verticalListSortingStrategy,children:/*#__PURE__*/_jsxs(\"table\",{className:\"itemtable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{}),lineItemColumnOrder.map(columnId=>{const columnConfig={itemNumber:{label:'Item#',colSpan:3},description:{label:'Description',colSpan:12},qty:{label:'Qty',colSpan:2},rate:{label:'Rate',colSpan:3},amount:{label:'Amount',colSpan:3}};const config=columnConfig[columnId];return/*#__PURE__*/_jsx(\"th\",{colSpan:config.colSpan,className:\"draggable-column-header\",children:/*#__PURE__*/_jsx(SortableColumnHeader,{id:columnId,children:config.label})},columnId);})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:[1,2,3,4,5].map(row=>/*#__PURE__*/_jsxs(\"tr\",{className:\"draggable-row\",children:[/*#__PURE__*/_jsx(\"td\",{}),lineItemColumnOrder.map(columnId=>{const columnConfig={itemNumber:{colSpan:3,placeholder:'Item number'},description:{colSpan:12,placeholder:'Item description'},qty:{colSpan:2,placeholder:'Qty'},rate:{colSpan:3,placeholder:'$0.00'},amount:{colSpan:3,placeholder:'$0.00'}};const config=columnConfig[columnId];return/*#__PURE__*/_jsx(\"td\",{colSpan:config.colSpan,\"data-column\":columnId,children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":config.placeholder})},\"\".concat(row,\"-\").concat(columnId));})]},row))})]})}),/*#__PURE__*/_jsx(SortableContext,{items:commentsTotalsSectionOrder,strategy:horizontalListSortingStrategy,children:/*#__PURE__*/_jsx(\"div\",{className:\"comments-totals-section\",style:{display:'flex',gap:'20px'},children:commentsTotalsSectionOrder.map(sectionId=>{if(sectionId==='section8'){return/*#__PURE__*/_jsxs(\"div\",{id:\"section8\",className:\"sortable-section comments-section\",style:{flex:1},children:[/*#__PURE__*/_jsx(DraggableSectionHeader,{id:\"section8\",children:\"Comments or Special Instructions ::\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"comments-content\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Enter comments or special instructions...\"})})})]},\"section8\");}else if(sectionId==='section9'){return/*#__PURE__*/_jsxs(\"div\",{id:\"section9\",className:\"sortable-section totals-section\",style:{flex:1},children:[/*#__PURE__*/_jsx(DraggableSectionHeader,{id:\"section9\",children:\"Totals ::\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"subtotal\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"SUBTOTAL:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"calculated-field\",children:\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"tax\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"TAX:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"shipping\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"SHIPPING:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"other\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"OTHER:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row total-final\",\"data-field\":\"total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"TOTAL:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"calculated-field total-field\",children:\"$0.00\"})]})]})]},\"section9\");}return null;})})}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"contact-content\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Contact Information:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Enter contact information here\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-section\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn preview-btn\",onClick:togglePreviewMode,children:isPreviewMode?'👁️ Hide Preview':'👁️ Show Preview'}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:handleAIFill,children:\"\\uD83E\\uDD16 AI Fill\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn export-btn\",onClick:exportToXML,children:\"\\uD83D\\uDCC4 Generate XML\"})]}),changeHistory.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"change-history-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[\"\\uD83D\\uDCDD Change History (\",changeHistory.length,\" changes)\",/*#__PURE__*/_jsx(\"button\",{className:\"clear-history-btn\",onClick:clearChangeHistory,children:\"\\uD83D\\uDDD1\\uFE0F Clear\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"change-list\",children:[changeHistory.slice(0,10).map(change=>/*#__PURE__*/_jsxs(\"div\",{className:\"change-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"change-time\",children:new Date(change.timestamp).toLocaleTimeString()}),/*#__PURE__*/_jsx(\"span\",{className:\"change-type\",children:change.type}),/*#__PURE__*/_jsx(\"span\",{className:\"change-field\",children:change.fieldId}),/*#__PURE__*/_jsx(\"span\",{className:\"change-old\",children:change.oldValue||'empty'}),/*#__PURE__*/_jsx(\"span\",{className:\"change-arrow\",children:\"\\u2192\"}),/*#__PURE__*/_jsx(\"span\",{className:\"change-new\",children:change.newValue||'empty'})]},change.id)),changeHistory.length>10&&/*#__PURE__*/_jsxs(\"div\",{className:\"change-more\",children:[\"... and \",changeHistory.length-10,\" more changes\"]})]})]}),showXMLModal&&/*#__PURE__*/_jsx(\"div\",{className:\"xml-modal-overlay\",onClick:closeXMLModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"xml-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"xml-modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCC4 Generated XML Output\"}),/*#__PURE__*/_jsx(\"button\",{className:\"xml-modal-close\",onClick:closeXMLModal,children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"xml-modal-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"xml-output-container\",children:/*#__PURE__*/_jsx(\"pre\",{className:\"xml-code\",children:xmlOutput})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"xml-modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn copy-btn\",onClick:copyXMLToClipboard,children:\"\\uD83D\\uDCCB Copy XML\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn download-btn\",onClick:downloadXML,children:\"\\uD83D\\uDCE5 Download XML\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn close-btn\",onClick:closeXMLModal,children:\"Close\"})]})]})})]})})]})});}export default PurchaseOrderForm;","map":{"version":3,"names":["React","useState","useEffect","generatePurchaseOrderXML","Section1CompanyInfo","Section2PurchaseOrder","Section3VendorShipTo","useAIProvider","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","useDraggable","useDroppable","SortableContext","verticalListSortingStrategy","horizontalListSortingStrategy","useSortable","CSS","arrayMove","jsx","_jsx","jsxs","_jsxs","DraggableSectionWrapper","_ref","children","id","sectionNumber","attributes","listeners","setNodeRef","transform","transition","style","Transform","toString","ref","className","concat","_objectSpread","title","SortableColumnHeader","_ref2","isDragging","cursor","userSelect","SortableShippingColumnHeader","_ref3","DraggableSectionHeader","_ref4","PurchaseOrderForm","companyFields","setCompanyFields","label","placeholder","value","console","log","map","f","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","availableFields","category","fields","sidebarVisible","setSidebarVisible","toggleSidebar","generateUniqueFieldId","baseLabel","existingIds","slugBase","String","toLowerCase","replace","candidate","counter","includes","PaletteDraggable","_ref5","data","source","x","y","undefined","opacity","onClick","e","stopPropagation","showNotification","DroppableZone","_ref6","isOver","handlePaletteDragEnd","event","_active$data","active","over","current","newField","handleAddCompanyField","purchaseOrderFields","handleAddPurchaseOrderField","vendorFields","setVendorFields","prevFields","shipToFields","setShipToFields","setPurchaseOrderFields","isTitle","totalsFields","setTotalsFields","isCalculated","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","logChange","handleRemoveCompanyField","fieldId","fieldToRemove","find","field","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","changeType","oldValue","newValue","section","change","now","timestamp","type","prev","slice","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","togglePreviewMode","clearChangeHistory","showXMLModal","setShowXMLModal","xmlOutput","setXmlOutput","displayXMLOutput","xml","closeXMLModal","copyXMLToClipboard","navigator","clipboard","writeText","then","catch","downloadXML","_purchaseOrderFields$","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","getFieldSuggestions","applySuggestionsToFields","suggestionsMap","Array","isArray","newVal","handleAIFill","payload","context","shippingFields","suggestions","debug","Object","keys","company","name","phone","po","date","number","shipping","requisitioner","shipVia","totals","subtotal","tax","total","line1","item","itemNumber1","desc","description1","qty","qty1","rate","rate1","amount","amount1","_unused","next","before","fromEntries","after","forEach","from","to","sourceKey","_unused2","_unused3","_unused4","_unused5","write","el","val","textContent","shipSelectors","key","shipOrder","idx","used","sel","querySelector","nth","selA","selB","count","querySelectorAll","length","selector","fieldsInDOM","_unused6","setCell","row","col","cell","_unused7","li","i","k","other","_unused8","domTotals","_unused9","calcTotal","calcSub","_unused0","commentsEl","contactEl","comments","contactInfo","_unused1","error","message","exportToXML","capturedData","captureFieldValues","headerSections","visualSections1And2","sections1And2ForExport","sections1And2Order","vendorShipToSections","visualSections3And4","sections3And4ForExport","vendorShipToSectionOrder","getText","_document$querySelect","_document$querySelect2","trim","normalizedLineItems","lineItems","itemNumber","description","quantity","unitPrice","exportData","sectionOrder","sections1And2","sections3And4","sections5And6","sections5And6Order","sections3And4And5And6","vendorShipToAndShippingDetailsOrder","sections8And9","commentsTotalsSectionOrder","lineItemColumns","lineItemColumnOrder","shippingColumns","shippingColumnOrder","fieldOrder","companyFieldOrder","purchaseOrder","purchaseOrderFieldOrder","vendor","shipTo","fob","shippingTerms","arguments","existingNotification","remove","notification","innerHTML","cssText","head","setTimeout","parentElement","getFormStats","totalFields","totalChanges","Math","max","getTime","handleCompanyDragEnd","setCompanyFieldOrder","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","logFieldSummary","toLocaleString","handleRemovePurchaseOrderField","handlePurchaseOrderDragEnd","setPurchaseOrderFieldOrder","setVendorShipToSectionOrder","setSections1And2Order","setSections5And6Order","setVendorShipToAndShippingDetailsOrder","setLineItemColumnOrder","setShippingColumnOrder","setCommentsTotalsSectionOrder","handleSectionDragEnd","handleSections5And6DragEnd","handleLineItemColumnDragEnd","items","handleCommentsTotalsDragEnd","handleVendorShipToSectionDragEnd","handleVendorShipToAndShippingDetailsDragEnd","handleSwapSections","companyFieldValues","element","getElementById","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSwapVendorShipTo","vendorFieldValues","shipToFieldValues","reverse","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","capturedLineItems","rowIndex","rowData","columnId","cellSelector","push","updatedTotalsFields","handleRootDragEnd","_active$data2","_active$data2$current","activeId","startsWith","collisionDetection","onDragEnd","categoryIndex","fieldIndex","display","alignItems","gap","marginTop","strategy","sectionId","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","contentEditable","handleShippingColumnDragEnd","columnConfig","config","fieldConfig","colSpan","flex","toLocaleTimeString"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\nimport { useAIProvider } from './hooks/useAIProvider';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter, useDraggable, useDroppable } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n\n// Draggable Section Wrapper Component for Sections 5 & 6\nfunction DraggableSectionWrapper({ children, id, sectionNumber }) {\n\n  \n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className={`sortable-section section-${sectionNumber}`}\n      data-section={sectionNumber}\n    >\n      {/* Left-side drag handle */}\n      <div \n        className=\"left-drag-handle\"\n        {...attributes} \n        {...listeners} \n        title=\"Drag to reorder sections\"\n      >\n        ::\n      </div>\n      {children}\n    </div>\n  );\n}\n\n// Sortable column header component for line items\nfunction SortableColumnHeader({ children, id }) {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\n  \n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      {...attributes} \n      {...listeners}\n      className={`sortable-column-header ${isDragging ? 'dragging' : ''}`}\n    >\n      {children} ::\n    </div>\n  );\n}\n\n// Sortable shipping column header component for shipping details\nfunction SortableShippingColumnHeader({ children, id }) {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\n  \n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      {...attributes} \n      {...listeners}\n      className={`sortable-column-header ${isDragging ? 'dragging' : ''}`}\n    >\n      {children}\n    </div>\n  );\n}\n\n// Draggable Section Header Component for Comments and Totals\nfunction DraggableSectionHeader({ children, id }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className=\"section-header\"\n      {...attributes} \n      {...listeners} \n      title=\"Drag to reorder sections\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: '' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: '' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: '' }\n  ]);\n\n  // Debug: Log company fields state changes\n  useEffect(() => {\n    console.log('🔄 Company fields state updated:', companyFields.map(f => ({ id: f.id, label: f.label })));\n  }, [companyFields]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // ============================================================================\n  // FIELD LIST COMPONENT\n  // ============================================================================\n  \n  // Hardcoded list of fields that are not currently on the form\n  const availableFields = [\n    // Company Information Fields\n    { category: 'Company Information', fields: [\n      'Tax ID Number',\n      'DUNS Number',\n      'Business License',\n      'Industry Classification',\n      'Year Established',\n      'Employee Count',\n      'Annual Revenue',\n      'Parent Company',\n      'Subsidiaries',\n      'Business Type (LLC, Corp, etc.)'\n    ]},\n    // Purchase Order Fields\n    { category: 'Purchase Order Details', fields: [\n      'Delivery Date',\n      'Payment Terms',\n      'Currency',\n      'Purchase Order Type',\n      'Priority Level',\n      'Department',\n      'Project Code',\n      'Cost Center',\n      'Approval Status',\n      'Approved By'\n    ]},\n    // Vendor Fields\n    { category: 'Vendor Information', fields: [\n      'Vendor Tax ID',\n      'Vendor DUNS',\n      'Vendor Rating',\n      'Payment History',\n      'Contract Terms',\n      'Insurance Certificate',\n      'Bond Information',\n      'Quality Rating',\n      'Delivery Performance',\n      'Warranty Terms'\n    ]},\n    // Shipping Fields\n    { category: 'Shipping & Delivery', fields: [\n      'Expected Delivery',\n      'Carrier Information',\n      'Tracking Number',\n      'Delivery Instructions',\n      'Special Handling',\n      'Packaging Requirements',\n      'Delivery Confirmation',\n      'Return Policy',\n      'Damage Claims',\n      'Freight Class'\n    ]},\n    // Financial Fields\n    { category: 'Financial Details', fields: [\n      'Discount Percentage',\n      'Early Payment Discount',\n      'Late Payment Penalty',\n      'Installment Terms',\n      'Security Deposit',\n      'Performance Bond',\n      'Liquidated Damages',\n      'Retention Amount',\n      'Change Order Process',\n      'Budget Approval'\n    ]},\n    // Compliance Fields\n    { category: 'Compliance & Legal', fields: [\n      'Regulatory Compliance',\n      'Safety Requirements',\n      'Environmental Standards',\n      'Quality Certifications',\n      'Audit Requirements',\n      'Documentation Standards',\n      'Record Retention',\n      'Confidentiality Terms',\n      'Non-Compete Clauses',\n      'Dispute Resolution'\n    ]}\n  ];\n\n  // State for sidebar visibility on mobile\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n\n  // Toggle sidebar visibility\n  const toggleSidebar = () => {\n    setSidebarVisible(!sidebarVisible);\n  };\n\n  // Helper: slugify and ensure unique id for new fields\n  const generateUniqueFieldId = (baseLabel, existingIds) => {\n    const slugBase = String(baseLabel)\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n    let candidate = slugBase || 'field';\n    let counter = 1;\n    while (existingIds.includes(candidate)) {\n      candidate = `${slugBase}-${counter++}`;\n    }\n    return candidate;\n  };\n\n  // dnd-kit: palette draggable item\n  const PaletteDraggable = ({ label, category }) => {\n    const id = `palette-${category}-${label}`;\n    const { attributes, listeners, setNodeRef, transform, isDragging } = useDraggable({\n      id,\n      data: { source: 'palette', label, category }\n    });\n    const style = {\n      transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n      cursor: 'grab',\n      opacity: isDragging ? 0.6 : 1\n    };\n    return (\n      <li ref={setNodeRef} style={style} className=\"field-item\" {...attributes} {...listeners}>\n        <span className=\"field-name\">{label}</span>\n        <button className=\"add-field-btn\" title={`Add ${label} to form`} onClick={(e) => { e.stopPropagation(); showNotification(`➕ ${label} field added to form`, 'info'); }}>+\n        </button>\n      </li>\n    );\n  };\n\n  // dnd-kit: droppable wrapper for sections\n  const DroppableZone = ({ id, children }) => {\n    const { isOver, setNodeRef } = useDroppable({ id });\n    return (\n      <div ref={setNodeRef} className={`droppable-zone ${isOver ? 'droppable-over' : ''}`}>\n        {children}\n      </div>\n    );\n  };\n\n  // Handle palette drag end to add fields to target sections\n  const handlePaletteDragEnd = (event) => {\n    const { active, over } = event;\n    if (!active?.data?.current || !over?.id) return;\n    const data = active.data.current;\n    if (data.source !== 'palette') return;\n\n    const baseLabel = data.label;\n    if (over.id === 'drop-company') {\n      const existingIds = companyFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddCompanyField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Company Info`, 'success');\n    } else if (over.id === 'drop-po') {\n      const existingIds = purchaseOrderFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddPurchaseOrderField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Purchase Order`, 'success');\n    } else if (over.id === 'drop-vendor') {\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      // Add to vendor fields\n      setVendorFields(prevFields => [...prevFields, newField]);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else if (over.id === 'drop-ship-to') {\n      const existingIds = shipToFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      // Add to ship-to fields\n      setShipToFields(prevFields => [...prevFields, newField]);\n      showNotification(`➕ Added \"${baseLabel}\" to Ship To section`, 'success');\n    }\n  };\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: '' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: '' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: '' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: '' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: '' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([\n    { id: 'subtotal', label: 'SUBTOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true },\n    { id: 'tax', label: 'TAX:', placeholder: '$0.00', value: '' },\n    { id: 'shipping', label: 'SHIPPING:', placeholder: '$0.00', value: '' },\n    { id: 'other', label: 'OTHER:', placeholder: '$0.00', value: '' },\n    { id: 'total', label: 'TOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true }\n  ]);\n\n\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChange('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      showNotification(`🗑️ Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n  \n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n  \n  \n  // Function to display XML output in a modal\n  const displayXMLOutput = (xml) => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n  \n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n  \n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n  \n  // Function to download XML file\n  const downloadXML = () => {\n    const blob = new Blob([xmlOutput], { type: 'application/xml' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${purchaseOrderFields.find(f => f.id === 'po-number')?.value || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // =========================================================================\n  // AI SUGGESTIONS\n  // =========================================================================\n  const { getFieldSuggestions } = useAIProvider();\n\n  const applySuggestionsToFields = (suggestionsMap, fields) => {\n    if (!Array.isArray(fields)) return fields;\n    return fields.map(f => {\n      const newVal = suggestionsMap?.[f.id];\n      if (typeof newVal === 'string') {\n        return { ...f, value: newVal };\n      }\n      return f;\n    });\n  };\n\n  const handleAIFill = async () => {\n    try {\n      showNotification('🤖 Fetching AI suggestions...', 'info');\n\n      const payload = {\n        context: 'purchase_order',\n        companyFields,\n        purchaseOrderFields,\n        vendorFields,\n        shipToFields,\n        shippingFields: [\n          { id: 'requisitioner', label: 'Requisitioner name' },\n          { id: 'shipVia', label: 'Shipping method' },\n          { id: 'fob', label: 'FOB terms' },\n          { id: 'shippingTerms', label: 'Shipping terms' }\n        ]\n      };\n\n      const { suggestions } = await getFieldSuggestions(payload);\n      try {\n        console.debug('🧪 AI suggestions keys:', Object.keys(suggestions || {}));\n        // Preview a few critical values to verify mapping\n        console.debug('🧪 AI preview:', {\n          company: {\n            name: suggestions?.['company-name'],\n            phone: suggestions?.['company-phone']\n          },\n          po: {\n            date: suggestions?.['po-date'],\n            number: suggestions?.['po-number']\n          },\n          shipping: {\n            requisitioner: suggestions?.requisitioner,\n            shipVia: suggestions?.shipVia\n          },\n          totals: {\n            subtotal: suggestions?.subtotal,\n            tax: suggestions?.tax,\n            total: suggestions?.total\n          },\n          line1: {\n            item: suggestions?.itemNumber1,\n            desc: suggestions?.description1,\n            qty: suggestions?.qty1,\n            rate: suggestions?.rate1,\n            amount: suggestions?.amount1\n          }\n        });\n      } catch {}\n\n      // 1) Apply to Section 1–3 states (company/po/vendor/ship-to) with mapping logs\n      setCompanyFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(companyFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setPurchaseOrderFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(purchaseOrderFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setVendorFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(vendorFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setShipToFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(shipToFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // 2) Shipping details (DOM spans)\n      const write = (el, val) => { if (el && typeof val === 'string') el.textContent = val; };\n\n      const shipSelectors = (key) => [\n        `.shipping-details [data-field=\"${key}\"] .editable-field`,\n        `.shipping-field[data-field=\"${key}\"] .editable-field`,\n        `#shipping-${key}`,\n        `.shipping-field-${key} .editable-field`\n      ];\n\n      const shipOrder = ['requisitioner','shipVia','fob','shippingTerms'];\n      shipOrder.forEach((key, idx) => {\n        let el = null, used = '';\n        for (const sel of shipSelectors(key)) {\n          el = document.querySelector(sel);\n          if (el) { used = sel; break; }\n        }\n        // Fallback to positional selector used in your JSX\n        if (!el) {\n          const nth = idx + 1; // 1-based\n          // Prefer :nth-of-type within container to ignore headers\n          const selA = `.shipping-details .shipping-field:nth-of-type(${nth}) .editable-field`;\n          el = document.querySelector(selA);\n          if (el) {\n            used = selA;\n          } else {\n            // Last resort: original child-based selector\n            const selB = `.shipping-field:nth-child(${nth}) .editable-field`;\n            el = document.querySelector(selB);\n            if (el) used = selB;\n          }\n        }\n        write(el, suggestions[key]);\n        try {\n          const count = document.querySelectorAll('.shipping-details .shipping-field').length;\n          console.debug('🧭 map(shippingDetails):', { key, selector: used || '(not found)', value: suggestions[key], fieldsInDOM: count });\n        } catch {}\n      });\n\n      // 3) Line items (first 3 rows only)\n      // Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\n      const setCell = (row, col, val) => {\n        const selector = `.itemtable tbody tr:nth-child(${row}) td[data-column=\"${col}\"] .editable-field`;\n        const cell = document.querySelector(selector);\n        if (cell && typeof val === 'string') {\n          cell.textContent = val;\n        }\n        try { console.debug('🧭 map(lineItem):', { row, col, selector, value: val }); } catch {}\n      };\n\n      const li = (i, k) => suggestions?.[`${k}${i}`];\n\n      for (let i = 1; i <= 3; i++) {\n        setCell(i, 'itemNumber', li(i, 'itemNumber'));\n        setCell(i, 'description', li(i, 'description'));\n        setCell(i, 'qty', li(i, 'qty'));\n        setCell(i, 'rate', li(i, 'rate'));\n        setCell(i, 'amount', li(i, 'amount'));\n      }\n\n      // 4) Totals (state + DOM)\n      setTotalsFields(prev => {\n        const map = {\n          subtotal: suggestions.subtotal,\n          tax: suggestions.tax,\n          shipping: suggestions.shipping,\n          other: suggestions.other,\n          total: suggestions.total,\n        };\n        const next = prev.map(f => (map[f.id] ? { ...f, value: map[f.id] } : f));\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && map[id] !== undefined) {\n              console.debug('🧭 map(totalsFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // Write editable totals into DOM for non-calculated rows\n      const domTotals = (field) => document.querySelector(`.totals-section .total-row[data-field=\"${field}\"] .editable-field`);\n      ['tax','shipping','other'].forEach(key => {\n        const sel = `.totals-section .total-row[data-field=\"${key}\"] .editable-field`;\n        write(domTotals(key), suggestions[key]);\n        try { console.debug('🧭 map(totalsDOM):', { key, selector: sel, value: suggestions[key] }); } catch {}\n      });\n\n      // Calculated-looking spans (subtotal, total) in your layout use .calculated-field\n      const calcTotal = document.querySelector(`.totals-section .total-row[data-field=\"total\"] .total-field`);\n      const calcSub   = document.querySelector(`.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`);\n      write(calcSub, suggestions.subtotal);\n      write(calcTotal, suggestions.total);\n      try {\n        console.debug('🧭 map(totalsDOM):', { key: 'subtotal', selector: `.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`, value: suggestions.subtotal });\n        console.debug('🧭 map(totalsDOM):', { key: 'total', selector: `.totals-section .total-row[data-field=\"total\"] .total-field`, value: suggestions.total });\n      } catch {}\n\n      // 5) Comments, Contact Info (DOM)\n      const commentsEl = document.querySelector('.comments-content .editable-field');\n      const contactEl  = document.querySelector('.contact-section .editable-field');\n      write(commentsEl, suggestions.comments);\n      write(contactEl, suggestions.contactInfo);\n      try {\n        console.debug('🧭 map(comments):', { selector: '.comments-content .editable-field', value: suggestions.comments });\n        console.debug('🧭 map(contactInfo):', { selector: '.contact-section .editable-field', value: suggestions.contactInfo });\n      } catch {}\n\n      // 6) Bump timestamps\n      updateCompanyFieldsTimestamp();\n      updatePurchaseOrderFieldsTimestamp();\n\n      showNotification('✅ AI suggestions applied', 'success');\n    } catch (e) {\n      console.error('AI fill failed:', e);\n      showNotification(`❌ AI fill failed: ${e.message}`, 'error');\n    }\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n  \n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('📄 Starting XML generation...');\n      \n      // Capture current field values first\n      const capturedData = captureFieldValues();\n      \n      // Prepare data for XML generation\n      // Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\n      const headerSections = Array.from(document.querySelectorAll('.header-section .sortable-section'));\n      const visualSections1And2 = headerSections\n        .map(el => el.id)\n        .filter(id => id === 'section1' || id === 'section2');\n      const sections1And2ForExport = (visualSections1And2.length === 2) ? visualSections1And2 : sections1And2Order;\n      \n      // Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\n      const vendorShipToSections = Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));\n      const visualSections3And4 = vendorShipToSections\n        .map(el => el.id)\n        .filter(id => id === 'section3' || id === 'section4');\n      const sections3And4ForExport = (visualSections3And4.length === 2) ? visualSections3And4 : vendorShipToSectionOrder;\n      \n      // Helpers for DOM reads\n      const getText = (sel) => document.querySelector(sel)?.textContent?.trim() || '';\n      \n      // Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\n      const normalizedLineItems = (capturedData.lineItems || []).map(row => ({\n        // original UI keys\n        itemNumber: row.itemNumber || '',\n        description: row.description || '',\n        qty: row.qty || row.quantity || '',\n        rate: row.rate || row.unitPrice || '',\n        amount: row.amount || row.total || '',\n        // template-expected keys\n        quantity: row.quantity || row.qty || '',\n        unitPrice: row.unitPrice || row.rate || '',\n        total: row.total || row.amount || ''\n      }));\n\n      const exportData = {\n        ...capturedData,\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2ForExport, // Use current visual order to ensure XML matches UI\n          sections3And4: sections3And4ForExport, // Use current visual order to ensure XML matches UI\n          sections5And6: sections5And6Order, // Use actual state for sections 5&6\n          sections3And4And5And6: vendorShipToAndShippingDetailsOrder, // Vendor-ShipTo and Shipping Details order\n          sections8And9: commentsTotalsSectionOrder, // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder, // Use actual state for line item columns\n          shippingColumns: shippingColumnOrder // Use actual state for shipping columns\n        },\n        // CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\n        fieldOrder: {\n          company: companyFieldOrder, // Preserve company field order independently of section position\n          purchaseOrder: purchaseOrderFieldOrder, // Preserve PO field order independently of section position\n          vendor: vendorFields.map(f => f.id), // Vendor field order\n          shipTo: shipToFields.map(f => f.id) // Ship-to field order\n        },\n        // Add normalized line items (support both key schemes)\n        lineItems: normalizedLineItems,\n        // Shipping details (prefer data-field; fall back handled in XML builder too)\n        requisitioner: getText('.shipping-details [data-field=\"requisitioner\"] .editable-field'),\n        shipVia: getText('.shipping-details [data-field=\"shipVia\"] .editable-field'),\n        fob: getText('.shipping-details [data-field=\"fob\"] .editable-field'),\n        shippingTerms: getText('.shipping-details [data-field=\"shippingTerms\"] .editable-field'),\n        // Totals: read what the user sees\n        subtotal: getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field') || '$0.00',\n        tax: getText('.totals-section .total-row[data-field=\"tax\"] .editable-field') || '$0.00',\n        shipping: getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field') || '$0.00',\n        other: getText('.totals-section .total-row[data-field=\"other\"] .editable-field') || '$0.00',\n        total: getText('.totals-section .total-row[data-field=\"total\"] .total-field') || '$0.00',\n        comments: getText('.comments-content .editable-field'),\n        contactInfo: getText('.contact-section .editable-field')\n      };\n      \n      console.debug('🔎 Export DOM reads:', {\n        requisitioner: exportData.requisitioner,\n        shipVia: exportData.shipVia,\n        fob: exportData.fob,\n        shippingTerms: exportData.shippingTerms,\n        subtotal: exportData.subtotal,\n        tax: exportData.tax,\n        shipping: exportData.shipping,\n        other: exportData.other,\n        total: exportData.total\n      });\n\n      console.log('📄 Export data prepared:', exportData);\n      console.log('🔀 Section order being sent to XML:', exportData.sectionOrder);\n      console.log('🔀 Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('🔀 Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('🔀 Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n      console.log('🔀 Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('🔀 Shipping columns order:', exportData.sectionOrder.shippingColumns);\n      console.log('🔀 Line items data:', exportData.lineItems);\n      \n      // CRITICAL: Log field order information\n      console.log('🔀 Field order being sent to XML:', exportData.fieldOrder);\n      console.log('🔀 Company field order:', exportData.fieldOrder.company);\n      console.log('🔀 Purchase order field order:', exportData.fieldOrder.purchaseOrder);\n      console.log('🔀 Vendor field order:', exportData.fieldOrder.vendor);\n      console.log('🔀 Ship-to field order:', exportData.fieldOrder.shipTo);\n      \n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n      \n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n      \n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      \n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n      \n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n\n\n\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setCompanyFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('🔄 Company field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('🔄 Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setPurchaseOrderFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('🔄 Purchase order field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('🔄 Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for vendor/ship-to section order\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n  \n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n  \n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5', 'section6']);\n  \n  // State for vendor-ship-to and shipping-details sections order\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['sections3And4', 'sections5And6']);\n  \n  // CRITICAL: Add field order state management (same pattern as section order)\n  // State for company field order (preserves drag-and-drop order independently of section position)\n  const [companyFieldOrder, setCompanyFieldOrder] = useState([]);\n  \n  // State for purchase order field order (preserves drag-and-drop order independently of section position)\n  const [purchaseOrderFieldOrder, setPurchaseOrderFieldOrder] = useState([]);\n  \n  // Initialize field order states with current field IDs\n  React.useEffect(() => {\n    setCompanyFieldOrder(companyFields.map(field => field.id));\n  }, [companyFields]);\n  \n  React.useEffect(() => {\n    setPurchaseOrderFieldOrder(purchaseOrderFields.map(field => field.id));\n  }, [purchaseOrderFields]);\n  \n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState([\n    'itemNumber',\n    'description', \n    'qty',\n    'rate',\n    'amount'\n  ]);\n  \n  // Shipping column order state\n  const [shippingColumnOrder, setShippingColumnOrder] = useState([\n    'requisitioner',\n    'shipVia',\n    'fob',\n    'shippingTerms'\n  ]);\n  \n  // Log line item column order changes\n  useEffect(() => {\n    console.log('🔀 Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n  \n  // Log shipping column order changes\n  useEffect(() => {\n    console.log('🚢 Shipping column order updated:', shippingColumnOrder);\n  }, [shippingColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', { active: active.id, over: active.id });\n      \n      setSections1And2Order(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New section order:', newOrder);\n        \n        // CRITICAL: Only swap section positions, preserve field content and order\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2 (POSITION ONLY)');\n          console.log('🔄 Company fields remain company fields (with custom order)');\n          console.log('🔄 Purchase Order fields remain PO fields (with custom order)');\n          \n          showNotification('🔄 Sections swapped! (Field content preserved)', 'info');\n          console.log('🔄 Sections swapped via drag & drop! (Field content preserved)');\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1 (POSITION ONLY)');\n          console.log('🔄 Company fields remain company fields (with custom order)');\n          console.log('🔄 Purchase Order fields remain PO fields (with custom order)');\n          \n          showNotification('🔄 Sections swapped! (Field content preserved)', 'info');\n          console.log('🔄 Sections swapped via drag & drop! (Field content preserved)');\n        }\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', { active: active.id, over: over.id });\n      \n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New sections 5&6 order:', newOrder);\n        \n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Line item column swap detected!', { active: active.id, over: over.id });\n      \n      setLineItemColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('🔄 Previous line item column order:', items);\n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('🔄 New line item column order:', newOrder);\n        showNotification('🔄 Line item columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No line item column swap - same position');\n    }\n  };\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor/ship-to order:', newOrder);\n        \n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('🔄 Previous vendor-shipTo + shipping details order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor-shipTo + shipping details order:', newOrder);\n        \n        showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n              showNotification('🔄 Sections swapped!', 'info');\n    \n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n    };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n    \n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n    \n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n    \n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    \n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    \n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n    \n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n    \n    // Capture company field values - PRESERVE CURRENT ORDER\n    console.log('🔍 DEBUG: Current company fields order before capture:', companyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    console.log('🔍 DEBUG: Updated company fields order after capture:', updatedCompanyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('📝 Line items captured:', capturedLineItems);\n    \n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n      \n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      \n      console.log(`📝 Totals field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    \n    console.log('📝 Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n\n  // Unified drag end dispatcher for a single top-level DndContext\n  const handleRootDragEnd = (event) => {\n    const { active } = event;\n    const activeId = active?.id || '';\n    const source = active?.data?.current?.source;\n\n    if (source === 'palette') {\n      handlePaletteDragEnd(event);\n      return;\n    }\n\n    // Sections 1 & 2 swap\n    if (activeId === 'section1' || activeId === 'section2') {\n      handleSectionDragEnd(event);\n      return;\n    }\n    // Vendor-ShipTo + ShippingDetails container swap\n    if (activeId === 'sections3And4' || activeId === 'sections5And6') {\n      handleVendorShipToAndShippingDetailsDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To individual field drags\n    if (String(activeId).startsWith('vendor-')) {\n      handleVendorDragEnd(event);\n      return;\n    }\n    if (String(activeId).startsWith('ship-to-')) {\n      handleShipToDragEnd(event);\n      return;\n    }\n    // Line item column reorder\n    if (['itemNumber','description','qty','rate','amount'].includes(activeId)) {\n      handleLineItemColumnDragEnd(event);\n      return;\n    }\n    // Comments & totals sections reorder\n    if (activeId === 'section8' || activeId === 'section9') {\n      handleCommentsTotalsDragEnd(event);\n      return;\n    }\n  };\n\n  return (\n    <div className={`purchase-order-container ${!sidebarVisible ? 'sidebar-hidden' : ''}`}>\n      <DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={handleRootDragEnd}>\n      {/* Field List Sidebar - Positioned on the far left */}\n      {sidebarVisible && (\n        <div className=\"field-list-sidebar\">\n          <div className=\"field-list-header\">\n            <h3>📋 Available Fields</h3>\n            <p>Fields not currently on the form</p>\n          </div>\n          <div className=\"field-list-content\">\n            {availableFields.map((category, categoryIndex) => (\n              <div key={categoryIndex} className=\"field-category\">\n                <h4 className=\"category-title\">{category.category}</h4>\n                <ul className=\"field-list\">\n                  {category.fields.map((field, fieldIndex) => (\n                    <PaletteDraggable key={`${categoryIndex}-${fieldIndex}`} label={field} category={category.category} />\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n        <div style={{ display: 'flex', alignItems: 'center', gap: 10, marginTop: 8 }}>\n          <button \n            className=\"sidebar-toggle-btn\"\n            onClick={toggleSidebar}\n            title={sidebarVisible ? \"Hide Field List\" : \"Show Field List\"}\n          >\n            {sidebarVisible ? \"📋 Hide Fields\" : \"📋 Show Fields\"}\n          </button>\n        </div>\n      </header>\n\n      {/* Real-time Status Indicator removed per request */}\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section\">\n              {/* Section-level Drag and Drop */}\n              <SortableContext \n                items={sections1And2Order}\n                strategy={verticalListSortingStrategy}\n              >\n                {/* CRITICAL: Render sections dynamically based on sections1And2Order state */}\n                {sections1And2Order.map(sectionId => {\n                  if (sectionId === 'section1') {\n                    return (\n                      <DroppableZone key=\"section1\" id=\"drop-company\">\n                      <div id=\"section1\" className=\"sortable-section\">\n                        <Section1CompanyInfo \n                          companyFields={companyFields}\n                          sensors={sensors}\n                          onCompanyDragEnd={handleCompanyDragEnd}\n                          onAddCompanyField={handleAddCompanyField}\n                          onRemoveCompanyField={handleRemoveCompanyField}\n                          onLabelChange={handleCompanyFieldLabelChange}\n                          onContentChange={handleContentChange}\n                          lastModified={lastModified}\n                        />\n                      </div>\n                      </DroppableZone>\n                    );\n                  } else if (sectionId === 'section2') {\n                    return (\n                      <DroppableZone key=\"section2\" id=\"drop-po\">\n                      <div id=\"section2\" className=\"sortable-section\">\n                        <Section2PurchaseOrder \n                          purchaseOrderFields={purchaseOrderFields}\n                          sensors={sensors}\n                          onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                          onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                          onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                          onLabelChange={handlePurchaseOrderFieldLabelChange}\n                          onContentChange={handleContentChange}\n                          lastModified={poLastModified}\n                        />\n                      </div>\n                      </DroppableZone>\n                    );\n                  }\n                  return null;\n                })}\n              </SortableContext>\n            </div>\n          </div>\n\n          {/* Vendor-ShipTo and Shipping Details Sections (Vertically Swappable) */}\n          <SortableContext \n            items={vendorShipToAndShippingDetailsOrder}\n            strategy={verticalListSortingStrategy}\n          >\n            {vendorShipToAndShippingDetailsOrder.map(sectionId => {\n              if (sectionId === 'sections3And4') {\n                return (\n                  <DraggableSectionWrapper key=\"sections3And4\" id=\"sections3And4\" sectionNumber=\"3&4\">\n                    {/* Vendor and Ship To Section */}\n                    <div className=\"vendor-shipping-section\">\n                      {/* Vendor Section */}\n                      <DroppableZone id=\"drop-vendor\">\n                        <div className=\"vendor-section\">\n                          <div className=\"section-header\">VENDOR</div>\n                          <div className=\"section-content\">\n                            {vendorFields.map(field => (\n                              <div key={field.id} className=\"vendor-field\" data-field={field.id}>\n                                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder={field.placeholder}>\n                                  {field.value}\n                                </span>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      </DroppableZone>\n                      \n                      {/* Ship To Section */}\n                      <DroppableZone id=\"drop-ship-to\">\n                        <div className=\"ship-to-section\">\n                          <div className=\"section-header\">SHIP TO</div>\n                          <div className=\"section-content\">\n                            {shipToFields.map(field => (\n                              <div key={field.id} className=\"ship-to-field\" data-field={field.id}>\n                                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder={field.placeholder}>\n                                  {field.value}\n                                </span>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      </DroppableZone>\n                    </div>\n                  </DraggableSectionWrapper>\n                );\n              } else if (sectionId === 'sections5And6') {\n                return (\n                  <DraggableSectionWrapper key=\"sections5And6\" id=\"sections5And6\" sectionNumber=\"5&6\">\n                    {/* Shipping Details Section */}\n                    <DndContext sensors={sensors} collisionDetection={closestCenter} onDragEnd={handleShippingColumnDragEnd}>\n                      <SortableContext items={shippingColumnOrder} strategy={horizontalListSortingStrategy}>\n                        <div className=\"shipping-details\">\n                          {shippingColumnOrder.map((columnId) => {\n                            const columnConfig = {\n                              requisitioner: { label: 'REQUISITIONER' },\n                              shipVia: { label: 'SHIP VIA' },\n                              fob: { label: 'F.O.B.' },\n                              shippingTerms: { label: 'SHIPPING TERMS' }\n                            };\n                            \n                            const config = columnConfig[columnId];\n                            return (\n                              <div key={columnId} className=\"section-header draggable-column-header\">\n                                <SortableShippingColumnHeader id={columnId}>\n                                  {config.label}\n                                </SortableShippingColumnHeader>\n                              </div>\n                            );\n                          })}\n                          {shippingColumnOrder.map((columnId) => {\n                            const fieldConfig = {\n                              requisitioner: { placeholder: 'Requisitioner name' },\n                              shipVia: { placeholder: 'Shipping method' },\n                              fob: { placeholder: 'FOB terms' },\n                              shippingTerms: { placeholder: 'Shipping terms' }\n                            };\n                            \n                            const config = fieldConfig[columnId];\n                            return (\n                              <div key={`field-${columnId}`} className=\"shipping-field\" data-field={columnId}>\n                                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder={config.placeholder} />\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </SortableContext>\n                    </DndContext>\n                  </DraggableSectionWrapper>\n                );\n              }\n              return null;\n            })}\n          </SortableContext>\n\n          {/* Items Table */}\n          <SortableContext items={lineItemColumnOrder} strategy={verticalListSortingStrategy}>\n            <table className=\"itemtable\">\n              <thead>\n                <tr>\n                  <th></th>\n                  {lineItemColumnOrder.map((columnId) => {\n                    const columnConfig = {\n                      itemNumber: { label: 'Item#', colSpan: 3 },\n                      description: { label: 'Description', colSpan: 12 },\n                      qty: { label: 'Qty', colSpan: 2 },\n                    rate: { label: 'Rate', colSpan: 3 },\n                      amount: { label: 'Amount', colSpan: 3 }\n                    };\n                    \n                    const config = columnConfig[columnId];\n                    return (\n                      <th key={columnId} colSpan={config.colSpan} className=\"draggable-column-header\">\n                        <SortableColumnHeader id={columnId}>\n                          {config.label}\n                        </SortableColumnHeader>\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {[1, 2, 3, 4, 5].map((row) => (\n                  <tr key={row} className=\"draggable-row\">\n                    <td></td>\n                    {lineItemColumnOrder.map((columnId) => {\n                      const columnConfig = {\n                        itemNumber: { colSpan: 3, placeholder: 'Item number' },\n                        description: { colSpan: 12, placeholder: 'Item description' },\n                        qty: { colSpan: 2, placeholder: 'Qty' },\n                        rate: { colSpan: 3, placeholder: '$0.00' },\n                        amount: { colSpan: 3, placeholder: '$0.00' }\n                      };\n                      \n                      const config = columnConfig[columnId];\n                      return (\n                        <td key={`${row}-${columnId}`} colSpan={config.colSpan} data-column={columnId}>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder={config.placeholder} />\n                        </td>\n                      );\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </SortableContext>\n\n          {/* Comments and Totals - Sections 8 & 9 */}\n          <SortableContext items={commentsTotalsSectionOrder} strategy={horizontalListSortingStrategy}>\n            <div className=\"comments-totals-section\" style={{ display: 'flex', gap: '20px' }}>\n              {commentsTotalsSectionOrder.map((sectionId) => {\n                if (sectionId === 'section8') {\n                  return (\n                    <div key=\"section8\" id=\"section8\" className=\"sortable-section comments-section\" style={{ flex: 1 }}>\n                      <DraggableSectionHeader id=\"section8\">\n                        Comments or Special Instructions ::\n                      </DraggableSectionHeader>\n                      <div className=\"section-content\">\n                        <div className=\"comments-content\">\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n                        </div>\n                      </div>\n                    </div>\n                  );\n                } else if (sectionId === 'section9') {\n                  return (\n                    <div key=\"section9\" id=\"section9\" className=\"sortable-section totals-section\" style={{ flex: 1 }}>\n                      <DraggableSectionHeader id=\"section9\">\n                        Totals ::\n                      </DraggableSectionHeader>\n                      <div className=\"section-content\">\n                        <div className=\"total-row\" data-field=\"subtotal\">\n                          <span>SUBTOTAL:</span>\n                          <span className=\"calculated-field\">$0.00</span>\n                        </div>\n                        <div className=\"total-row\" data-field=\"tax\">\n                          <span>TAX:</span>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                        </div>\n                        <div className=\"total-row\" data-field=\"shipping\">\n                          <span>SHIPPING:</span>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                        </div>\n                        <div className=\"total-row\" data-field=\"other\">\n                          <span>OTHER:</span>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                        </div>\n                        <div className=\"total-row total-final\" data-field=\"total\">\n                          <span>TOTAL:</span>\n                          <span className=\"calculated-field total-field\">$0.00</span>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }\n                return null;\n              })}\n            </div>\n          </SortableContext>\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <div className=\"contact-content\">\n              <strong>Contact Information:</strong>\n              <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"button-section\">\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'}\n            </button>\n            <button className=\"btn\" onClick={handleAIFill}>\n              🤖 AI Fill\n            </button>\n            <button className=\"btn export-btn\" onClick={exportToXML}>\n              📄 Generate XML\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                📝 Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  🗑️ Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change) => (\n                  <div key={change.id} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">→</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* XML Output Modal */}\n          {showXMLModal && (\n            <div className=\"xml-modal-overlay\" onClick={closeXMLModal}>\n              <div className=\"xml-modal\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"xml-modal-header\">\n                  <h3>📄 Generated XML Output</h3>\n                  <button className=\"xml-modal-close\" onClick={closeXMLModal}>×</button>\n                </div>\n                <div className=\"xml-modal-content\">\n                  <div className=\"xml-output-container\">\n                    <pre className=\"xml-code\">{xmlOutput}</pre>\n                  </div>\n                </div>\n                <div className=\"xml-modal-actions\">\n                  <button className=\"btn copy-btn\" onClick={copyXMLToClipboard}>\n                    📋 Copy XML\n                  </button>\n                  <button className=\"btn download-btn\" onClick={downloadXML}>\n                    📥 Download XML\n                  </button>\n                  <button className=\"btn close-btn\" onClick={closeXMLModal}>\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n\n\n\n\n        </div>\n      </div>\n      </DndContext>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}