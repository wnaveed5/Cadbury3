{"ast":null,"code":"var _jsxFileName = \"/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\n\n// Import custom hooks\nimport { useDragAndDropSensors, useCompanyFieldsDragEnd, usePurchaseOrderFieldsDragEnd, useVendorFieldsDragEnd, useShipToFieldsDragEnd } from './hooks/useDragAndDrop';\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\n\n// Main Purchase Order Form Component\n\n// Main Purchase Order Form Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PurchaseOrderForm() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n\n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([{\n    id: 'company-name',\n    label: 'Company Name:',\n    placeholder: 'Enter company name',\n    value: 'Acme Corporation'\n  }, {\n    id: 'company-address',\n    label: 'Street Address:',\n    placeholder: 'Enter street address',\n    value: '123 Business Street'\n  }, {\n    id: 'company-city-state',\n    label: 'City, ST ZIP:',\n    placeholder: 'City, State ZIP',\n    value: 'New York, NY 10001'\n  }, {\n    id: 'company-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: '(212) 555-0123'\n  }, {\n    id: 'company-fax',\n    label: 'Fax:',\n    placeholder: '(555) 123-4567',\n    value: '(212) 555-0124'\n  }, {\n    id: 'company-website',\n    label: 'Website:',\n    placeholder: 'www.example.com',\n    value: 'www.acmecorp.com'\n  }]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([{\n    id: 'po-title',\n    label: 'Purchase Order',\n    placeholder: '',\n    isTitle: true,\n    value: 'Purchase Order'\n  }, {\n    id: 'po-date',\n    label: 'DATE:',\n    placeholder: 'MM/DD/YYYY',\n    value: '12/15/2024'\n  }, {\n    id: 'po-number',\n    label: 'PO #:',\n    placeholder: 'PO#123456',\n    value: 'PO#2024-001'\n  }]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([{\n    id: 'vendor-company',\n    label: 'Company:',\n    placeholder: 'Vendor name',\n    value: 'Global Supplies Inc.'\n  }, {\n    id: 'vendor-contact',\n    label: 'Contact:',\n    placeholder: 'Contact person',\n    value: 'John Smith'\n  }, {\n    id: 'vendor-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: '456 Vendor Avenue'\n  }, {\n    id: 'vendor-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: 'Los Angeles, CA 90210'\n  }, {\n    id: 'vendor-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: '(310) 555-9876'\n  }]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([{\n    id: 'ship-to-name',\n    label: 'Name:',\n    placeholder: 'Contact name',\n    value: 'Sarah Johnson'\n  }, {\n    id: 'ship-to-company',\n    label: 'Company:',\n    placeholder: 'Shipping company',\n    value: 'Acme Corporation'\n  }, {\n    id: 'ship-to-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: '123 Business Street'\n  }, {\n    id: 'ship-to-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: 'New York, NY 10001'\n  }, {\n    id: 'ship-to-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: '(212) 555-0123'\n  }]);\n\n  // Update XML form data whenever any field changes\n  useEffect(() => {\n    var _companyFields$find, _companyFields$find2, _companyFields$find3, _companyFields$find4, _companyFields$find5, _companyFields$find6, _purchaseOrderFields$, _purchaseOrderFields$2, _vendorFields$find, _vendorFields$find2, _vendorFields$find3, _vendorFields$find4, _vendorFields$find5, _shipToFields$find, _shipToFields$find2, _shipToFields$find3, _shipToFields$find4, _shipToFields$find5;\n    const newFormData = {\n      companyName: ((_companyFields$find = companyFields.find(f => f.id === 'company-name')) === null || _companyFields$find === void 0 ? void 0 : _companyFields$find.value) || 'Your Company Name',\n      companyAddress: ((_companyFields$find2 = companyFields.find(f => f.id === 'company-address')) === null || _companyFields$find2 === void 0 ? void 0 : _companyFields$find2.value) || 'Your Company Address',\n      companyCityState: ((_companyFields$find3 = companyFields.find(f => f.id === 'company-city-state')) === null || _companyFields$find3 === void 0 ? void 0 : _companyFields$find3.value) || 'City, State ZIP',\n      companyPhone: ((_companyFields$find4 = companyFields.find(f => f.id === 'company-phone')) === null || _companyFields$find4 === void 0 ? void 0 : _companyFields$find4.value) || 'Your Company Phone',\n      companyFax: ((_companyFields$find5 = companyFields.find(f => f.id === 'company-fax')) === null || _companyFields$find5 === void 0 ? void 0 : _companyFields$find5.value) || 'Your Company Fax',\n      companyWebsite: ((_companyFields$find6 = companyFields.find(f => f.id === 'company-website')) === null || _companyFields$find6 === void 0 ? void 0 : _companyFields$find6.value) || 'Your Company Website',\n      poNumber: ((_purchaseOrderFields$ = purchaseOrderFields.find(f => f.id === 'po-number')) === null || _purchaseOrderFields$ === void 0 ? void 0 : _purchaseOrderFields$.value) || 'PO-001',\n      poDate: ((_purchaseOrderFields$2 = purchaseOrderFields.find(f => f.id === 'po-date')) === null || _purchaseOrderFields$2 === void 0 ? void 0 : _purchaseOrderFields$2.value) || new Date().toLocaleDateString(),\n      vendorCompany: ((_vendorFields$find = vendorFields.find(f => f.id === 'vendor-company')) === null || _vendorFields$find === void 0 ? void 0 : _vendorFields$find.value) || 'Vendor Company',\n      vendorContact: ((_vendorFields$find2 = vendorFields.find(f => f.id === 'vendor-contact')) === null || _vendorFields$find2 === void 0 ? void 0 : _vendorFields$find2.value) || 'Vendor Contact',\n      vendorAddress: ((_vendorFields$find3 = vendorFields.find(f => f.id === 'vendor-address')) === null || _vendorFields$find3 === void 0 ? void 0 : _vendorFields$find3.value) || 'Vendor Address',\n      vendorCityState: ((_vendorFields$find4 = vendorFields.find(f => f.id === 'vendor-city-state')) === null || _vendorFields$find4 === void 0 ? void 0 : _vendorFields$find4.value) || 'City, ST ZIP',\n      vendorPhone: ((_vendorFields$find5 = vendorFields.find(f => f.id === 'vendor-phone')) === null || _vendorFields$find5 === void 0 ? void 0 : _vendorFields$find5.value) || 'Vendor Phone',\n      shipToName: ((_shipToFields$find = shipToFields.find(f => f.id === 'ship-to-name')) === null || _shipToFields$find === void 0 ? void 0 : _shipToFields$find.value) || 'Ship To Name',\n      shipToCompany: ((_shipToFields$find2 = shipToFields.find(f => f.id === 'ship-to-company')) === null || _shipToFields$find2 === void 0 ? void 0 : _shipToFields$find2.value) || 'Ship To Company',\n      shipToAddress: ((_shipToFields$find3 = shipToFields.find(f => f.id === 'ship-to-address')) === null || _shipToFields$find3 === void 0 ? void 0 : _shipToFields$find3.value) || 'Ship To Address',\n      shipToCityState: ((_shipToFields$find4 = shipToFields.find(f => f.id === 'ship-to-city-state')) === null || _shipToFields$find4 === void 0 ? void 0 : _shipToFields$find4.value) || 'City, ST ZIP',\n      shipToPhone: ((_shipToFields$find5 = shipToFields.find(f => f.id === 'ship-to-phone')) === null || _shipToFields$find5 === void 0 ? void 0 : _shipToFields$find5.value) || 'Ship To Phone',\n      requisitioner: 'Requisitioner Name',\n      shipVia: 'Standard Shipping',\n      fob: 'FOB Origin',\n      shippingTerms: 'Net 30',\n      comments: 'No special instructions',\n      subtotal: '$0.00',\n      tax: '$0.00',\n      shipping: '$0.00',\n      other: '$0.00',\n      total: '$0.00',\n      contactInfo: 'Contact information here'\n    };\n    setXmlFormData(newFormData);\n    console.log('🔄 XML form data updated:', newFormData);\n\n    // Generate live XML preview\n    generateLiveXMLPreview();\n  }, [companyFields, purchaseOrderFields, vendorFields, shipToFields]);\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n\n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = newField => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    logChangeWithXMLTracking('field-add', newField.id, '', newField.label, 'company');\n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = fieldId => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n\n      // Show notification about XML structure change\n      showNotification(`🗑️ Removed company field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING AND HTML PREVIEW\n  // ============================================================================\n\n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n\n  // State for XML display\n\n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChangeWithXMLTracking('label-change', fieldId, oldLabel, newLabel, 'company');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChangeWithXMLTracking('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n  // Function to generate live HTML preview\n  const generateLiveHTMLPreview = () => {\n    return generateHTMLMirror(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n  };\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // Enhanced HTML export with timestamp\n  const handleExportToHTML = () => {\n    const htmlContent = generateHTMLMirror(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n    const blob = new Blob([htmlContent], {\n      type: 'text/html'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.html`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    setLastExportTime(new Date().toISOString());\n    console.log('📄 HTML exported successfully!');\n  };\n\n  // XML export to clipboard\n  const handleExportToXML = () => {\n    // Generate XML content based on current form state\n    const xmlContent = generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n\n    // Show notification about XML generation\n    showNotification('📋 XML generated with current form structure!', 'success');\n    navigator.clipboard.writeText(xmlContent).then(() => {\n      console.log('📋 XML copied to clipboard!');\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(err => {\n      console.error('Failed to copy XML:', err);\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = xmlContent;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      console.log('📋 XML copied to clipboard (fallback method)!');\n      showNotification('📋 XML copied to clipboard!', 'success');\n    });\n  };\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = event => {\n    _s();\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Company fields reordered');\n      // MANUALLY TRIGGER XML UPDATE after field reorder\n      setTimeout(() => {\n        console.log('🔄 Manually triggering XML update after company field reorder...');\n        updateXMLContent();\n      }, 100);\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n\n  // Function to log a summary of all field states\n  _s(handleCompanyDragEnd, \"Z4WIFLscuzsxuDjcfj/36TQtLNg=\", false, function () {\n    return [useCompanyFieldsDragEnd];\n  });\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({\n          id: f.id,\n          label: f.label\n        }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({\n          id: f.id,\n          label: f.label,\n          isTitle: f.isTitle\n        }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = newField => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = fieldId => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = event => {\n    _s2();\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Purchase order fields reordered');\n      // MANUALLY TRIGGER XML UPDATE after field reorder\n      setTimeout(() => {\n        console.log('🔄 Manually triggering XML update after PO field reorder...');\n        updateXMLContent();\n      }, 100);\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n\n  // State for section order\n  _s2(handlePurchaseOrderDragEnd, \"v6fWquKCV6fyV8vMqH2r576JyB4=\", false, function () {\n    return [usePurchaseOrderFieldsDragEnd];\n  });\n  const [sectionOrder, setSectionOrder] = useState(['section1', 'section2']);\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSectionOrder(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New section order:', newOrder);\n\n        // Swap the actual field data when sections are reordered\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n          // Section 1 moved to position 2\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle,\n              // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          console.log('🔄 Fields swapped in state!');\n\n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n\n          // Show notification about XML structure change\n          showNotification('🔄 Sections swapped! XML structure has been updated.', 'info');\n\n          // MANUALLY TRIGGER XML UPDATE after section swap\n          setTimeout(() => {\n            console.log('🔄 Manually triggering XML update after section swap...');\n            updateXMLContent();\n          }, 100);\n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n          // Section 2 moved to position 1\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle,\n              // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          console.log('🔄 Fields swapped in state!');\n\n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n\n          // Show notification about XML structure change\n          showNotification('🔄 Sections swapped! XML structure has been updated.', 'info');\n\n          // MANUALLY TRIGGER XML UPDATE after section swap\n          setTimeout(() => {\n            console.log('🔄 Manually triggering XML update after section swap...');\n            updateXMLContent();\n          }, 100);\n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        }\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n\n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle,\n        // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n\n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n\n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n\n    // Show notification about XML structure change\n    showNotification('🔄 Sections swapped! XML structure has been updated.', 'info');\n\n    // MANUALLY TRIGGER XML UPDATE after manual section swap\n    setTimeout(() => {\n      console.log('🔄 Manually triggering XML update after manual section swap...');\n      updateXMLContent();\n    }, 100);\n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n\n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      }))\n    });\n  };\n\n  // ============================================================================\n  // HTML EXPORT FUNCTION\n  // ============================================================================\n\n  // Function to export current page state to HTML (enhanced version defined above)\n\n  // ============================================================================\n  // XML CHANGE TRACKING\n  // ============================================================================\n\n  // Function to automatically update XML content when form changes\n  const updateXMLContent = () => {\n    console.log('🔄 Updating XML content with current form data...');\n    console.log('📊 Current form state:', {\n      companyFields: companyFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      })),\n      purchaseOrderFields: purchaseOrderFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      })),\n      vendorFields: vendorFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      })),\n      shipToFields: shipToFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      })),\n      sectionOrder\n    });\n    const newXMLContent = generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n    setCurrentXMLContent(newXMLContent);\n    setXmlLastUpdated(new Date().toISOString());\n\n    // Show notification about XML update\n    showNotification('🔄 XML structure automatically updated with form data!', 'success');\n    console.log('🔄 XML content automatically updated due to form changes');\n  };\n\n  // Function to check if changes affect XML structure\n  const checkXMLStructureImpact = (changeType, section, fieldId) => {\n    const xmlImpactTypes = ['label-change', 'field-add', 'field-remove', 'section-swap', 'field-reorder'];\n    if (xmlImpactTypes.includes(changeType)) {\n      // Automatically update XML content when structure changes\n      setTimeout(() => updateXMLContent(), 100); // Small delay to ensure state is updated\n\n      showNotification(`🔄 XML structure updated due to ${changeType.replace('-', ' ')} in ${section}`, 'info');\n      return true;\n    }\n    return false;\n  };\n\n  // Enhanced change logging with XML impact tracking\n  const logChangeWithXMLTracking = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section,\n      affectsXML: checkXMLStructureImpact(changeType, section, fieldId)\n    };\n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged with XML tracking:', change);\n  };\n\n  // Effect to automatically update XML content on mount and when key form data changes\n  useEffect(() => {\n    updateXMLContent();\n  }, [companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder]);\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n\n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n\n    // Capture company field values\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    console.log('📝 Field values captured and state updated!');\n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields\n    };\n  };\n\n  // Generate live XML preview\n  const generateLiveXMLPreview = () => {\n    try {\n      console.log('🚀 Generating live XML preview...');\n      const xmlContent = generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n      setCurrentXMLContent(xmlContent);\n      setXmlLastUpdated(new Date().toISOString());\n      console.log('✅ Live XML preview updated, length:', xmlContent.length);\n    } catch (error) {\n      console.error('❌ Failed to generate live XML preview:', error);\n      setCurrentXMLContent('Error generating XML: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"purchase-order-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Purchase Order Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create, edit, and manage purchase orders with ease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-indicator\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCCA Total Fields:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().totalFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83C\\uDFE2 Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().companyFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCCB Purchase Order:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().purchaseOrderFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCDD Changes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().totalChanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDD52 Last Modified:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: new Date(getFormStats().lastModified).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 11\n        }, this), lastExportTime && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCC4 Last Export:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: new Date(lastExportTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-section\",\n            children: /*#__PURE__*/_jsxDEV(DndContext, {\n              sensors: sensors,\n              collisionDetection: closestCenter,\n              onDragEnd: handleSectionDragEnd,\n              children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                items: sectionOrder,\n                strategy: verticalListSortingStrategy,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"section1\",\n                  className: \"sortable-section\",\n                  children: /*#__PURE__*/_jsxDEV(Section1CompanyInfo, {\n                    companyFields: companyFields,\n                    sensors: sensors,\n                    onCompanyDragEnd: handleCompanyDragEnd,\n                    onAddCompanyField: handleAddCompanyField,\n                    onRemoveCompanyField: handleRemoveCompanyField,\n                    onLabelChange: handleCompanyFieldLabelChange,\n                    onContentChange: handleContentChange,\n                    lastModified: lastModified\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 914,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 913,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"section2\",\n                  className: \"sortable-section\",\n                  children: /*#__PURE__*/_jsxDEV(Section2PurchaseOrder, {\n                    purchaseOrderFields: purchaseOrderFields,\n                    sensors: sensors,\n                    onPurchaseOrderDragEnd: handlePurchaseOrderDragEnd,\n                    onAddPurchaseOrderField: handleAddPurchaseOrderField,\n                    onRemovePurchaseOrderField: handleRemovePurchaseOrderField,\n                    onLabelChange: handlePurchaseOrderFieldLabelChange,\n                    onContentChange: handleContentChange,\n                    lastModified: poLastModified\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Section3VendorShipTo, {\n          vendorFields: vendorFields,\n          shipToFields: shipToFields,\n          sensors: sensors,\n          onVendorDragEnd: handleVendorDragEnd,\n          onShipToDragEnd: handleShipToDragEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shipping-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: \"REQUISITIONER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 955,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: \"SHIP VIA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 956,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: \"F.O.B.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: \"SHIPPING TERMS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shipping-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editable-field\",\n              contentEditable: \"true\",\n              \"data-placeholder\": \"Requisitioner name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shipping-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editable-field\",\n              contentEditable: \"true\",\n              \"data-placeholder\": \"Shipping method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shipping-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editable-field\",\n              contentEditable: \"true\",\n              \"data-placeholder\": \"FOB terms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shipping-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editable-field\",\n              contentEditable: \"true\",\n              \"data-placeholder\": \"Shipping terms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"itemtable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"3\",\n                children: \"Item#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"12\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"2\",\n                children: \"Qty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"3\",\n                children: \"Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 973,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"3\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 974,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [1, 2, 3, 4, 5].map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"draggable-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"Item number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 981,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"Item description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 982,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 982,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"2\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 983,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 983,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"$0.00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 984,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"$0.00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 985,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 19\n              }, this)]\n            }, row, true, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 977,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-totals-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              children: \"Comments or Special Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-content\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"Enter comments or special instructions...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"totals-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"SUBTOTAL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"calculated-field\",\n                children: \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"TAX:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1005,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"SHIPPING:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1009,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"OTHER:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1014,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1015,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row total-final\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"TOTAL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"calculated-field total-field\",\n                children: \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1019,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contact Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"editable-field\",\n            contentEditable: \"true\",\n            \"data-placeholder\": \"Enter contact information here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn export-html-btn\",\n            onClick: handleExportToHTML,\n            children: \"\\uD83D\\uDCC4 Convert to HTML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn preview-btn\",\n            onClick: togglePreviewMode,\n            children: isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 11\n        }, this), changeHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-history-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [\"\\uD83D\\uDCDD Change History (\", changeHistory.length, \" changes)\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-history-btn\",\n              onClick: clearChangeHistory,\n              children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-list\",\n            children: [changeHistory.slice(0, 10).map(change => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-time\",\n                children: new Date(change.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-type\",\n                children: change.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-field\",\n                children: change.fieldId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-old\",\n                children: change.oldValue || 'empty'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-arrow\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1058,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-new\",\n                children: change.newValue || 'empty'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 21\n              }, this)]\n            }, change.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 19\n            }, this)), changeHistory.length > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-more\",\n              children: [\"... and \", changeHistory.length - 10, \" more changes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 13\n        }, this), isPreviewMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"html-preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [\"\\uD83D\\uDD0D Live HTML Preview\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"copy-html-btn\",\n              onClick: () => {\n                navigator.clipboard.writeText(generateLiveHTMLPreview());\n                console.log('📋 HTML copied to clipboard!');\n              },\n              children: \"\\uD83D\\uDCCB Copy HTML\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1074,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-container\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              title: \"HTML Preview\",\n              srcDoc: generateLiveHTMLPreview(),\n              className: \"html-preview-frame\",\n              sandbox: \"allow-scripts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1084,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"xml-preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [\"\\uD83D\\uDCC4 Live XML Preview\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"copy-xml-btn\",\n              onClick: () => {\n                navigator.clipboard.writeText(currentXMLContent);\n                console.log('📋 XML copied to clipboard!');\n              },\n              children: \"\\uD83D\\uDCCB Copy XML\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1098,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-container\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"xml-preview-content\",\n              children: currentXMLContent || 'XML will be generated when you open the XML Generator Modal'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XMLGeneratorModal, {\n          isOpen: isXMLModalOpen,\n          onClose: () => setIsXMLModalOpen(false),\n          formData: xmlFormData,\n          onRefresh: () => {\n            // Refresh form data if needed\n            console.log('🔄 Refreshing form data...');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 853,\n    columnNumber: 5\n  }, this);\n}\n_s3(PurchaseOrderForm, \"A3pG9m6DZMc6WwPzhzeQrvaQnyk=\", false, function () {\n  return [useDragAndDropSensors, useVendorFieldsDragEnd, useShipToFieldsDragEnd];\n});\n_c = PurchaseOrderForm;\nexport default PurchaseOrderForm;\nvar _c;\n$RefreshReg$(_c, \"PurchaseOrderForm\");","map":{"version":3,"names":["React","useState","useEffect","Section1CompanyInfo","Section2PurchaseOrder","Section3VendorShipTo","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","SortableContext","verticalListSortingStrategy","jsxDEV","_jsxDEV","PurchaseOrderForm","_s3","_s","$RefreshSig$","_s2","companyFields","setCompanyFields","id","label","placeholder","value","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","purchaseOrderFields","setPurchaseOrderFields","isTitle","vendorFields","setVendorFields","shipToFields","setShipToFields","_companyFields$find","_companyFields$find2","_companyFields$find3","_companyFields$find4","_companyFields$find5","_companyFields$find6","_purchaseOrderFields$","_purchaseOrderFields$2","_vendorFields$find","_vendorFields$find2","_vendorFields$find3","_vendorFields$find4","_vendorFields$find5","_shipToFields$find","_shipToFields$find2","_shipToFields$find3","_shipToFields$find4","_shipToFields$find5","newFormData","companyName","find","f","companyAddress","companyCityState","companyPhone","companyFax","companyWebsite","poNumber","poDate","toLocaleDateString","vendorCompany","vendorContact","vendorAddress","vendorCityState","vendorPhone","shipToName","shipToCompany","shipToAddress","shipToCityState","shipToPhone","requisitioner","shipVia","fob","shippingTerms","comments","subtotal","tax","shipping","other","total","contactInfo","setXmlFormData","console","log","generateLiveXMLPreview","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","handleAddCompanyField","newField","prevFields","logChangeWithXMLTracking","handleRemoveCompanyField","fieldId","fieldToRemove","field","showNotification","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","logChange","changeType","oldValue","newValue","section","change","now","timestamp","type","prev","slice","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","map","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","generateLiveHTMLPreview","generateHTMLMirror","sectionOrder","togglePreviewMode","clearChangeHistory","handleExportToHTML","htmlContent","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","replace","body","appendChild","click","removeChild","revokeObjectURL","handleExportToXML","xmlContent","generateXMLTemplate","navigator","clipboard","writeText","then","catch","err","error","textArea","select","execCommand","message","existingNotification","querySelector","remove","notification","className","innerHTML","style","cssText","textContent","head","setTimeout","parentElement","getFormStats","totalFields","length","totalChanges","Math","max","getTime","handleCompanyDragEnd","event","active","over","updateXMLContent","logFieldSummary","company","toLocaleString","fields","purchaseOrder","handleAddPurchaseOrderField","handleRemovePurchaseOrderField","handlePurchaseOrderDragEnd","setSectionOrder","handleSectionDragEnd","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","companyFieldValues","element","getElementById","trim","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSwapSections","newXMLContent","setCurrentXMLContent","setXmlLastUpdated","checkXMLStructureImpact","xmlImpactTypes","includes","affectsXML","captureFieldValues","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","collisionDetection","onDragEnd","items","strategy","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","onVendorDragEnd","onShipToDragEnd","contentEditable","colSpan","row","onClick","title","srcDoc","sandbox","currentXMLContent","XMLGeneratorModal","isOpen","isXMLModalOpen","onClose","setIsXMLModalOpen","formData","xmlFormData","onRefresh","_c","$RefreshReg$"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\n\n\n// Main Purchase Order Form Component\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: 'Acme Corporation' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '123 Business Street' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: 'New York, NY 10001' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '(212) 555-0123' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '(212) 555-0124' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: 'www.acmecorp.com' }\n  ]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '12/15/2024' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: 'PO#2024-001' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: 'Global Supplies Inc.' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: 'John Smith' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '456 Vendor Avenue' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: 'Los Angeles, CA 90210' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '(310) 555-9876' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: 'Sarah Johnson' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: 'Acme Corporation' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '123 Business Street' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: 'New York, NY 10001' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '(212) 555-0123' }\n  ]);\n\n  // Update XML form data whenever any field changes\n  useEffect(() => {\n    const newFormData = {\n      companyName: companyFields.find(f => f.id === 'company-name')?.value || 'Your Company Name',\n      companyAddress: companyFields.find(f => f.id === 'company-address')?.value || 'Your Company Address',\n      companyCityState: companyFields.find(f => f.id === 'company-city-state')?.value || 'City, State ZIP',\n      companyPhone: companyFields.find(f => f.id === 'company-phone')?.value || 'Your Company Phone',\n      companyFax: companyFields.find(f => f.id === 'company-fax')?.value || 'Your Company Fax',\n      companyWebsite: companyFields.find(f => f.id === 'company-website')?.value || 'Your Company Website',\n      poNumber: purchaseOrderFields.find(f => f.id === 'po-number')?.value || 'PO-001',\n      poDate: purchaseOrderFields.find(f => f.id === 'po-date')?.value || new Date().toLocaleDateString(),\n      vendorCompany: vendorFields.find(f => f.id === 'vendor-company')?.value || 'Vendor Company',\n      vendorContact: vendorFields.find(f => f.id === 'vendor-contact')?.value || 'Vendor Contact',\n      vendorAddress: vendorFields.find(f => f.id === 'vendor-address')?.value || 'Vendor Address',\n      vendorCityState: vendorFields.find(f => f.id === 'vendor-city-state')?.value || 'City, ST ZIP',\n      vendorPhone: vendorFields.find(f => f.id === 'vendor-phone')?.value || 'Vendor Phone',\n      shipToName: shipToFields.find(f => f.id === 'ship-to-name')?.value || 'Ship To Name',\n      shipToCompany: shipToFields.find(f => f.id === 'ship-to-company')?.value || 'Ship To Company',\n      shipToAddress: shipToFields.find(f => f.id === 'ship-to-address')?.value || 'Ship To Address',\n      shipToCityState: shipToFields.find(f => f.id === 'ship-to-city-state')?.value || 'City, ST ZIP',\n      shipToPhone: shipToFields.find(f => f.id === 'ship-to-phone')?.value || 'Ship To Phone',\n      requisitioner: 'Requisitioner Name',\n      shipVia: 'Standard Shipping',\n      fob: 'FOB Origin',\n      shippingTerms: 'Net 30',\n      comments: 'No special instructions',\n      subtotal: '$0.00',\n      tax: '$0.00',\n      shipping: '$0.00',\n      other: '$0.00',\n      total: '$0.00',\n      contactInfo: 'Contact information here'\n    };\n    \n    setXmlFormData(newFormData);\n    console.log('🔄 XML form data updated:', newFormData);\n    \n    // Generate live XML preview\n    generateLiveXMLPreview();\n  }, [companyFields, purchaseOrderFields, vendorFields, shipToFields]);\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChangeWithXMLTracking('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      // Show notification about XML structure change\n      showNotification(`🗑️ Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING AND HTML PREVIEW\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n  // State for XML display\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChangeWithXMLTracking('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChangeWithXMLTracking('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n  // Function to generate live HTML preview\n  const generateLiveHTMLPreview = () => {\n    return generateHTMLMirror(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n  };\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // Enhanced HTML export with timestamp\n  const handleExportToHTML = () => {\n    const htmlContent = generateHTMLMirror(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n    const blob = new Blob([htmlContent], { type: 'text/html' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.html`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    \n    setLastExportTime(new Date().toISOString());\n    console.log('📄 HTML exported successfully!');\n  };\n\n  // XML export to clipboard\n  const handleExportToXML = () => {\n    // Generate XML content based on current form state\n    const xmlContent = generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n    \n    // Show notification about XML generation\n    showNotification('📋 XML generated with current form structure!', 'success');\n    \n    navigator.clipboard.writeText(xmlContent).then(() => {\n      console.log('📋 XML copied to clipboard!');\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(err => {\n      console.error('Failed to copy XML:', err);\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = xmlContent;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      console.log('📋 XML copied to clipboard (fallback method)!');\n      showNotification('📋 XML copied to clipboard!', 'success');\n    });\n  };\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Company fields reordered');\n      // MANUALLY TRIGGER XML UPDATE after field reorder\n      setTimeout(() => {\n        console.log('🔄 Manually triggering XML update after company field reorder...');\n        updateXMLContent();\n      }, 100);\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Purchase order fields reordered');\n      // MANUALLY TRIGGER XML UPDATE after field reorder\n      setTimeout(() => {\n        console.log('🔄 Manually triggering XML update after PO field reorder...');\n        updateXMLContent();\n      }, 100);\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for section order\n  const [sectionOrder, setSectionOrder] = useState(['section1', 'section2']);\n  \n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', { active: active.id, over: over.id });\n      \n      setSectionOrder(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New section order:', newOrder);\n        \n        // Swap the actual field data when sections are reordered\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n          \n          // Section 1 moved to position 2\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle, // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n          \n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          \n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          \n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          \n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          \n          console.log('🔄 Fields swapped in state!');\n          \n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          \n          // Show notification about XML structure change\n          showNotification('🔄 Sections swapped! XML structure has been updated.', 'info');\n          \n          // MANUALLY TRIGGER XML UPDATE after section swap\n          setTimeout(() => {\n            console.log('🔄 Manually triggering XML update after section swap...');\n            updateXMLContent();\n          }, 100);\n          \n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n          \n          // Section 2 moved to position 1\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle, // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n          \n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          \n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          \n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          \n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          \n          console.log('🔄 Fields swapped in state!');\n          \n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          \n          // Show notification about XML structure change\n          showNotification('🔄 Sections swapped! XML structure has been updated.', 'info');\n          \n          // MANUALLY TRIGGER XML UPDATE after section swap\n          setTimeout(() => {\n            console.log('🔄 Manually triggering XML update after section swap...');\n            updateXMLContent();\n          }, 100);\n          \n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        }\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n    // Show notification about XML structure change\n    showNotification('🔄 Sections swapped! XML structure has been updated.', 'info');\n    \n    // MANUALLY TRIGGER XML UPDATE after manual section swap\n    setTimeout(() => {\n      console.log('🔄 Manually triggering XML update after manual section swap...');\n      updateXMLContent();\n    }, 100);\n    \n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n  };\n\n  // ============================================================================\n  // HTML EXPORT FUNCTION\n  // ============================================================================\n  \n  // Function to export current page state to HTML (enhanced version defined above)\n  \n  // ============================================================================\n  // XML CHANGE TRACKING\n  // ============================================================================\n  \n  // Function to automatically update XML content when form changes\n  const updateXMLContent = () => {\n    console.log('🔄 Updating XML content with current form data...');\n    console.log('📊 Current form state:', {\n      companyFields: companyFields.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      purchaseOrderFields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      vendorFields: vendorFields.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      shipToFields: shipToFields.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      sectionOrder\n    });\n    \n    const newXMLContent = generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n    setCurrentXMLContent(newXMLContent);\n    setXmlLastUpdated(new Date().toISOString());\n    \n    // Show notification about XML update\n    showNotification('🔄 XML structure automatically updated with form data!', 'success');\n    \n    console.log('🔄 XML content automatically updated due to form changes');\n  };\n  \n  // Function to check if changes affect XML structure\n  const checkXMLStructureImpact = (changeType, section, fieldId) => {\n    const xmlImpactTypes = ['label-change', 'field-add', 'field-remove', 'section-swap', 'field-reorder'];\n    \n    if (xmlImpactTypes.includes(changeType)) {\n      // Automatically update XML content when structure changes\n      setTimeout(() => updateXMLContent(), 100); // Small delay to ensure state is updated\n      \n      showNotification(`🔄 XML structure updated due to ${changeType.replace('-', ' ')} in ${section}`, 'info');\n      return true;\n    }\n    return false;\n  };\n  \n  // Enhanced change logging with XML impact tracking\n  const logChangeWithXMLTracking = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section,\n      affectsXML: checkXMLStructureImpact(changeType, section, fieldId)\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged with XML tracking:', change);\n  };\n\n  // Effect to automatically update XML content on mount and when key form data changes\n  useEffect(() => {\n    updateXMLContent();\n  }, [companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder]);\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n    \n    // Capture company field values\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    \n    console.log('📝 Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields\n    };\n  };\n\n  // Generate live XML preview\n  const generateLiveXMLPreview = () => {\n    try {\n      console.log('🚀 Generating live XML preview...');\n      const xmlContent = generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n      setCurrentXMLContent(xmlContent);\n      setXmlLastUpdated(new Date().toISOString());\n      console.log('✅ Live XML preview updated, length:', xmlContent.length);\n    } catch (error) {\n      console.error('❌ Failed to generate live XML preview:', error);\n      setCurrentXMLContent('Error generating XML: ' + error.message);\n    }\n  };\n\n  return (\n    <div className=\"purchase-order-container\">\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n      </header>\n\n      {/* Real-time Status Indicator */}\n      <div className=\"status-indicator\">\n        <div className=\"status-grid\">\n          <div className=\"status-item\">\n            <span className=\"status-label\">📊 Total Fields:</span>\n            <span className=\"status-value\">{getFormStats().totalFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">🏢 Company:</span>\n            <span className=\"status-value\">{getFormStats().companyFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">📋 Purchase Order:</span>\n            <span className=\"status-value\">{getFormStats().purchaseOrderFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">📝 Changes:</span>\n            <span className=\"status-value\">{getFormStats().totalChanges}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">🕒 Last Modified:</span>\n            <span className=\"status-value\">\n              {new Date(getFormStats().lastModified).toLocaleTimeString()}\n            </span>\n          </div>\n          {lastExportTime && (\n            <div className=\"status-item\">\n              <span className=\"status-label\">📄 Last Export:</span>\n              <span className=\"status-value\">\n                {new Date(lastExportTime).toLocaleTimeString()}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section\">\n              {/* Section-level Drag and Drop */}\n              <DndContext \n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragEnd={handleSectionDragEnd}\n              >\n                <SortableContext \n                  items={sectionOrder}\n                  strategy={verticalListSortingStrategy}\n                >\n                  {/* Section 1: Company Info */}\n                  <div id=\"section1\" className=\"sortable-section\">\n                    <Section1CompanyInfo \n                      companyFields={companyFields}\n                      sensors={sensors}\n                      onCompanyDragEnd={handleCompanyDragEnd}\n                      onAddCompanyField={handleAddCompanyField}\n                      onRemoveCompanyField={handleRemoveCompanyField}\n                      onLabelChange={handleCompanyFieldLabelChange}\n                      onContentChange={handleContentChange}\n                      lastModified={lastModified}\n                    />\n                  </div>\n                  \n                  {/* Section 2: Purchase Order */}\n                  <div id=\"section2\" className=\"sortable-section\">\n                    <Section2PurchaseOrder \n                      purchaseOrderFields={purchaseOrderFields}\n                      sensors={sensors}\n                      onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                      onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                      onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                      onLabelChange={handlePurchaseOrderFieldLabelChange}\n                      onContentChange={handleContentChange}\n                      lastModified={poLastModified}\n                    />\n                  </div>\n                </SortableContext>\n              </DndContext>\n            </div>\n          </div>\n\n          {/* Section 3: Vendor and Ship To */}\n          <Section3VendorShipTo \n            vendorFields={vendorFields}\n            shipToFields={shipToFields}\n            sensors={sensors}\n            onVendorDragEnd={handleVendorDragEnd}\n            onShipToDragEnd={handleShipToDragEnd}\n          />\n\n          {/* Shipping Details */}\n          <div className=\"shipping-details\">\n            <div className=\"section-header\">REQUISITIONER</div>\n            <div className=\"section-header\">SHIP VIA</div>\n            <div className=\"section-header\">F.O.B.</div>\n            <div className=\"section-header\">SHIPPING TERMS</div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Requisitioner name\" /></div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping method\" /></div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"FOB terms\" /></div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping terms\" /></div>\n          </div>\n\n          {/* Items Table */}\n          <table className=\"itemtable\">\n            <thead>\n              <tr>\n                <th></th>\n                <th colSpan=\"3\">Item#</th>\n                <th colSpan=\"12\">Description</th>\n                <th colSpan=\"2\">Qty</th>\n                <th colSpan=\"3\">Rate</th>\n                <th colSpan=\"3\">Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              {[1, 2, 3, 4, 5].map((row) => (\n                <tr key={row} className=\"draggable-row\">\n                  <td></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Item number\" /></td>\n                  <td colSpan=\"12\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Item description\" /></td>\n                  <td colSpan=\"2\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Qty\" /></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" /></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" /></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          {/* Comments and Totals */}\n          <div className=\"comments-totals-section\">\n            <div className=\"comments-section\">\n              <div className=\"section-header\">Comments or Special Instructions</div>\n              <div className=\"comments-content\">\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n              </div>\n            </div>\n            \n            <div className=\"totals-section\">\n              <div className=\"total-row\">\n                <span>SUBTOTAL:</span>\n                <span className=\"calculated-field\">$0.00</span>\n              </div>\n              <div className=\"total-row\">\n                <span>TAX:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row\">\n                <span>SHIPPING:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row\">\n                <span>OTHER:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row total-final\">\n                <span>TOTAL:</span>\n                <span className=\"calculated-field total-field\">$0.00</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <strong>Contact Information:</strong><br />\n            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n          </div>\n\n          {/* Convert Button */}\n          <div className=\"button-section\">\n            <button className=\"btn export-html-btn\" onClick={handleExportToHTML}>\n              📄 Convert to HTML\n            </button>\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'}\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                📝 Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  🗑️ Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change) => (\n                  <div key={change.id} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">→</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Live HTML Preview */}\n          {isPreviewMode && (\n            <div className=\"html-preview-section\">\n              <div className=\"section-header\">\n                🔍 Live HTML Preview\n                <button className=\"copy-html-btn\" onClick={() => {\n                  navigator.clipboard.writeText(generateLiveHTMLPreview());\n                  console.log('📋 HTML copied to clipboard!');\n                }}>\n                  📋 Copy HTML\n                </button>\n              </div>\n              <div className=\"preview-container\">\n                <iframe\n                  title=\"HTML Preview\"\n                  srcDoc={generateLiveHTMLPreview()}\n                  className=\"html-preview-frame\"\n                  sandbox=\"allow-scripts\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Live XML Preview */}\n          <div className=\"xml-preview-section\">\n            <div className=\"section-header\">\n              📄 Live XML Preview\n              <button className=\"copy-xml-btn\" onClick={() => {\n                navigator.clipboard.writeText(currentXMLContent);\n                console.log('📋 XML copied to clipboard!');\n              }}>\n                📋 Copy XML\n              </button>\n            </div>\n            <div className=\"preview-container\">\n              <pre className=\"xml-preview-content\">\n                {currentXMLContent || 'XML will be generated when you open the XML Generator Modal'}\n              </pre>\n            </div>\n          </div>\n\n          {/* XML Generator Modal */}\n          <XMLGeneratorModal\n            isOpen={isXMLModalOpen}\n            onClose={() => setIsXMLModalOpen(false)}\n            formData={xmlFormData}\n            onRefresh={() => {\n              // Refresh form data if needed\n              console.log('🔄 Refreshing form data...');\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}