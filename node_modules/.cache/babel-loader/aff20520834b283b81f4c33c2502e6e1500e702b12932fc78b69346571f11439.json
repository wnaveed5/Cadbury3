{"ast":null,"code":"import _objectSpread from\"/Users/waleed/Documents/GitHub/Cadbury3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./PurchaseOrderForm.css';import{generatePurchaseOrderXML}from'./templates/PurchaseOrderTemplate';// Import modular components\nimport Section1CompanyInfo from'./components/Section1CompanyInfo';import Section2PurchaseOrder from'./components/Section2PurchaseOrder';import Section3VendorShipTo from'./components/Section3VendorShipTo';// Import custom hooks\nimport{useDragAndDropSensors,useCompanyFieldsDragEnd,usePurchaseOrderFieldsDragEnd,useVendorFieldsDragEnd,useShipToFieldsDragEnd}from'./hooks/useDragAndDrop';import{DndContext,closestCenter}from'@dnd-kit/core';import{SortableContext,verticalListSortingStrategy,horizontalListSortingStrategy,useSortable}from'@dnd-kit/sortable';import{CSS}from'@dnd-kit/utilities';import{arrayMove}from'@dnd-kit/sortable';// Draggable Section Wrapper Component for Sections 5 & 6\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DraggableSectionWrapper(_ref){let{children,id,sectionNumber}=_ref;const{attributes,listeners,setNodeRef,transform,transition}=useSortable({id});const style={transform:CSS.Transform.toString(transform),transition};return/*#__PURE__*/_jsxs(\"div\",{ref:setNodeRef,style:style,className:\"sortable-section section-\".concat(sectionNumber),children:[/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({className:\"left-drag-handle\"},attributes),listeners),{},{title:\"Drag to reorder sections\",children:\"::\"})),children]});}// Sortable column header component for line items\nfunction SortableColumnHeader(_ref2){let{children,id}=_ref2;const{attributes,listeners,setNodeRef,transform,transition,isDragging}=useSortable({id});const style={transform:CSS.Transform.toString(transform),transition,cursor:'grab',userSelect:'none'};return/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style},attributes),listeners),{},{className:\"sortable-column-header \".concat(isDragging?'dragging':''),children:[children,\" ::\"]}));}// Draggable Section Header Component for Comments and Totals\nfunction DraggableSectionHeader(_ref3){let{children,id}=_ref3;const{attributes,listeners,setNodeRef,transform,transition}=useSortable({id});const style={transform:CSS.Transform.toString(transform),transition};return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:setNodeRef,style:style,className:\"section-header\"},attributes),listeners),{},{title:\"Drag to reorder sections\",children:children}));}// Main Purchase Order Form Component\nfunction PurchaseOrderForm(){// ============================================================================\n// STATE MANAGEMENT\n// ============================================================================\n// Company fields state for Section 1\nconst[companyFields,setCompanyFields]=useState([{id:'company-name',label:'Company Name:',placeholder:'Enter company name',value:''},{id:'company-address',label:'Street Address:',placeholder:'Enter street address',value:''},{id:'company-city-state',label:'City, ST ZIP:',placeholder:'City, State ZIP',value:''},{id:'company-phone',label:'Phone:',placeholder:'(555) 123-4567',value:''},{id:'company-fax',label:'Fax:',placeholder:'(555) 123-4567',value:''},{id:'company-website',label:'Website:',placeholder:'www.example.com',value:''}]);// Track last modification time for company fields\nconst[lastModified,setLastModified]=useState(new Date().toISOString());// Track last modification time for purchase order fields\nconst[poLastModified,setPoLastModified]=useState(new Date().toISOString());// Purchase Order fields state for Section 2\nconst[purchaseOrderFields,setPurchaseOrderFields]=useState([{id:'po-title',label:'Purchase Order',placeholder:'',isTitle:true,value:'Purchase Order'},{id:'po-date',label:'DATE:',placeholder:'MM/DD/YYYY',value:''},{id:'po-number',label:'PO #:',placeholder:'PO#123456',value:''}]);// Vendor fields state for Section 3\nconst[vendorFields,setVendorFields]=useState([{id:'vendor-company',label:'Company:',placeholder:'Vendor name',value:''},{id:'vendor-contact',label:'Contact:',placeholder:'Contact person',value:''},{id:'vendor-address',label:'Address:',placeholder:'Street address',value:''},{id:'vendor-city-state',label:'City/State:',placeholder:'City, ST ZIP',value:''},{id:'vendor-phone',label:'Phone:',placeholder:'(555) 123-4567',value:''}]);// Ship To fields state for Section 3\nconst[shipToFields,setShipToFields]=useState([{id:'ship-to-name',label:'Name:',placeholder:'Contact name',value:''},{id:'ship-to-company',label:'Company:',placeholder:'Shipping company',value:''},{id:'ship-to-address',label:'Address:',placeholder:'Street address',value:''},{id:'ship-to-city-state',label:'City/State:',placeholder:'City, ST ZIP',value:''},{id:'ship-to-phone',label:'Phone:',placeholder:'(555) 123-4567',value:''}]);// Totals fields state for Section 9\nconst[totalsFields,setTotalsFields]=useState([{id:'subtotal',label:'SUBTOTAL:',placeholder:'$0.00',value:'$0.00',isCalculated:true},{id:'tax',label:'TAX:',placeholder:'$0.00',value:''},{id:'shipping',label:'SHIPPING:',placeholder:'$0.00',value:''},{id:'other',label:'OTHER:',placeholder:'$0.00',value:''},{id:'total',label:'TOTAL:',placeholder:'$0.00',value:'$0.00',isCalculated:true}]);// ============================================================================\n// CUSTOM HOOKS\n// ============================================================================\nconst sensors=useDragAndDropSensors();const handleVendorDragEnd=useVendorFieldsDragEnd(setVendorFields);const handleShipToDragEnd=useShipToFieldsDragEnd(setShipToFields);// ============================================================================\n// COMPANY FIELD MANAGEMENT FUNCTIONS\n// ============================================================================\n// Helper function to update timestamp when company fields change\nconst updateCompanyFieldsTimestamp=()=>{setLastModified(new Date().toISOString());};// Add new company field\nconst handleAddCompanyField=newField=>{setCompanyFields(prevFields=>[...prevFields,newField]);updateCompanyFieldsTimestamp();logChange('field-add',newField.id,'',newField.label,'company');console.log('➕ Added new company field:',newField);};// Remove company field\nconst handleRemoveCompanyField=fieldId=>{setCompanyFields(prevFields=>{const fieldToRemove=prevFields.find(field=>field.id===fieldId);showNotification(\"\\uD83D\\uDDD1\\uFE0F Removed company field: \\\"\".concat(fieldToRemove===null||fieldToRemove===void 0?void 0:fieldToRemove.label,\"\\\"\"),'warning');console.log('🗑️ Removed company field:',fieldToRemove);return prevFields.filter(field=>field.id!==fieldId);});updateCompanyFieldsTimestamp();};// ============================================================================\n// ENHANCED CHANGE TRACKING\n// ============================================================================\n// State for tracking all changes\nconst[changeHistory,setChangeHistory]=useState([]);const[isPreviewMode,setIsPreviewMode]=useState(false);const[lastExportTime,setLastExportTime]=useState(null);// Function to log changes with timestamps\nconst logChange=(changeType,fieldId,oldValue,newValue,section)=>{const change={id:Date.now(),timestamp:new Date().toISOString(),type:changeType,fieldId,oldValue,newValue,section};setChangeHistory(prev=>[change,...prev.slice(0,49)]);// Keep last 50 changes\nconsole.log('📝 Change logged:',change);};// Enhanced field update functions with change logging\nconst handleCompanyFieldLabelChange=(fieldId,newLabel)=>{setCompanyFields(prevFields=>{const oldField=prevFields.find(field=>field.id===fieldId);const oldLabel=oldField?oldField.label:'';logChange('label-change',fieldId,oldLabel,newLabel,'company');return prevFields.map(field=>field.id===fieldId?_objectSpread(_objectSpread({},field),{},{label:newLabel}):field);});updateCompanyFieldsTimestamp();};const handlePurchaseOrderFieldLabelChange=(fieldId,newLabel)=>{setPurchaseOrderFields(prevFields=>{const oldField=prevFields.find(field=>field.id===fieldId);const oldLabel=oldField?oldField.label:'';logChange('label-change',fieldId,oldLabel,newLabel,'purchase-order');return prevFields.map(field=>field.id===fieldId?_objectSpread(_objectSpread({},field),{},{label:newLabel}):field);});updatePurchaseOrderFieldsTimestamp();};// Function to handle content changes in editable fields\nconst handleContentChange=(fieldId,newContent,section)=>{// Find the field and log the change\nlet oldValue='';let fieldType='';if(section==='company'){const field=companyFields.find(f=>f.id===fieldId);if(field){oldValue=field.value||'';fieldType=field.label;}}else if(section==='purchase-order'){const field=purchaseOrderFields.find(f=>f.id===fieldId);if(field){oldValue=field.value||'';fieldType=field.label;}}if(oldValue!==newContent){logChange('content-change',fieldId,oldValue,newContent,section);}};// Function to toggle preview mode\nconst togglePreviewMode=()=>{setIsPreviewMode(!isPreviewMode);};// Function to clear change history\nconst clearChangeHistory=()=>{setChangeHistory([]);console.log('🗑️ Change history cleared');};// ============================================================================\n// XML DISPLAY MODAL\n// ============================================================================\n// State for XML modal\nconst[showXMLModal,setShowXMLModal]=useState(false);const[xmlOutput,setXmlOutput]=useState('');// Function to display XML output in a modal\nconst displayXMLOutput=xml=>{setXmlOutput(xml);setShowXMLModal(true);};// Function to close XML modal\nconst closeXMLModal=()=>{setShowXMLModal(false);setXmlOutput('');};// Function to copy XML to clipboard\nconst copyXMLToClipboard=()=>{navigator.clipboard.writeText(xmlOutput).then(()=>{showNotification('📋 XML copied to clipboard!','success');}).catch(()=>{showNotification('❌ Failed to copy XML to clipboard','error');});};// Function to download XML file\nconst downloadXML=()=>{var _purchaseOrderFields$;const blob=new Blob([xmlOutput],{type:'application/xml'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=\"purchase-order-\".concat(((_purchaseOrderFields$=purchaseOrderFields.find(f=>f.id==='po-number'))===null||_purchaseOrderFields$===void 0?void 0:_purchaseOrderFields$.value)||'unknown',\".xml\");document.body.appendChild(a);a.click();document.body.removeChild(a);window.URL.revokeObjectURL(url);showNotification('📥 XML downloaded successfully!','success');};// ============================================================================\n// XML EXPORT FUNCTIONALITY\n// ============================================================================\n// Function to export form data as XML\nconst exportToXML=()=>{try{var _document$querySelect,_document$querySelect2,_document$querySelect3,_document$querySelect4,_document$querySelect5,_document$querySelect6,_document$querySelect7,_document$querySelect8,_document$querySelect9;console.log('📄 Starting XML generation...');// Capture current field values first\nconst capturedData=captureFieldValues();// Prepare data for XML generation\nconst exportData=_objectSpread(_objectSpread({},capturedData),{},{// Add section order information for dynamic XML generation\nsectionOrder:{sections1And2:sections1And2Order,// Use actual state for sections 1&2\nsections3And4:vendorShipToSectionOrder,// Use actual state for sections 3&4\nsections5And6:sections5And6Order,// Use actual state for sections 5&6\nsections3And4And5And6:vendorShipToAndShippingDetailsOrder,// Vendor-ShipTo and Shipping Details order\nsections8And9:commentsTotalsSectionOrder,// Use actual state for sections 8&9\nlineItemColumns:lineItemColumnOrder// Use actual state for line item columns\n},// Add line items captured from the table\nlineItems:capturedData.lineItems||[],requisitioner:((_document$querySelect=document.querySelector('.shipping-field:nth-child(1) .editable-field'))===null||_document$querySelect===void 0?void 0:_document$querySelect.textContent)||'',shipVia:((_document$querySelect2=document.querySelector('.shipping-field:nth-child(2) .editable-field'))===null||_document$querySelect2===void 0?void 0:_document$querySelect2.textContent)||'',fob:((_document$querySelect3=document.querySelector('.shipping-field:nth-child(3) .editable-field'))===null||_document$querySelect3===void 0?void 0:_document$querySelect3.textContent)||'',shippingTerms:((_document$querySelect4=document.querySelector('.shipping-field:nth-child(4) .editable-field'))===null||_document$querySelect4===void 0?void 0:_document$querySelect4.textContent)||'',subtotal:'0.00',// This would be calculated from line items\ntax:((_document$querySelect5=document.querySelector('.total-row:nth-child(2) .editable-field'))===null||_document$querySelect5===void 0?void 0:_document$querySelect5.textContent)||'0.00',shipping:((_document$querySelect6=document.querySelector('.total-row:nth-child(3) .editable-field'))===null||_document$querySelect6===void 0?void 0:_document$querySelect6.textContent)||'0.00',other:((_document$querySelect7=document.querySelector('.total-row:nth-child(4) .editable-field'))===null||_document$querySelect7===void 0?void 0:_document$querySelect7.textContent)||'0.00',total:'0.00',// This would be calculated\ncomments:((_document$querySelect8=document.querySelector('.comments-content .editable-field'))===null||_document$querySelect8===void 0?void 0:_document$querySelect8.textContent)||'',contactInfo:((_document$querySelect9=document.querySelector('.contact-section .editable-field'))===null||_document$querySelect9===void 0?void 0:_document$querySelect9.textContent)||''});console.log('📄 Export data prepared:',exportData);console.log('🔀 Section order being sent to XML:',exportData.sectionOrder);console.log('🔀 Sections 1&2 order:',exportData.sectionOrder.sections1And2);console.log('🔀 Sections 3&4 order:',exportData.sectionOrder.sections3And4);console.log('🔀 Sections 3&4 + 5&6 order:',exportData.sectionOrder.sections3And4And5And6);console.log('🔀 Line item columns order:',exportData.sectionOrder.lineItemColumns);console.log('🔀 Line items data:',exportData.lineItems);// Generate XML\nconst xml=generatePurchaseOrderXML(exportData);// Display XML in a modal instead of downloading\ndisplayXMLOutput(xml);// Update export timestamp\nsetLastExportTime(new Date().toISOString());showNotification('📄 XML generated successfully!','success');console.log('✅ XML generation completed successfully');}catch(error){console.error('❌ XML generation failed:',error);showNotification(\"\\u274C XML generation failed: \".concat(error.message),'error');}};// Show notification function\nconst showNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';// Remove any existing notifications\nconst existingNotification=document.querySelector('.notification');if(existingNotification){existingNotification.remove();}// Create notification element\nconst notification=document.createElement('div');notification.className=\"notification notification-\".concat(type);notification.innerHTML=\"\\n      <div class=\\\"notification-content\\\">\\n        <span class=\\\"notification-message\\\">\".concat(message,\"</span>\\n        <button class=\\\"notification-close\\\" onclick=\\\"this.parentElement.parentElement.remove()\\\">\\xD7</button>\\n      </div>\\n    \");// Add styles\nnotification.style.cssText=\"\\n      position: fixed;\\n      top: 20px;\\n      right: 20px;\\n      background: \".concat(type==='success'?'#28a745':type==='error'?'#dc3545':'#17a2b8',\";\\n      color: white;\\n      padding: 12px 20px;\\n      border-radius: 5px;\\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\\n      z-index: 10000;\\n      font-family: Arial, sans-serif;\\n      font-size: 14px;\\n      max-width: 300px;\\n      animation: slideIn 0.3s ease-out;\\n    \");// Add animation styles\nconst style=document.createElement('style');style.textContent=\"\\n      @keyframes slideIn {\\n        from {\\n          transform: translateX(100%);\\n          opacity: 0;\\n        }\\n        to {\\n          transform: translateX(0);\\n          opacity: 1;\\n        }\\n      }\\n      .notification-content {\\n        display: flex;\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n      .notification-close {\\n        background: none;\\n        border: none;\\n        color: white;\\n        font-size: 18px;\\n        cursor: pointer;\\n        margin-left: 10px;\\n        padding: 0;\\n        width: 20px;\\n        height: 20px;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n      }\\n      .notification-close:hover {\\n        opacity: 0.8;\\n      }\\n    \";document.head.appendChild(style);// Add to page\ndocument.body.appendChild(notification);// Auto-remove after 3 seconds\nsetTimeout(()=>{if(notification.parentElement){notification.remove();}},3000);};// Get current form statistics\nconst getFormStats=()=>{return{totalFields:companyFields.length+purchaseOrderFields.length+vendorFields.length+shipToFields.length,companyFields:companyFields.length,purchaseOrderFields:purchaseOrderFields.length,vendorFields:vendorFields.length,shipToFields:shipToFields.length,totalChanges:changeHistory.length,lastModified:Math.max(new Date(lastModified).getTime(),new Date(poLastModified).getTime())};};// Handle company field drag and drop with timestamp update\nconst handleCompanyDragEnd=event=>{useCompanyFieldsDragEnd(setCompanyFields)(event);updateCompanyFieldsTimestamp();// Only log significant reordering, not every small drag\nif(event.active.id!==event.over.id){console.log('🔄 Company fields reordered');}};// ============================================================================\n// SUMMARY LOGGING FUNCTION\n// ============================================================================\n// Function to log a summary of all field states\nconst logFieldSummary=()=>{console.log('📊 FIELD SUMMARY:',{company:{total:companyFields.length,lastModified:new Date(lastModified).toLocaleString(),fields:companyFields.map(f=>({id:f.id,label:f.label}))},purchaseOrder:{total:purchaseOrderFields.length,lastModified:new Date(poLastModified).toLocaleString(),fields:purchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle}))}});};// Log summary on component mount\nReact.useEffect(()=>{logFieldSummary();},[]);// Only run once on mount\n// ============================================================================\n// PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n// ============================================================================\n// Helper function to update timestamp when purchase order fields change\nconst updatePurchaseOrderFieldsTimestamp=()=>{setPoLastModified(new Date().toISOString());};// Add new purchase order field\nconst handleAddPurchaseOrderField=newField=>{setPurchaseOrderFields(prevFields=>[...prevFields,newField]);updatePurchaseOrderFieldsTimestamp();console.log('➕ Added new purchase order field:',newField);};// Remove purchase order field\nconst handleRemovePurchaseOrderField=fieldId=>{setPurchaseOrderFields(prevFields=>{const fieldToRemove=prevFields.find(field=>field.id===fieldId);console.log('🗑️ Removed purchase order field:',fieldToRemove);return prevFields.filter(field=>field.id!==fieldId);});updatePurchaseOrderFieldsTimestamp();};// Handle purchase order field drag and drop with timestamp update\nconst handlePurchaseOrderDragEnd=event=>{usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);updatePurchaseOrderFieldsTimestamp();// Only log significant reordering, not every small drag\nif(event.active.id!==event.over.id){console.log('🔄 Purchase order fields reordered');}};// ============================================================================\n// SECTION-LEVEL DRAG AND DROP\n// ============================================================================\n// State for section order\nconst[sectionOrder,setSectionOrder]=useState(['section1','section2']);// State for vendor/ship-to section order\nconst[vendorShipToSectionOrder,setVendorShipToSectionOrder]=useState(['section3','section4']);// State for sections 1 and 2 order (Company Info and Purchase Order)\nconst[sections1And2Order,setSections1And2Order]=useState(['section1','section2']);// State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\nconst[sections5And6Order,setSections5And6Order]=useState(['section5','section6']);// State for vendor-ship-to and shipping-details sections order\nconst[vendorShipToAndShippingDetailsOrder,setVendorShipToAndShippingDetailsOrder]=useState(['sections3And4','sections5And6']);// Line item column order state\nconst[lineItemColumnOrder,setLineItemColumnOrder]=useState(['itemNumber','description','qty','rate','amount']);// Log line item column order changes\nuseEffect(()=>{console.log('🔀 Line item column order updated:',lineItemColumnOrder);},[lineItemColumnOrder]);// Comments and Totals section order state (Section 8 & 9)\nconst[commentsTotalsSectionOrder,setCommentsTotalsSectionOrder]=useState(['section8','section9']);// Function to handle section reordering\nconst handleSectionDragEnd=event=>{const{active,over}=event;console.log('🔍 DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Section swap detected!',{active:active.id,over:over.id});setSectionOrder(prevOrder=>{console.log('🔄 Previous section order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New section order:',newOrder);// Swap the actual field data when sections are reordered\nif(active.id==='section1'&&over.id==='section2'){console.log('🔄 SWAP TYPE: Section 1 → Section 2');console.log('🔄 Before swap - Company fields:',companyFields);console.log('🔄 Before swap - Purchase Order fields:',purchaseOrderFields);// Section 1 moved to position 2\nconst companyFieldValues=companyFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const purchaseOrderFieldValues=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle,// Explicitly preserve isTitle property\nvalue:element?element.textContent.trim():''});});console.log('🔍 Before swap - Purchase Order fields:',purchaseOrderFieldValues);console.log('🔍 Title field check:',purchaseOrderFieldValues.find(f=>f.isTitle));// IMPORTANT: Create new field arrays to avoid reference issues\nconst newCompanyFields=purchaseOrderFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle// Ensure isTitle is preserved\n}));const newPurchaseOrderFields=companyFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:false// Company fields should never be title\n}));console.log('🔄 About to swap fields...');console.log('🔄 New company fields (with title check):',newCompanyFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));console.log('🔄 New PO fields (with title check):',newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));setCompanyFields(newCompanyFields);setPurchaseOrderFields(newPurchaseOrderFields);console.log('🔄 Fields swapped in state!');// Update timestamps\nsetLastModified(new Date().toISOString());setPoLastModified(new Date().toISOString());showNotification('🔄 Sections swapped!','info');console.log('🔄 Sections swapped via drag & drop!');console.log('📊 New Section 1 (was Section 2):',newCompanyFields);console.log('📊 New Section 2 (was Section 1):',newPurchaseOrderFields);// CRITICAL: Update the sections1And2Order state for XML generation\nsetSections1And2Order(['section1','section2']);}else if(active.id==='section2'&&over.id==='section1'){console.log('🔄 SWAP TYPE: Section 2 → Section 1');console.log('🔄 Before swap - Company fields:',companyFields);console.log('🔄 Before swap - Purchase Order fields:',purchaseOrderFields);// Section 2 moved to position 1\nconst companyFieldValues=companyFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const purchaseOrderFieldValues=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle,// Explicitly preserve isTitle property\nvalue:element?element.textContent.trim():''});});console.log('🔍 Before swap - Purchase Order fields:',purchaseOrderFieldValues);console.log('🔍 Title field check:',purchaseOrderFieldValues.find(f=>f.isTitle));// IMPORTANT: Create new field arrays to avoid reference issues\nconst newCompanyFields=purchaseOrderFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle// Ensure isTitle is preserved\n}));const newPurchaseOrderFields=companyFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:false// Company fields should never be title\n}));console.log('🔄 About to swap fields...');console.log('🔄 New company fields (with title check):',newCompanyFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));console.log('🔄 New PO fields (with title check):',newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));setCompanyFields(newCompanyFields);setPurchaseOrderFields(newPurchaseOrderFields);console.log('🔄 Fields swapped in state!');// Update timestamps\nsetLastModified(new Date().toISOString());setPoLastModified(new Date().toISOString());showNotification('🔄 Sections swapped!','info');console.log('🔄 Sections swapped via drag & drop!');console.log('📊 New Section 1 (was Section 2):',newCompanyFields);console.log('📊 New Section 2 (was Section 1):',newPurchaseOrderFields);// CRITICAL: Update the sections1And2Order state for XML generation\nsetSections1And2Order(['section2','section1']);}return newOrder;});}else{console.log('🔍 No section swap - same position');}};// Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\nconst handleSections5And6DragEnd=event=>{const{active,over}=event;console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Sections 5&6 swap detected!',{active:active.id,over:over.id});setSections5And6Order(prevOrder=>{console.log('🔄 Previous sections 5&6 order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New sections 5&6 order:',newOrder);showNotification('🔄 Sections 5 and 6 reordered!','info');console.log('🔄 Sections 5&6 reordered via drag & drop!');console.log('📊 New section order:',newOrder);return newOrder;});}else{console.log('🔍 No sections 5&6 swap - same position');}};// Handle line item column drag end\nconst handleLineItemColumnDragEnd=event=>{const{active,over}=event;console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:',{active:active.id,over:over.id});if(active.id!==over.id){console.log('🔄 Line item column swap detected!',{active:active.id,over:over.id});setLineItemColumnOrder(items=>{const oldIndex=items.indexOf(active.id);const newIndex=items.indexOf(over.id);console.log('🔄 Previous line item column order:',items);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=arrayMove(items,oldIndex,newIndex);console.log('🔄 New line item column order:',newOrder);showNotification('🔄 Line item columns reordered!','info');return newOrder;});}else{console.log('🔍 No line item column swap - same position');}};// Handle Comments and Totals section drag end\nconst handleCommentsTotalsDragEnd=event=>{const{active,over}=event;if(active.id!==over.id){setCommentsTotalsSectionOrder(items=>{const oldIndex=items.indexOf(active.id);const newIndex=items.indexOf(over.id);return arrayMove(items,oldIndex,newIndex);});}};// Function to handle vendor/ship-to section reordering\nconst handleVendorShipToSectionDragEnd=event=>{const{active,over}=event;console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Vendor/Ship-To section swap detected!',{active:active.id,over:over.id});setVendorShipToSectionOrder(prevOrder=>{console.log('🔄 Previous vendor/ship-to order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New vendor/ship-to order:',newOrder);// The sections are already reordered by the code above, no need to swap field data\n// Just show notification that sections were reordered\nshowNotification('🔄 Vendor and Ship To sections reordered!','info');console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');console.log('📊 New section order:',newOrder);return newOrder;});}else{console.log('🔍 No vendor/ship-to swap - same position');}};// Function to handle vendor-ship-to and shipping-details sections reordering\nconst handleVendorShipToAndShippingDetailsDragEnd=event=>{const{active,over}=event;console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!',{active:active.id,over:over.id});setVendorShipToAndShippingDetailsOrder(prevOrder=>{console.log('🔄 Previous vendor-shipTo + shipping details order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New vendor-shipTo + shipping details order:',newOrder);showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!','info');console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');console.log('📊 New section order:',newOrder);return newOrder;});}else{console.log('🔍 No vendor-shipTo + shipping details swap - same position');}};// ============================================================================\n// SECTION SWAPPING FUNCTION\n// ============================================================================\n// Function to swap Section 1 and Section 2\nconst handleSwapSections=()=>{console.log('🔄 MANUAL SWAP FUNCTION CALLED');console.log('🔄 Before swap - Company fields:',companyFields);console.log('🔄 Before swap - Purchase Order fields:',purchaseOrderFields);// Store current values before swapping\nconst companyFieldValues=companyFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const purchaseOrderFieldValues=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle,// Explicitly preserve isTitle property\nvalue:element?element.textContent.trim():''});});console.log('🔍 Before swap - Purchase Order fields:',purchaseOrderFieldValues);console.log('🔍 Title field check:',purchaseOrderFieldValues.find(f=>f.isTitle));// IMPORTANT: Create new field arrays to avoid reference issues\nconst newCompanyFields=purchaseOrderFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle// Ensure isTitle is preserved\n}));const newPurchaseOrderFields=companyFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:false// Company fields should never be title\n}));console.log('🔄 About to swap fields...');console.log('🔄 New company fields (with title check):',newCompanyFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));console.log('🔄 New PO fields (with title check):',newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));// Swap the fields - keep Purchase Order section intact (title + date + po#)\nsetCompanyFields(newCompanyFields);setPurchaseOrderFields(newPurchaseOrderFields);// Update timestamps\nsetLastModified(new Date().toISOString());setPoLastModified(new Date().toISOString());showNotification('🔄 Sections swapped!','info');console.log('🔄 Sections swapped successfully!');console.log('📊 New Section 1 (was Section 2):',newCompanyFields);console.log('📊 New Section 2 (was Section 1):',newPurchaseOrderFields);// Log the swap operation\nconsole.log('🔄 Section Swap Details:',{'Section 1 → Section 2':newCompanyFields.map(f=>({id:f.id,label:f.label,value:f.value,isTitle:f.isTitle})),'Section 2 → Section 1':newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,value:f.value,isTitle:f.isTitle}))});};// Function to manually swap Vendor and Ship To sections\nconst handleSwapVendorShipTo=()=>{console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');console.log('🔄 Before swap - Vendor fields:',vendorFields);console.log('🔄 Before swap - Ship To fields:',shipToFields);// Store current values before swapping\nconst vendorFieldValues=vendorFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const shipToFieldValues=shipToFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});console.log('🔍 Before swap - Vendor field values:',vendorFieldValues);console.log('🔍 Before swap - Ship To field values:',shipToFieldValues);// Swap the fields\nsetVendorFields(shipToFieldValues);setShipToFields(vendorFieldValues);// Update section order\nsetVendorShipToSectionOrder(prevOrder=>{const newOrder=[...prevOrder].reverse();return newOrder;});showNotification('🔄 Vendor and Ship To sections swapped!','info');console.log('🔄 Vendor and Ship To sections swapped successfully!');console.log('📊 New Vendor fields (was Ship To):',shipToFieldValues);console.log('📊 New Ship To fields (was Vendor):',vendorFieldValues);// Log the swap operation\nconsole.log('🔄 Vendor/Ship-To Swap Details:',{'Vendor → Ship To':shipToFieldValues.map(f=>({id:f.id,label:f.label,value:f.value})),'Ship To → Vendor':vendorFieldValues.map(f=>({id:f.id,label:f.label,value:f.value}))});};// ============================================================================\n// FIELD VALUE CAPTURE\n// ============================================================================\n// Function to capture current field values from the DOM\nconst captureFieldValues=()=>{console.log('📝 Capturing field values from DOM...');// Capture company field values\nconst updatedCompanyFields=companyFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Company field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture purchase order field values\nconst updatedPurchaseOrderFields=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD PO field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture vendor field values\nconst updatedVendorFields=vendorFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Vendor field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture ship-to field values\nconst updatedShipToFields=shipToFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Ship-to field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture line item values from the table\nconst capturedLineItems=[];for(let rowIndex=0;rowIndex<5;rowIndex++){const rowData={};lineItemColumnOrder.forEach(columnId=>{const cellSelector=\"tr:nth-child(\".concat(rowIndex+1,\") td[data-column=\\\"\").concat(columnId,\"\\\"] .editable-field\");const cell=document.querySelector(\".itemtable tbody \".concat(cellSelector));const value=cell?cell.textContent.trim():'';rowData[columnId]=value;});capturedLineItems.push(rowData);}console.log('📝 Line items captured:',capturedLineItems);// Capture totals field values using the new state structure\nconst updatedTotalsFields=totalsFields.map(field=>{let value=field.value;// Default to current state value\n// For editable fields, try to get from DOM\nif(!field.isCalculated){const selector=\".totals-section .total-row[data-field=\\\"\".concat(field.id,\"\\\"] .editable-field\");const element=document.querySelector(selector);if(element){value=element.textContent.trim();}}console.log(\"\\uD83D\\uDCDD Totals field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Update state with captured values\nsetCompanyFields(updatedCompanyFields);setPurchaseOrderFields(updatedPurchaseOrderFields);setVendorFields(updatedVendorFields);setShipToFields(updatedShipToFields);setTotalsFields(updatedTotalsFields);console.log('📝 Field values captured and state updated!');return{companyFields:updatedCompanyFields,purchaseOrderFields:updatedPurchaseOrderFields,vendorFields:updatedVendorFields,shipToFields:updatedShipToFields,lineItems:capturedLineItems,totalsFields:updatedTotalsFields};};return/*#__PURE__*/_jsxs(\"div\",{className:\"purchase-order-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Purchase Order Management System\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Create, edit, and manage purchase orders with ease\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"status-indicator\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"status-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83D\\uDCCA Total Fields:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:getFormStats().totalFields})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83C\\uDFE2 Company:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:getFormStats().companyFields})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83D\\uDCCB Purchase Order:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:getFormStats().purchaseOrderFields})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83D\\uDCDD Changes:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:getFormStats().totalChanges})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83D\\uDD52 Last Modified:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:new Date(getFormStats().lastModified).toLocaleTimeString()})]}),lastExportTime&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83D\\uDCC4 Last Export:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:new Date(lastExportTime).toLocaleTimeString()})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"header-section\",children:/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragEnd:handleSectionDragEnd,children:/*#__PURE__*/_jsxs(SortableContext,{items:sectionOrder,strategy:verticalListSortingStrategy,children:[/*#__PURE__*/_jsx(\"div\",{id:\"section1\",className:\"sortable-section\",children:/*#__PURE__*/_jsx(Section1CompanyInfo,{companyFields:companyFields,sensors:sensors,onCompanyDragEnd:handleCompanyDragEnd,onAddCompanyField:handleAddCompanyField,onRemoveCompanyField:handleRemoveCompanyField,onLabelChange:handleCompanyFieldLabelChange,onContentChange:handleContentChange,lastModified:lastModified})}),/*#__PURE__*/_jsx(\"div\",{id:\"section2\",className:\"sortable-section\",children:/*#__PURE__*/_jsx(Section2PurchaseOrder,{purchaseOrderFields:purchaseOrderFields,sensors:sensors,onPurchaseOrderDragEnd:handlePurchaseOrderDragEnd,onAddPurchaseOrderField:handleAddPurchaseOrderField,onRemovePurchaseOrderField:handleRemovePurchaseOrderField,onLabelChange:handlePurchaseOrderFieldLabelChange,onContentChange:handleContentChange,lastModified:poLastModified})})]})})})}),/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragEnd:handleVendorShipToAndShippingDetailsDragEnd,children:/*#__PURE__*/_jsx(SortableContext,{items:vendorShipToAndShippingDetailsOrder,strategy:verticalListSortingStrategy,children:vendorShipToAndShippingDetailsOrder.map(sectionId=>{if(sectionId==='sections3And4'){return/*#__PURE__*/_jsx(DraggableSectionWrapper,{id:\"sections3And4\",sectionNumber:\"3&4\",children:/*#__PURE__*/_jsx(Section3VendorShipTo,{vendorFields:vendorFields,shipToFields:shipToFields,sensors:sensors,onVendorDragEnd:handleVendorDragEnd,onShipToDragEnd:handleShipToDragEnd,onVendorShipToSectionDragEnd:handleVendorShipToSectionDragEnd,vendorShipToSectionOrder:vendorShipToSectionOrder})},\"sections3And4\");}else if(sectionId==='sections5And6'){return/*#__PURE__*/_jsx(DraggableSectionWrapper,{id:\"sections5And6\",sectionNumber:\"5&6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"shipping-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"REQUISITIONER\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"SHIP VIA\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"F.O.B.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"SHIPPING TERMS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Requisitioner name\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Shipping method\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"FOB terms\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Shipping terms\"})})]})},\"sections5And6\");}return null;})})}),/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragEnd:handleLineItemColumnDragEnd,children:/*#__PURE__*/_jsx(SortableContext,{items:lineItemColumnOrder,strategy:verticalListSortingStrategy,children:/*#__PURE__*/_jsxs(\"table\",{className:\"itemtable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{}),lineItemColumnOrder.map(columnId=>{const columnConfig={itemNumber:{label:'Item#',colSpan:3},description:{label:'Description',colSpan:12},qty:{label:'Qty',colSpan:2},rate:{label:'Rate',colSpan:3},amount:{label:'Amount',colSpan:3}};const config=columnConfig[columnId];return/*#__PURE__*/_jsx(\"th\",{colSpan:config.colSpan,className:\"draggable-column-header\",children:/*#__PURE__*/_jsx(SortableColumnHeader,{id:columnId,children:config.label})},columnId);})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:[1,2,3,4,5].map(row=>/*#__PURE__*/_jsxs(\"tr\",{className:\"draggable-row\",children:[/*#__PURE__*/_jsx(\"td\",{}),lineItemColumnOrder.map(columnId=>{const columnConfig={itemNumber:{colSpan:3,placeholder:'Item number'},description:{colSpan:12,placeholder:'Item description'},qty:{colSpan:2,placeholder:'Qty'},rate:{colSpan:3,placeholder:'$0.00'},amount:{colSpan:3,placeholder:'$0.00'}};const config=columnConfig[columnId];return/*#__PURE__*/_jsx(\"td\",{colSpan:config.colSpan,\"data-column\":columnId,children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":config.placeholder})},\"\".concat(row,\"-\").concat(columnId));})]},row))})]})})}),/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragEnd:handleCommentsTotalsDragEnd,children:/*#__PURE__*/_jsx(SortableContext,{items:commentsTotalsSectionOrder,strategy:horizontalListSortingStrategy,children:/*#__PURE__*/_jsx(\"div\",{className:\"comments-totals-section\",style:{display:'flex',gap:'20px'},children:commentsTotalsSectionOrder.map(sectionId=>{if(sectionId==='section8'){return/*#__PURE__*/_jsxs(\"div\",{id:\"section8\",className:\"sortable-section comments-section\",style:{flex:1},children:[/*#__PURE__*/_jsx(DraggableSectionHeader,{id:\"section8\",children:\"Comments or Special Instructions ::\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"comments-content\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Enter comments or special instructions...\"})})})]},\"section8\");}else if(sectionId==='section9'){return/*#__PURE__*/_jsxs(\"div\",{id:\"section9\",className:\"sortable-section totals-section\",style:{flex:1},children:[/*#__PURE__*/_jsx(DraggableSectionHeader,{id:\"section9\",children:\"Totals ::\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"subtotal\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"SUBTOTAL:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"calculated-field\",children:\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"tax\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"TAX:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"shipping\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"SHIPPING:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",\"data-field\":\"other\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"OTHER:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row total-final\",\"data-field\":\"total\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"TOTAL:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"calculated-field total-field\",children:\"$0.00\"})]})]})]},\"section9\");}return null;})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"contact-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"contact-content\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Contact Information:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Enter contact information here\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-section\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn preview-btn\",onClick:togglePreviewMode,children:isPreviewMode?'👁️ Hide Preview':'👁️ Show Preview'}),/*#__PURE__*/_jsx(\"button\",{className:\"btn export-btn\",onClick:exportToXML,children:\"\\uD83D\\uDCC4 Generate XML\"})]}),changeHistory.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"change-history-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[\"\\uD83D\\uDCDD Change History (\",changeHistory.length,\" changes)\",/*#__PURE__*/_jsx(\"button\",{className:\"clear-history-btn\",onClick:clearChangeHistory,children:\"\\uD83D\\uDDD1\\uFE0F Clear\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"change-list\",children:[changeHistory.slice(0,10).map(change=>/*#__PURE__*/_jsxs(\"div\",{className:\"change-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"change-time\",children:new Date(change.timestamp).toLocaleTimeString()}),/*#__PURE__*/_jsx(\"span\",{className:\"change-type\",children:change.type}),/*#__PURE__*/_jsx(\"span\",{className:\"change-field\",children:change.fieldId}),/*#__PURE__*/_jsx(\"span\",{className:\"change-old\",children:change.oldValue||'empty'}),/*#__PURE__*/_jsx(\"span\",{className:\"change-arrow\",children:\"\\u2192\"}),/*#__PURE__*/_jsx(\"span\",{className:\"change-new\",children:change.newValue||'empty'})]},change.id)),changeHistory.length>10&&/*#__PURE__*/_jsxs(\"div\",{className:\"change-more\",children:[\"... and \",changeHistory.length-10,\" more changes\"]})]})]}),showXMLModal&&/*#__PURE__*/_jsx(\"div\",{className:\"xml-modal-overlay\",onClick:closeXMLModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"xml-modal\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"xml-modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCC4 Generated XML Output\"}),/*#__PURE__*/_jsx(\"button\",{className:\"xml-modal-close\",onClick:closeXMLModal,children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"xml-modal-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"xml-output-container\",children:/*#__PURE__*/_jsx(\"pre\",{className:\"xml-code\",children:xmlOutput})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"xml-modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn copy-btn\",onClick:copyXMLToClipboard,children:\"\\uD83D\\uDCCB Copy XML\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn download-btn\",onClick:downloadXML,children:\"\\uD83D\\uDCE5 Download XML\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn close-btn\",onClick:closeXMLModal,children:\"Close\"})]})]})})]})})]});}export default PurchaseOrderForm;","map":{"version":3,"names":["React","useState","useEffect","generatePurchaseOrderXML","Section1CompanyInfo","Section2PurchaseOrder","Section3VendorShipTo","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","SortableContext","verticalListSortingStrategy","horizontalListSortingStrategy","useSortable","CSS","arrayMove","jsx","_jsx","jsxs","_jsxs","DraggableSectionWrapper","_ref","children","id","sectionNumber","attributes","listeners","setNodeRef","transform","transition","style","Transform","toString","ref","className","concat","_objectSpread","title","SortableColumnHeader","_ref2","isDragging","cursor","userSelect","DraggableSectionHeader","_ref3","PurchaseOrderForm","companyFields","setCompanyFields","label","placeholder","value","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","purchaseOrderFields","setPurchaseOrderFields","isTitle","vendorFields","setVendorFields","shipToFields","setShipToFields","totalsFields","setTotalsFields","isCalculated","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","handleAddCompanyField","newField","prevFields","logChange","console","log","handleRemoveCompanyField","fieldId","fieldToRemove","find","field","showNotification","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","changeType","oldValue","newValue","section","change","now","timestamp","type","prev","slice","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","map","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","f","togglePreviewMode","clearChangeHistory","showXMLModal","setShowXMLModal","xmlOutput","setXmlOutput","displayXMLOutput","xml","closeXMLModal","copyXMLToClipboard","navigator","clipboard","writeText","then","catch","downloadXML","_purchaseOrderFields$","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","exportToXML","_document$querySelect","_document$querySelect2","_document$querySelect3","_document$querySelect4","_document$querySelect5","_document$querySelect6","_document$querySelect7","_document$querySelect8","_document$querySelect9","capturedData","captureFieldValues","exportData","sectionOrder","sections1And2","sections1And2Order","sections3And4","vendorShipToSectionOrder","sections5And6","sections5And6Order","sections3And4And5And6","vendorShipToAndShippingDetailsOrder","sections8And9","commentsTotalsSectionOrder","lineItemColumns","lineItemColumnOrder","lineItems","requisitioner","querySelector","textContent","shipVia","fob","shippingTerms","subtotal","tax","shipping","other","total","comments","contactInfo","error","message","arguments","length","undefined","existingNotification","remove","notification","innerHTML","cssText","head","setTimeout","parentElement","getFormStats","totalFields","totalChanges","Math","max","getTime","handleCompanyDragEnd","event","active","over","logFieldSummary","company","toLocaleString","fields","purchaseOrder","handleAddPurchaseOrderField","handleRemovePurchaseOrderField","handlePurchaseOrderDragEnd","setSectionOrder","setVendorShipToSectionOrder","setSections1And2Order","setSections5And6Order","setVendorShipToAndShippingDetailsOrder","setLineItemColumnOrder","setCommentsTotalsSectionOrder","handleSectionDragEnd","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","companyFieldValues","element","getElementById","trim","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSections5And6DragEnd","handleLineItemColumnDragEnd","items","handleCommentsTotalsDragEnd","handleVendorShipToSectionDragEnd","handleVendorShipToAndShippingDetailsDragEnd","handleSwapSections","handleSwapVendorShipTo","vendorFieldValues","shipToFieldValues","reverse","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","capturedLineItems","rowIndex","rowData","forEach","columnId","cellSelector","cell","push","updatedTotalsFields","selector","toLocaleTimeString","collisionDetection","onDragEnd","strategy","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","sectionId","onVendorDragEnd","onShipToDragEnd","onVendorShipToSectionDragEnd","contentEditable","columnConfig","itemNumber","colSpan","description","qty","rate","amount","config","row","display","gap","flex","onClick","e","stopPropagation"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n\n// Draggable Section Wrapper Component for Sections 5 & 6\nfunction DraggableSectionWrapper({ children, id, sectionNumber }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div ref={setNodeRef} style={style} className={`sortable-section section-${sectionNumber}`}>\n      {/* Left-side drag handle */}\n      <div \n        className=\"left-drag-handle\"\n        {...attributes} \n        {...listeners} \n        title=\"Drag to reorder sections\"\n      >\n        ::\n      </div>\n      {children}\n    </div>\n  );\n}\n\n// Sortable column header component for line items\nfunction SortableColumnHeader({ children, id }) {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\n  \n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      {...attributes} \n      {...listeners}\n      className={`sortable-column-header ${isDragging ? 'dragging' : ''}`}\n    >\n      {children} ::\n    </div>\n  );\n}\n\n// Draggable Section Header Component for Comments and Totals\nfunction DraggableSectionHeader({ children, id }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className=\"section-header\"\n      {...attributes} \n      {...listeners} \n      title=\"Drag to reorder sections\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: '' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: '' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: '' }\n  ]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: '' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: '' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: '' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: '' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: '' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([\n    { id: 'subtotal', label: 'SUBTOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true },\n    { id: 'tax', label: 'TAX:', placeholder: '$0.00', value: '' },\n    { id: 'shipping', label: 'SHIPPING:', placeholder: '$0.00', value: '' },\n    { id: 'other', label: 'OTHER:', placeholder: '$0.00', value: '' },\n    { id: 'total', label: 'TOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true }\n  ]);\n\n\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChange('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      showNotification(`🗑️ Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n  \n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n  \n  // Function to display XML output in a modal\n  const displayXMLOutput = (xml) => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n  \n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n  \n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n  \n  // Function to download XML file\n  const downloadXML = () => {\n    const blob = new Blob([xmlOutput], { type: 'application/xml' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${purchaseOrderFields.find(f => f.id === 'po-number')?.value || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n  \n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('📄 Starting XML generation...');\n      \n      // Capture current field values first\n      const capturedData = captureFieldValues();\n      \n      // Prepare data for XML generation\n      const exportData = {\n        ...capturedData,\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2Order, // Use actual state for sections 1&2\n          sections3And4: vendorShipToSectionOrder, // Use actual state for sections 3&4\n          sections5And6: sections5And6Order, // Use actual state for sections 5&6\n          sections3And4And5And6: vendorShipToAndShippingDetailsOrder, // Vendor-ShipTo and Shipping Details order\n          sections8And9: commentsTotalsSectionOrder, // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder // Use actual state for line item columns\n        },\n        // Add line items captured from the table\n        lineItems: capturedData.lineItems || [],\n        requisitioner: document.querySelector('.shipping-field:nth-child(1) .editable-field')?.textContent || '',\n        shipVia: document.querySelector('.shipping-field:nth-child(2) .editable-field')?.textContent || '',\n        fob: document.querySelector('.shipping-field:nth-child(3) .editable-field')?.textContent || '',\n        shippingTerms: document.querySelector('.shipping-field:nth-child(4) .editable-field')?.textContent || '',\n        subtotal: '0.00', // This would be calculated from line items\n        tax: document.querySelector('.total-row:nth-child(2) .editable-field')?.textContent || '0.00',\n        shipping: document.querySelector('.total-row:nth-child(3) .editable-field')?.textContent || '0.00',\n        other: document.querySelector('.total-row:nth-child(4) .editable-field')?.textContent || '0.00',\n        total: '0.00', // This would be calculated\n        comments: document.querySelector('.comments-content .editable-field')?.textContent || '',\n        contactInfo: document.querySelector('.contact-section .editable-field')?.textContent || ''\n      };\n      \n      console.log('📄 Export data prepared:', exportData);\n      console.log('🔀 Section order being sent to XML:', exportData.sectionOrder);\n      console.log('🔀 Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('🔀 Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('🔀 Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n      console.log('🔀 Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('🔀 Line items data:', exportData.lineItems);\n      \n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n      \n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n      \n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      \n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n      \n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n\n\n\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Company fields reordered');\n      \n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Purchase order fields reordered');\n\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for section order\n  const [sectionOrder, setSectionOrder] = useState(['section1', 'section2']);\n  \n  // State for vendor/ship-to section order\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n  \n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n  \n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5', 'section6']);\n  \n  // State for vendor-ship-to and shipping-details sections order\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['sections3And4', 'sections5And6']);\n  \n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState([\n    'itemNumber',\n    'description', \n    'qty',\n    'rate',\n    'amount'\n  ]);\n  \n  // Log line item column order changes\n  useEffect(() => {\n    console.log('🔀 Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', { active: active.id, over: over.id });\n      \n      setSectionOrder(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New section order:', newOrder);\n        \n        // Swap the actual field data when sections are reordered\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n          \n          // Section 1 moved to position 2\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle, // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n          \n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          \n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          \n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          \n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          \n          console.log('🔄 Fields swapped in state!');\n          \n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          \n          showNotification('🔄 Sections swapped!', 'info');\n          \n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n          \n          // CRITICAL: Update the sections1And2Order state for XML generation\n          setSections1And2Order(['section1', 'section2']);\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n          \n          // Section 2 moved to position 1\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle, // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n          \n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          \n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          \n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          \n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          \n          console.log('🔄 Fields swapped in state!');\n          \n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          \n          showNotification('🔄 Sections swapped!', 'info');\n          \n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n          \n          // CRITICAL: Update the sections1And2Order state for XML generation\n          setSections1And2Order(['section2', 'section1']);\n        }\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', { active: active.id, over: over.id });\n      \n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New sections 5&6 order:', newOrder);\n        \n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Line item column swap detected!', { active: active.id, over: over.id });\n      \n      setLineItemColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('🔄 Previous line item column order:', items);\n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('🔄 New line item column order:', newOrder);\n        showNotification('🔄 Line item columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No line item column swap - same position');\n    }\n  };\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor/ship-to order:', newOrder);\n        \n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('🔄 Previous vendor-shipTo + shipping details order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor-shipTo + shipping details order:', newOrder);\n        \n        showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n              showNotification('🔄 Sections swapped!', 'info');\n    \n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n    };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n    \n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n    \n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n    \n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    \n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    \n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n    \n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n    \n    // Capture company field values\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('📝 Line items captured:', capturedLineItems);\n    \n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n      \n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      \n      console.log(`📝 Totals field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    \n    console.log('📝 Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n\n\n\n  return (\n    <div className=\"purchase-order-container\">\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n      </header>\n\n      {/* Real-time Status Indicator */}\n      <div className=\"status-indicator\">\n        <div className=\"status-grid\">\n          <div className=\"status-item\">\n            <span className=\"status-label\">📊 Total Fields:</span>\n            <span className=\"status-value\">{getFormStats().totalFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">🏢 Company:</span>\n            <span className=\"status-value\">{getFormStats().companyFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">📋 Purchase Order:</span>\n            <span className=\"status-value\">{getFormStats().purchaseOrderFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">📝 Changes:</span>\n            <span className=\"status-value\">{getFormStats().totalChanges}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">🕒 Last Modified:</span>\n            <span className=\"status-value\">\n              {new Date(getFormStats().lastModified).toLocaleTimeString()}\n            </span>\n          </div>\n          {lastExportTime && (\n            <div className=\"status-item\">\n              <span className=\"status-label\">📄 Last Export:</span>\n              <span className=\"status-value\">\n                {new Date(lastExportTime).toLocaleTimeString()}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section\">\n              {/* Section-level Drag and Drop */}\n              <DndContext \n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragEnd={handleSectionDragEnd}\n              >\n                <SortableContext \n                  items={sectionOrder}\n                  strategy={verticalListSortingStrategy}\n                >\n                  {/* Section 1: Company Info */}\n                  <div id=\"section1\" className=\"sortable-section\">\n                    <Section1CompanyInfo \n                      companyFields={companyFields}\n                      sensors={sensors}\n                      onCompanyDragEnd={handleCompanyDragEnd}\n                      onAddCompanyField={handleAddCompanyField}\n                      onRemoveCompanyField={handleRemoveCompanyField}\n                      onLabelChange={handleCompanyFieldLabelChange}\n                      onContentChange={handleContentChange}\n                      lastModified={lastModified}\n                    />\n                  </div>\n                  \n                  {/* Section 2: Purchase Order */}\n                  <div id=\"section2\" className=\"sortable-section\">\n                    <Section2PurchaseOrder \n                      purchaseOrderFields={purchaseOrderFields}\n                      sensors={sensors}\n                      onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                      onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                      onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                      onLabelChange={handlePurchaseOrderFieldLabelChange}\n                      onContentChange={handleContentChange}\n                      lastModified={poLastModified}\n                    />\n                  </div>\n                </SortableContext>\n              </DndContext>\n            </div>\n          </div>\n\n          {/* Vendor-ShipTo and Shipping Details Sections (Vertically Swappable) */}\n          <DndContext \n            sensors={sensors}\n            collisionDetection={closestCenter}\n            onDragEnd={handleVendorShipToAndShippingDetailsDragEnd}\n          >\n            <SortableContext \n              items={vendorShipToAndShippingDetailsOrder}\n              strategy={verticalListSortingStrategy}\n            >\n              {vendorShipToAndShippingDetailsOrder.map(sectionId => {\n                if (sectionId === 'sections3And4') {\n                  return (\n                    <DraggableSectionWrapper key=\"sections3And4\" id=\"sections3And4\" sectionNumber=\"3&4\">\n                      {/* Vendor and Ship To Section */}\n                      <Section3VendorShipTo \n                        vendorFields={vendorFields}\n                        shipToFields={shipToFields}\n                        sensors={sensors}\n                        onVendorDragEnd={handleVendorDragEnd}\n                        onShipToDragEnd={handleShipToDragEnd}\n                        onVendorShipToSectionDragEnd={handleVendorShipToSectionDragEnd}\n                        vendorShipToSectionOrder={vendorShipToSectionOrder}\n                      />\n                    </DraggableSectionWrapper>\n                  );\n                } else if (sectionId === 'sections5And6') {\n                  return (\n                    <DraggableSectionWrapper key=\"sections5And6\" id=\"sections5And6\" sectionNumber=\"5&6\">\n                      {/* Shipping Details Section */}\n                      <div className=\"shipping-details\">\n                        <div className=\"section-header\">REQUISITIONER</div>\n                        <div className=\"section-header\">SHIP VIA</div>\n                        <div className=\"section-header\">F.O.B.</div>\n                        <div className=\"section-header\">SHIPPING TERMS</div>\n                        <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Requisitioner name\" /></div>\n                        <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping method\" /></div>\n                        <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"FOB terms\" /></div>\n                        <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping terms\" /></div>\n                      </div>\n                    </DraggableSectionWrapper>\n                  );\n                }\n                return null;\n              })}\n            </SortableContext>\n          </DndContext>\n\n          {/* Items Table */}\n          <DndContext \n            sensors={sensors} \n            collisionDetection={closestCenter} \n            onDragEnd={handleLineItemColumnDragEnd}\n          >\n            <SortableContext items={lineItemColumnOrder} strategy={verticalListSortingStrategy}>\n              <table className=\"itemtable\">\n                <thead>\n                  <tr>\n                    <th></th>\n                    {lineItemColumnOrder.map((columnId) => {\n                      const columnConfig = {\n                        itemNumber: { label: 'Item#', colSpan: 3 },\n                        description: { label: 'Description', colSpan: 12 },\n                        qty: { label: 'Qty', colSpan: 2 },\n                      rate: { label: 'Rate', colSpan: 3 },\n                        amount: { label: 'Amount', colSpan: 3 }\n                      };\n                      \n                      const config = columnConfig[columnId];\n                      return (\n                        <th key={columnId} colSpan={config.colSpan} className=\"draggable-column-header\">\n                          <SortableColumnHeader id={columnId}>\n                            {config.label}\n                          </SortableColumnHeader>\n                        </th>\n                      );\n                    })}\n                  </tr>\n                </thead>\n                <tbody>\n                  {[1, 2, 3, 4, 5].map((row) => (\n                    <tr key={row} className=\"draggable-row\">\n                      <td></td>\n                      {lineItemColumnOrder.map((columnId) => {\n                        const columnConfig = {\n                          itemNumber: { colSpan: 3, placeholder: 'Item number' },\n                          description: { colSpan: 12, placeholder: 'Item description' },\n                          qty: { colSpan: 2, placeholder: 'Qty' },\n                          rate: { colSpan: 3, placeholder: '$0.00' },\n                          amount: { colSpan: 3, placeholder: '$0.00' }\n                        };\n                        \n                        const config = columnConfig[columnId];\n                        return (\n                          <td key={`${row}-${columnId}`} colSpan={config.colSpan} data-column={columnId}>\n                            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder={config.placeholder} />\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </SortableContext>\n          </DndContext>\n\n          {/* Comments and Totals - Sections 8 & 9 */}\n          <DndContext \n            sensors={sensors} \n            collisionDetection={closestCenter} \n            onDragEnd={handleCommentsTotalsDragEnd}\n          >\n            <SortableContext items={commentsTotalsSectionOrder} strategy={horizontalListSortingStrategy}>\n              <div className=\"comments-totals-section\" style={{ display: 'flex', gap: '20px' }}>\n                {commentsTotalsSectionOrder.map((sectionId) => {\n                  if (sectionId === 'section8') {\n                    return (\n                      <div key=\"section8\" id=\"section8\" className=\"sortable-section comments-section\" style={{ flex: 1 }}>\n                        <DraggableSectionHeader id=\"section8\">\n                          Comments or Special Instructions ::\n                        </DraggableSectionHeader>\n                        <div className=\"section-content\">\n                          <div className=\"comments-content\">\n                            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  } else if (sectionId === 'section9') {\n                    return (\n                      <div key=\"section9\" id=\"section9\" className=\"sortable-section totals-section\" style={{ flex: 1 }}>\n                        <DraggableSectionHeader id=\"section9\">\n                          Totals ::\n                        </DraggableSectionHeader>\n                        <div className=\"section-content\">\n                          <div className=\"total-row\" data-field=\"subtotal\">\n                            <span>SUBTOTAL:</span>\n                            <span className=\"calculated-field\">$0.00</span>\n                          </div>\n                          <div className=\"total-row\" data-field=\"tax\">\n                            <span>TAX:</span>\n                            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                          </div>\n                          <div className=\"total-row\" data-field=\"shipping\">\n                            <span>SHIPPING:</span>\n                            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                          </div>\n                          <div className=\"total-row\" data-field=\"other\">\n                            <span>OTHER:</span>\n                            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                          </div>\n                          <div className=\"total-row total-final\" data-field=\"total\">\n                            <span>TOTAL:</span>\n                            <span className=\"calculated-field total-field\">$0.00</span>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  }\n                  return null;\n                })}\n              </div>\n            </SortableContext>\n          </DndContext>\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <div className=\"contact-content\">\n              <strong>Contact Information:</strong>\n              <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"button-section\">\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'}\n            </button>\n            <button className=\"btn export-btn\" onClick={exportToXML}>\n              📄 Generate XML\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                📝 Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  🗑️ Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change) => (\n                  <div key={change.id} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">→</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* XML Output Modal */}\n          {showXMLModal && (\n            <div className=\"xml-modal-overlay\" onClick={closeXMLModal}>\n              <div className=\"xml-modal\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"xml-modal-header\">\n                  <h3>📄 Generated XML Output</h3>\n                  <button className=\"xml-modal-close\" onClick={closeXMLModal}>×</button>\n                </div>\n                <div className=\"xml-modal-content\">\n                  <div className=\"xml-output-container\">\n                    <pre className=\"xml-code\">{xmlOutput}</pre>\n                  </div>\n                </div>\n                <div className=\"xml-modal-actions\">\n                  <button className=\"btn copy-btn\" onClick={copyXMLToClipboard}>\n                    📋 Copy XML\n                  </button>\n                  <button className=\"btn download-btn\" onClick={downloadXML}>\n                    📥 Download XML\n                  </button>\n                  <button className=\"btn close-btn\" onClick={closeXMLModal}>\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n\n\n\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}