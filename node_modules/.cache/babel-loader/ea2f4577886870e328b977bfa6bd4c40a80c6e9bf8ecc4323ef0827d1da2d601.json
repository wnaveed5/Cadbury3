{"ast":null,"code":"var _jsxFileName = \"/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s7 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport './section-styles.css';\nimport './header-colors.css';\nimport './header-color-picker.css';\nimport HeaderColorPicker from './components/HeaderColorPicker';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3Vendor from './components/Section3Vendor';\nimport Section4ShipTo from './components/Section4ShipTo';\nimport Section5Shipping from './components/Section5Shipping';\nimport AvailableFields from './components/AvailableFields';\nimport { useAIProvider } from './hooks/useAIProvider';\n\n// Import custom hooks\nimport { useDragAndDropSensors, useCompanyFieldsDragEnd, usePurchaseOrderFieldsDragEnd, useVendorFieldsDragEnd, useShipToFieldsDragEnd } from './hooks/useDragAndDrop';\nimport { DndContext, closestCenter, useDraggable, rectIntersection } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n// Draggable Section Wrapper Component for Sections\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DraggableSectionWrapper({\n  children,\n  id,\n  sectionNumber,\n  isSectionHandleDragging = false,\n  showDragHandle = true\n}) {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id,\n    data: {\n      type: 'section',\n      sectionNumber: sectionNumber\n    }\n  });\n\n  // Map section numbers to proper CSS classes\n  const getSectionClass = sectionNum => {\n    switch (sectionNum) {\n      case 1:\n        return 'section-1-company-info';\n      case 2:\n        return 'section-2-purchase-order';\n      default:\n        return `section-${sectionNum}`;\n    }\n  };\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.6 : 1,\n    zIndex: isDragging ? 1000 : 1,\n    cursor: isDragging ? 'grabbing' : 'grab',\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    border: isDragging ? '3px solid #ff6b6b' : '2px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: isDragging ? 'rgba(255, 107, 107, 0.1)' : 'transparent'\n  };\n\n  // Log the actual attributes and listeners objects\n  console.log(`üîß Detailed useSortable data for ${id}:`, {\n    attributes: attributes,\n    listeners: listeners,\n    setNodeRef: setNodeRef,\n    style: style\n  });\n\n  // Debug: Check if listeners have the right properties\n  if (listeners) {\n    console.log(`üîß Listeners for ${id}:`, {\n      hasOnMouseDown: !!listeners.onMouseDown,\n      hasOnMouseMove: !!listeners.onMouseMove,\n      hasOnMouseUp: !!listeners.onMouseUp,\n      hasOnTouchStart: !!listeners.onTouchStart,\n      hasOnTouchMove: !!listeners.onTouchMove,\n      hasOnTouchEnd: !!listeners.onTouchEnd,\n      listenerKeys: Object.keys(listeners),\n      listenerValues: Object.values(listeners).map(v => typeof v)\n    });\n  } else {\n    console.log(`‚ùå No listeners for ${id}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: `sortable-section ${getSectionClass(sectionNumber)} ${isDragging ? 'dragging' : ''}`,\n    \"data-section\": sectionNumber,\n    \"data-testid\": `draggable-section-${id}`,\n    \"data-dragging\": isDragging,\n    ...attributes,\n    ...listeners,\n    children: [showDragHandle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-drag-handle\",\n      style: {\n        position: 'absolute',\n        left: '-35px',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        cursor: 'grab',\n        color: '#3b82f6',\n        fontSize: '14px',\n        zIndex: '10',\n        opacity: isSectionHandleDragging ? '0.7' : '1',\n        background: 'white',\n        padding: '6px 8px',\n        borderRadius: '8px',\n        border: '2px solid #3b82f6',\n        boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\n        transition: 'all 0.2s',\n        userSelect: 'none',\n        fontFamily: 'monospace',\n        fontWeight: 'bold'\n      },\n      title: \"Drag to move section\",\n      children: \"\\u22EE\\u22EE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-content\",\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n// Draggable Group Wrapper Component for Vendor-Ship-To-Shipping Group\n_s(DraggableSectionWrapper, \"9J/a3p2iAf7PAeqkD/B/H2PQwgk=\", false, function () {\n  return [useSortable];\n});\n_c = DraggableSectionWrapper;\nfunction DraggableGroupWrapper({\n  children,\n  id,\n  isSectionHandleDragging = false,\n  showDragHandle = true\n}) {\n  _s2();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id,\n    data: {\n      type: 'section-group',\n      groupName: 'vendor-ship-to-shipping'\n    }\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.6 : 1,\n    zIndex: isDragging ? 1000 : 1,\n    cursor: isDragging ? 'grabbing' : 'grab',\n    position: 'relative',\n    width: '100%',\n    border: isDragging ? '3px solid #ff6b6b' : '2px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: isDragging ? 'rgba(255, 107, 107, 0.1)' : 'transparent',\n    padding: '20px',\n    margin: '20px 0'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: `sortable-section-group ${isDragging ? 'dragging' : ''}`,\n    \"data-group\": \"vendor-ship-to-shipping\",\n    \"data-testid\": `draggable-group-${id}`,\n    \"data-dragging\": isDragging,\n    ...attributes,\n    ...listeners,\n    children: [showDragHandle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-drag-handle\",\n      style: {\n        position: 'absolute',\n        left: '-45px',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        cursor: 'grab',\n        color: '#10b981',\n        fontSize: '16px',\n        zIndex: '10',\n        opacity: isSectionHandleDragging ? '0.7' : '1',\n        background: 'white',\n        padding: '8px 10px',\n        borderRadius: '8px',\n        border: '2px solid #10b981',\n        boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\n        transition: 'all 0.2s',\n        userSelect: 'none',\n        fontFamily: 'monospace',\n        fontWeight: 'bold'\n      },\n      title: \"Drag to move vendor-ship-to-shipping group\",\n      children: \"\\u26A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-content\",\n      style: {\n        position: 'relative',\n        width: '100%'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n\n// Sortable shipping column header component for shipping details\n_s2(DraggableGroupWrapper, \"9J/a3p2iAf7PAeqkD/B/H2PQwgk=\", false, function () {\n  return [useSortable];\n});\n_c2 = DraggableGroupWrapper;\nfunction SortableShippingColumnHeader({\n  children,\n  id\n}) {\n  _s3();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    className: `sortable-column-header ${isDragging ? 'dragging' : ''}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n\n// Draggable Section Header Component for Comments and Totals\n_s3(SortableShippingColumnHeader, \"wZ9LrlAdu45h+k5IBlwhyTPFbVs=\", false, function () {\n  return [useSortable];\n});\n_c3 = SortableShippingColumnHeader;\nfunction DraggableSectionHeader({\n  children,\n  id\n}) {\n  _s4();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"section-header\",\n    ...attributes,\n    ...listeners,\n    title: \"Drag to reorder sections\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n\n// Main Purchase Order Form Component\n_s4(DraggableSectionHeader, \"jv8kPLlEaSR8/o9+iCuLK6K7PFU=\", false, function () {\n  return [useSortable];\n});\n_c4 = DraggableSectionHeader;\nfunction PurchaseOrderForm() {\n  _s7();\n  var _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n\n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([{\n    id: 'company-name',\n    label: 'Company Name:',\n    placeholder: 'Enter company name',\n    value: ''\n  }, {\n    id: 'company-address',\n    label: 'Street Address:',\n    placeholder: 'Enter street address',\n    value: ''\n  }, {\n    id: 'company-city-state',\n    label: 'City, ST ZIP:',\n    placeholder: 'City, State ZIP',\n    value: ''\n  }, {\n    id: 'company-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }, {\n    id: 'company-fax',\n    label: 'Fax:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }, {\n    id: 'company-website',\n    label: 'Website:',\n    placeholder: 'www.example.com',\n    value: ''\n  }]);\n\n  // Debug: Log company fields state changes\n  useEffect(() => {\n    console.log('üîÑ Company fields state updated:', companyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n  }, [companyFields]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // ============================================================================\n  // SIDEBAR MANAGEMENT\n  // ============================================================================\n\n  // State for sidebar visibility on mobile\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n\n  // Toggle sidebar visibility\n  const toggleSidebar = () => {\n    setSidebarVisible(!sidebarVisible);\n  };\n\n  // Helper: slugify and ensure unique id for new fields\n  const generateUniqueFieldId = (baseLabel, existingIds) => {\n    const slugBase = String(baseLabel).toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');\n    let candidate = slugBase || 'field';\n    let counter = 1;\n    while (existingIds.includes(candidate)) {\n      candidate = `${slugBase}-${counter++}`;\n    }\n    return candidate;\n  };\n\n  // ============================================================================\n  // DROPPABLE ZONES\n  // ============================================================================\n\n  // Handle palette drag end to add fields to target sections\n  const handlePaletteDragEnd = event => {\n    var _active$data;\n    const {\n      active,\n      over\n    } = event;\n    console.log('üéØ Palette drag end:', {\n      active,\n      over\n    });\n    if (!(active !== null && active !== void 0 && (_active$data = active.data) !== null && _active$data !== void 0 && _active$data.current) || !(over !== null && over !== void 0 && over.id)) {\n      console.log('‚ùå Missing active data or over id');\n      return;\n    }\n    const data = active.data.current;\n    if (data.source !== 'palette') {\n      console.log('‚ùå Not a palette source:', data.source);\n      return;\n    }\n    const baseLabel = data.label;\n    console.log('üéØ Dropping on zone:', over.id);\n\n    // Check if dropping on section elements\n    if (over.id === 'section1') {\n      console.log('‚úÖ Adding to company section');\n      const existingIds = companyFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddCompanyField(newField);\n      showNotification(`‚ûï Added \"${baseLabel}\" to Company Info`, 'success');\n    } else if (over.id === 'section2') {\n      console.log('‚úÖ Adding to purchase order section');\n      const existingIds = purchaseOrderFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddPurchaseOrderField(newField);\n      showNotification(`‚ûï Added \"${baseLabel}\" to Purchase Order`, 'success');\n    } else if (over.id === 'section3') {\n      console.log('‚úÖ Adding to vendor section');\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddVendorField(newField);\n      showNotification(`‚ûï Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else if (over.id === 'section4') {\n      console.log('‚úÖ Adding to ship-to section');\n      const existingIds = shipToFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddShipToField(newField);\n      showNotification(`‚ûï Added \"${baseLabel}\" to Ship-To section`, 'success');\n    } else {\n      console.log('‚ùå Unknown drop zone:', over.id);\n    }\n  };\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([{\n    id: 'po-title',\n    label: 'Purchase Order',\n    placeholder: '',\n    isTitle: true,\n    value: 'Purchase Order'\n  }, {\n    id: 'po-date',\n    label: 'DATE:',\n    placeholder: 'MM/DD/YYYY',\n    value: ''\n  }, {\n    id: 'po-number',\n    label: 'PO #:',\n    placeholder: 'PO#123456',\n    value: ''\n  }]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([{\n    id: 'vendor-company',\n    label: 'Company:',\n    placeholder: 'Vendor name',\n    value: ''\n  }, {\n    id: 'vendor-contact',\n    label: 'Contact:',\n    placeholder: 'Contact person',\n    value: ''\n  }, {\n    id: 'vendor-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: ''\n  }, {\n    id: 'vendor-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: ''\n  }, {\n    id: 'vendor-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([{\n    id: 'ship-to-name',\n    label: 'Name:',\n    placeholder: 'Contact name',\n    value: ''\n  }, {\n    id: 'ship-to-company',\n    label: 'Company:',\n    placeholder: 'Shipping company',\n    value: ''\n  }, {\n    id: 'ship-to-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: ''\n  }, {\n    id: 'ship-to-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: ''\n  }, {\n    id: 'ship-to-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([{\n    id: 'subtotal',\n    label: 'SUBTOTAL:',\n    placeholder: '$0.00',\n    value: '$0.00',\n    isCalculated: true\n  }, {\n    id: 'tax',\n    label: 'TAX:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'shipping',\n    label: 'SHIPPING:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'other',\n    label: 'OTHER:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'total',\n    label: 'TOTAL:',\n    placeholder: '$0.00',\n    value: '$0.00',\n    isCalculated: true\n  }]);\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n\n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = newField => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    logChange('field-add', newField.id, '', newField.label, 'company');\n    console.log('‚ûï Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = fieldId => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`üóëÔ∏è Removed company field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('üóëÔ∏è Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n\n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n\n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('üìù Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'vendor') {\n      const field = vendorFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'ship-to') {\n      const field = shipToFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('üóëÔ∏è Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n\n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n\n  // Function to display XML output in a modal\n  const displayXMLOutput = xml => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n\n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n\n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('üìã XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('‚ùå Failed to copy XML to clipboard', 'error');\n    });\n  };\n\n  // Function to download XML file\n  const downloadXML = () => {\n    var _purchaseOrderFields$;\n    const blob = new Blob([xmlOutput], {\n      type: 'application/xml'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${((_purchaseOrderFields$ = purchaseOrderFields.find(f => f.id === 'po-number')) === null || _purchaseOrderFields$ === void 0 ? void 0 : _purchaseOrderFields$.value) || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('üì• XML downloaded successfully!', 'success');\n  };\n\n  // =========================================================================\n  // AI SUGGESTIONS\n  // =========================================================================\n  const {\n    getFieldSuggestions\n  } = useAIProvider();\n  const applySuggestionsToFields = (suggestionsMap, fields) => {\n    if (!Array.isArray(fields)) return fields;\n    return fields.map(f => {\n      const newVal = suggestionsMap === null || suggestionsMap === void 0 ? void 0 : suggestionsMap[f.id];\n      if (typeof newVal === 'string') {\n        return {\n          ...f,\n          value: newVal\n        };\n      }\n      return f;\n    });\n  };\n  const handleAIFill = async () => {\n    try {\n      showNotification('ü§ñ Fetching AI suggestions...', 'info');\n      const payload = {\n        context: 'purchase_order',\n        companyFields,\n        purchaseOrderFields,\n        vendorFields,\n        shipToFields,\n        shippingFields: [\n        // Include default shipping fields\n        {\n          id: 'requisitioner',\n          label: 'Requisitioner name'\n        }, {\n          id: 'shipVia',\n          label: 'Shipping method'\n        }, {\n          id: 'fob',\n          label: 'FOB terms'\n        }, {\n          id: 'shippingTerms',\n          label: 'Shipping terms'\n        },\n        // Include custom columns dynamically\n        ...shippingColumnOrder.filter(id => id.startsWith('custom-')).map(id => ({\n          id,\n          label: `Custom ${id.replace('custom-', '')}`\n        }))]\n      };\n      const {\n        suggestions\n      } = await getFieldSuggestions(payload);\n      try {\n        console.debug('üß™ AI suggestions keys:', Object.keys(suggestions || {}));\n        // Preview a few critical values to verify mapping\n        console.debug('üß™ AI preview:', {\n          company: {\n            name: suggestions === null || suggestions === void 0 ? void 0 : suggestions['company-name'],\n            phone: suggestions === null || suggestions === void 0 ? void 0 : suggestions['company-phone']\n          },\n          po: {\n            date: suggestions === null || suggestions === void 0 ? void 0 : suggestions['po-date'],\n            number: suggestions === null || suggestions === void 0 ? void 0 : suggestions['po-number']\n          },\n          shipping: {\n            requisitioner: suggestions === null || suggestions === void 0 ? void 0 : suggestions.requisitioner,\n            shipVia: suggestions === null || suggestions === void 0 ? void 0 : suggestions.shipVia\n          },\n          totals: {\n            subtotal: suggestions === null || suggestions === void 0 ? void 0 : suggestions.subtotal,\n            tax: suggestions === null || suggestions === void 0 ? void 0 : suggestions.tax,\n            total: suggestions === null || suggestions === void 0 ? void 0 : suggestions.total\n          },\n          line1: {\n            item: suggestions === null || suggestions === void 0 ? void 0 : suggestions.itemNumber1,\n            desc: suggestions === null || suggestions === void 0 ? void 0 : suggestions.description1,\n            qty: suggestions === null || suggestions === void 0 ? void 0 : suggestions.qty1,\n            rate: suggestions === null || suggestions === void 0 ? void 0 : suggestions.rate1,\n            amount: suggestions === null || suggestions === void 0 ? void 0 : suggestions.amount1\n          }\n        });\n      } catch {}\n\n      // 1) Apply to Section 1‚Äì3 states (company/po/vendor/ship-to) with mapping logs\n      setCompanyFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('üß≠ map(companyFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setPurchaseOrderFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('üß≠ map(purchaseOrderFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setVendorFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('üß≠ map(vendorFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setShipToFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('üß≠ map(shipToFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // 2) Shipping details (DOM spans)\n      const write = (el, val) => {\n        if (el && typeof val === 'string') el.textContent = val;\n      };\n      const shipSelectors = key => [`.shipping-details [data-field=\"${key}\"] .editable-field`, `.shipping-field[data-field=\"${key}\"] .editable-field`, `#shipping-${key}`, `.shipping-field-${key} .editable-field`];\n\n      // Use dynamic shipping column order instead of hardcoded array\n      const shipOrder = shippingColumnOrder;\n      shipOrder.forEach((key, idx) => {\n        let el = null,\n          used = '';\n\n        // Handle custom columns (those that start with 'custom-')\n        let suggestionKey = key;\n        if (key.startsWith('custom-')) {\n          // For custom columns, try to find a relevant suggestion or generate one\n          suggestionKey = 'customField'; // Use a generic key for AI suggestions\n        }\n        for (const sel of shipSelectors(key)) {\n          el = document.querySelector(sel);\n          if (el) {\n            used = sel;\n            break;\n          }\n        }\n        // Fallback to positional selector used in your JSX\n        if (!el) {\n          const nth = idx + 1; // 1-based\n          // Prefer :nth-of-type within container to ignore headers\n          const selA = `.shipping-details .shipping-field:nth-of-type(${nth}) .editable-field`;\n          el = document.querySelector(selA);\n          if (el) {\n            used = selA;\n          } else {\n            // Last resort: original child-based selector\n            const selB = `.shipping-field:nth-child(${nth}) .editable-field`;\n            el = document.querySelector(selB);\n            if (el) used = selB;\n          }\n        }\n\n        // Get the suggestion value, with fallback for custom columns\n        let suggestionValue = suggestions[suggestionKey];\n        if (key.startsWith('custom-') && !suggestionValue) {\n          // Generate a placeholder value for custom columns\n          suggestionValue = `[Custom ${key.replace('custom-', '')}]`;\n        }\n        write(el, suggestionValue);\n        try {\n          const count = document.querySelectorAll('.shipping-details .shipping-field').length;\n          console.debug('üß≠ map(shippingDetails):', {\n            key,\n            selector: used || '(not found)',\n            value: suggestionValue,\n            fieldsInDOM: count,\n            isCustom: key.startsWith('custom-')\n          });\n        } catch {}\n      });\n\n      // 3) Line items (first 3 rows only)\n      // Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\n      const setCell = (row, col, val) => {\n        const selector = `.itemtable tbody tr:nth-child(${row}) td[data-column=\"${col}\"] .editable-field`;\n        const cell = document.querySelector(selector);\n        if (cell && typeof val === 'string') {\n          cell.textContent = val;\n        }\n        try {\n          console.debug('üß≠ map(lineItem):', {\n            row,\n            col,\n            selector,\n            value: val\n          });\n        } catch {}\n      };\n      const li = (i, k) => suggestions === null || suggestions === void 0 ? void 0 : suggestions[`${k}${i}`];\n      for (let i = 1; i <= 3; i++) {\n        setCell(i, 'itemNumber', li(i, 'itemNumber'));\n        setCell(i, 'description', li(i, 'description'));\n        setCell(i, 'qty', li(i, 'qty'));\n        setCell(i, 'rate', li(i, 'rate'));\n        setCell(i, 'amount', li(i, 'amount'));\n      }\n\n      // 4) Totals (state + DOM)\n      setTotalsFields(prev => {\n        const map = {\n          subtotal: suggestions.subtotal,\n          tax: suggestions.tax,\n          shipping: suggestions.shipping,\n          other: suggestions.other,\n          total: suggestions.total\n        };\n        const next = prev.map(f => map[f.id] ? {\n          ...f,\n          value: map[f.id]\n        } : f);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && map[id] !== undefined) {\n              console.debug('üß≠ map(totalsFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // Write editable totals into DOM for non-calculated rows\n      const domTotals = field => document.querySelector(`.totals-section .total-row[data-field=\"${field}\"] .editable-field`);\n      ['tax', 'shipping', 'other'].forEach(key => {\n        const sel = `.totals-section .total-row[data-field=\"${key}\"] .editable-field`;\n        write(domTotals(key), suggestions[key]);\n        try {\n          console.debug('üß≠ map(totalsDOM):', {\n            key,\n            selector: sel,\n            value: suggestions[key]\n          });\n        } catch {}\n      });\n\n      // Calculated-looking spans (subtotal, total) in your layout use .calculated-field\n      const calcTotal = document.querySelector(`.totals-section .total-row[data-field=\"total\"] .total-field`);\n      const calcSub = document.querySelector(`.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`);\n      write(calcSub, suggestions.subtotal);\n      write(calcTotal, suggestions.total);\n      try {\n        console.debug('üß≠ map(totalsDOM):', {\n          key: 'subtotal',\n          selector: `.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`,\n          value: suggestions.subtotal\n        });\n        console.debug('üß≠ map(totalsDOM):', {\n          key: 'total',\n          selector: `.totals-section .total-row[data-field=\"total\"] .total-field`,\n          value: suggestions.total\n        });\n      } catch {}\n\n      // 5) Comments, Contact Info (DOM)\n      const commentsEl = document.querySelector('.comments-content .editable-field');\n      const contactEl = document.querySelector('.contact-section .editable-field');\n      write(commentsEl, suggestions.comments);\n      write(contactEl, suggestions.contactInfo);\n      try {\n        console.debug('üß≠ map(comments):', {\n          selector: '.comments-content .editable-field',\n          value: suggestions.comments\n        });\n        console.debug('üß≠ map(contactInfo):', {\n          selector: '.contact-section .editable-field',\n          value: suggestions.contactInfo\n        });\n      } catch {}\n\n      // 6) Bump timestamps\n      updateCompanyFieldsTimestamp();\n      updatePurchaseOrderFieldsTimestamp();\n      showNotification('‚úÖ AI suggestions applied', 'success');\n    } catch (e) {\n      console.error('AI fill failed:', e);\n      showNotification(`‚ùå AI fill failed: ${e.message}`, 'error');\n    }\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n\n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('üìÑ Starting XML generation...');\n\n      // Capture current field values first\n      const capturedData = captureFieldValues();\n\n      // Prepare data for XML generation\n      // Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\n      const headerSections = Array.from(document.querySelectorAll('.header-section .sortable-section'));\n      const visualSections1And2 = headerSections.map(el => el.id).filter(id => id === 'section1' || id === 'section2');\n      const sections1And2ForExport = visualSections1And2.length === 2 ? visualSections1And2 : sections1And2Order;\n\n      // Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\n      const vendorShipToSections = Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));\n      const visualSections3And4 = vendorShipToSections.map(el => el.id).filter(id => id === 'section3' || id === 'section4');\n      const sections3And4ForExport = visualSections3And4.length === 2 ? visualSections3And4 : vendorShipToSectionOrder;\n\n      // Helpers for DOM reads\n      const getText = sel => {\n        var _document$querySelect, _document$querySelect2;\n        return ((_document$querySelect = document.querySelector(sel)) === null || _document$querySelect === void 0 ? void 0 : (_document$querySelect2 = _document$querySelect.textContent) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.trim()) || '';\n      };\n\n      // Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\n      const normalizedLineItems = (capturedData.lineItems || []).map(row => ({\n        // original UI keys\n        itemNumber: row.itemNumber || '',\n        description: row.description || '',\n        qty: row.qty || row.quantity || '',\n        rate: row.rate || row.unitPrice || '',\n        amount: row.amount || row.total || '',\n        // template-expected keys\n        quantity: row.quantity || row.qty || '',\n        unitPrice: row.unitPrice || row.rate || '',\n        total: row.total || row.amount || ''\n      }));\n      const exportData = {\n        ...capturedData,\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2ForExport,\n          // Use current visual order to ensure XML matches UI\n          sections3And4: sections3And4ForExport,\n          // Use current visual order to ensure XML matches UI\n          sections5And6: sections5And6Order,\n          // Use actual state for sections 5&6\n          sections8And9: commentsTotalsSectionOrder,\n          // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder,\n          // Use actual state for line item columns\n          shippingColumns: shippingColumnOrder // Use actual state for shipping columns\n        },\n        // CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\n        fieldOrder: {\n          company: companyFieldOrder,\n          // Preserve company field order independently of section position\n          purchaseOrder: purchaseOrderFieldOrder,\n          // Preserve PO field order independently of section position\n          vendor: vendorFields.map(f => f.id),\n          // Vendor field order\n          shipTo: shipToFields.map(f => f.id) // Ship-to field order\n        },\n        // Add normalized line items (support both key schemes)\n        lineItems: normalizedLineItems,\n        // Shipping details (prefer data-field; fall back handled in XML builder too)\n        // Capture all shipping columns dynamically, including custom ones\n        ...(() => {\n          const shippingData = {};\n          shippingColumnOrder.forEach(columnId => {\n            const value = getText(`.section-5 [data-field=\"${columnId}\"] .editable-field`);\n            shippingData[columnId] = value;\n          });\n          return shippingData;\n        })(),\n        // Totals: read what the user sees\n        subtotal: getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field') || '$0.00',\n        tax: getText('.totals-section .total-row[data-field=\"tax\"] .editable-field') || '$0.00',\n        shipping: getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field') || '$0.00',\n        other: getText('.totals-section .total-row[data-field=\"other\"] .editable-field') || '$0.00',\n        total: getText('.totals-section .total-row[data-field=\"total\"] .total-field') || '$0.00',\n        comments: getText('.comments-content .editable-field'),\n        contactInfo: getText('.contact-section .editable-field')\n      };\n      console.debug('üîé Export DOM reads:', {\n        requisitioner: exportData.requisitioner,\n        shipVia: exportData.shipVia,\n        fob: exportData.fob,\n        shippingTerms: exportData.shippingTerms,\n        subtotal: exportData.subtotal,\n        tax: exportData.tax,\n        shipping: exportData.shipping,\n        other: exportData.other,\n        total: exportData.total\n      });\n      console.log('üìÑ Export data prepared:', exportData);\n      console.log('üîÄ Section order being sent to XML:', exportData.sectionOrder);\n      console.log('üîÄ Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('üîÄ Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('üîÄ Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n      console.log('üîÄ Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('üîÄ Shipping columns order:', exportData.sectionOrder.shippingColumns);\n      console.log('üîÄ Line items data:', exportData.lineItems);\n\n      // CRITICAL: Log field order information\n      console.log('üîÄ Field order being sent to XML:', exportData.fieldOrder);\n      console.log('üîÄ Company field order:', exportData.fieldOrder.company);\n      console.log('üîÄ Purchase order field order:', exportData.fieldOrder.purchaseOrder);\n      console.log('üîÄ Vendor field order:', exportData.fieldOrder.vendor);\n      console.log('üîÄ Ship-to field order:', exportData.fieldOrder.shipTo);\n\n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n\n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n\n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      showNotification('üìÑ XML generated successfully!', 'success');\n      console.log('‚úÖ XML generation completed successfully');\n    } catch (error) {\n      console.error('‚ùå XML generation failed:', error);\n      showNotification(`‚ùå XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">√ó</button>\n      </div>\n    `;\n\n    // Add to notification container\n    const container = document.getElementById('notification-container');\n    if (container) {\n      container.appendChild(notification);\n    } else {\n      // Fallback to body if container not found\n      document.body.appendChild(notification);\n    }\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = event => {\n    _s5();\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n\n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setCompanyFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        console.log('üîÑ Company field order updated:', {\n          oldIndex,\n          newIndex,\n          newOrder\n        });\n        return newOrder;\n      });\n      console.log('üîÑ Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n\n  // Function to log a summary of all field states\n  _s5(handleCompanyDragEnd, \"Z4WIFLscuzsxuDjcfj/36TQtLNg=\", false, function () {\n    return [useCompanyFieldsDragEnd];\n  });\n  const logFieldSummary = () => {\n    console.log('üìä FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({\n          id: f.id,\n          label: f.label\n        }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({\n          id: f.id,\n          label: f.label,\n          isTitle: f.isTitle\n        }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = newField => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('‚ûï Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = fieldId => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`üóëÔ∏è Removed purchase order field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('üóëÔ∏è Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // VENDOR FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Add new vendor field\n  const handleAddVendorField = newField => {\n    setVendorFields(prevFields => [...prevFields, newField]);\n    console.log('‚ûï Added new vendor field:', newField);\n    showNotification(`‚ûï Added vendor field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove vendor field\n  const handleRemoveVendorField = fieldId => {\n    setVendorFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`üóëÔ∏è Removed vendor field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('üóëÔ∏è Removed vendor field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle vendor field label changes\n  const handleVendorFieldLabelChange = (fieldId, newLabel) => {\n    setVendorFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'vendor');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n  };\n\n  // ============================================================================\n  // SHIP-TO FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Add new ship-to field\n  const handleAddShipToField = newField => {\n    setShipToFields(prevFields => [...prevFields, newField]);\n    console.log('‚ûï Added new ship-to field:', newField);\n    showNotification(`‚ûï Added ship-to field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove ship-to field\n  const handleRemoveShipToField = fieldId => {\n    setShipToFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`üóëÔ∏è Removed ship-to field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('üóëÔ∏è Removed ship-to field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle ship-to field label changes\n  const handleShipToFieldLabelChange = (fieldId, newLabel) => {\n    setShipToFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'ship-to');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = event => {\n    _s6();\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n\n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setPurchaseOrderFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        console.log('üîÑ Purchase order field order updated:', {\n          oldIndex,\n          newIndex,\n          newOrder\n        });\n        return newOrder;\n      });\n      console.log('üîÑ Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n\n  // State for vendor/ship-to section order\n  _s6(handlePurchaseOrderDragEnd, \"v6fWquKCV6fyV8vMqH2r576JyB4=\", false, function () {\n    return [usePurchaseOrderFieldsDragEnd];\n  });\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n\n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n\n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5']);\n\n  // State for vendor-ship-to and shipping-details sections order (simplified after removing section 7)\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['section5']);\n\n  // CRITICAL: Add field order state management (same pattern as section order)\n  // State for company field order (preserves drag-and-drop order independently of section position)\n  const [companyFieldOrder, setCompanyFieldOrder] = useState([]);\n\n  // State for purchase order field order (preserves drag-and-drop order independently of section position)\n  const [purchaseOrderFieldOrder, setPurchaseOrderFieldOrder] = useState([]);\n\n  // Initialize field order states with current field IDs\n  React.useEffect(() => {\n    setCompanyFieldOrder(companyFields.map(field => field.id));\n  }, [companyFields]);\n  React.useEffect(() => {\n    setPurchaseOrderFieldOrder(purchaseOrderFields.map(field => field.id));\n  }, [purchaseOrderFields]);\n\n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState(['itemNumber', 'description', 'qty', 'rate', 'amount']);\n\n  // Log line item column order changes\n  useEffect(() => {\n    console.log('üîÄ Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n\n  // Shipping column order state\n  const [shippingColumnOrder, setShippingColumnOrder] = useState(['requisitioner', 'shipVia', 'fob', 'shippingTerms']);\n\n  // Log shipping column order changes\n  useEffect(() => {\n    console.log('üö¢ Shipping column order updated:', shippingColumnOrder);\n  }, [shippingColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle drag start\n  const handleDragStart = event => {\n    var _active$data2;\n    const {\n      active\n    } = event;\n    console.log('üöÄ DRAG START:', {\n      active: active.id,\n      activeData: active === null || active === void 0 ? void 0 : (_active$data2 = active.data) === null || _active$data2 === void 0 ? void 0 : _active$data2.current,\n      timestamp: new Date().toISOString()\n    });\n\n    // Add dragging state to the dragged element\n    if (active.id === 'section1' || active.id === 'section2') {\n      const element = document.getElementById(active.id);\n      if (element) {\n        element.setAttribute('data-is-dragging', 'true');\n        console.log('‚úÖ Added dragging state to:', active.id);\n\n        // Add visual feedback\n        element.style.border = '3px solid #ff6b6b';\n        element.style.backgroundColor = 'rgba(255, 107, 107, 0.1)';\n      }\n    }\n  };\n\n  // Function to handle drag over\n  const handleDragOver = event => {\n    var _active$data3, _over$data;\n    const {\n      active,\n      over\n    } = event;\n    console.log('üéØ DRAG OVER EVENT:', {\n      active: active === null || active === void 0 ? void 0 : active.id,\n      over: over === null || over === void 0 ? void 0 : over.id,\n      activeData: active === null || active === void 0 ? void 0 : (_active$data3 = active.data) === null || _active$data3 === void 0 ? void 0 : _active$data3.current,\n      overData: over === null || over === void 0 ? void 0 : (_over$data = over.data) === null || _over$data === void 0 ? void 0 : _over$data.current,\n      timestamp: new Date().toISOString()\n    });\n\n    // Handle section reordering drag over\n    if (active.id === 'section1' || active.id === 'section2') {\n      if (over && (over.id === 'section1' || over.id === 'section2')) {\n        console.log('üéØ Section DRAG OVER:', {\n          active: active.id,\n          over: over.id,\n          timestamp: new Date().toISOString()\n        });\n\n        // Add over state to the target element\n        const targetElement = document.getElementById(over.id);\n        if (targetElement) {\n          targetElement.setAttribute('data-is-over', 'true');\n\n          // Enhanced visual feedback for section reordering\n          targetElement.style.border = '3px solid #4ecdc4';\n          targetElement.style.backgroundColor = 'rgba(78, 205, 196, 0.15)';\n          targetElement.style.transform = 'scale(1.01)';\n          targetElement.style.transition = 'all 0.2s ease-in-out';\n          targetElement.style.boxShadow = '0 6px 20px rgba(78, 205, 196, 0.3)';\n        }\n      }\n    }\n  };\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = event => {\n    var _active$data4, _over$data2;\n    const {\n      active,\n      over\n    } = event;\n    console.log('üîç SECTION DRAG DEBUG - Event received:', {\n      activeId: active === null || active === void 0 ? void 0 : active.id,\n      overId: over === null || over === void 0 ? void 0 : over.id,\n      activeData: active === null || active === void 0 ? void 0 : (_active$data4 = active.data) === null || _active$data4 === void 0 ? void 0 : _active$data4.current,\n      overData: over === null || over === void 0 ? void 0 : (_over$data2 = over.data) === null || _over$data2 === void 0 ? void 0 : _over$data2.current,\n      timestamp: new Date().toISOString()\n    });\n    if (!active || !over) {\n      console.log('‚ùå Missing active or over in section drag');\n      return;\n    }\n    if (active.id !== over.id) {\n      console.log('üîÑ Section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSections1And2Order(prevOrder => {\n        console.log('üîÑ Previous section order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('üîÑ Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        if (oldIndex === -1 || newIndex === -1) {\n          console.log('‚ùå Invalid indices found');\n          return prevOrder;\n        }\n        const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\n        console.log('üîÑ New section order:', newOrder);\n        console.log('‚úÖ Section swap successful!');\n        showNotification('üîÑ Sections swapped successfully!', 'success');\n        console.log('‚úÖ Sections swapped via drag & drop!');\n        return newOrder;\n      });\n\n      // Clean up data attributes and visual feedback\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    } else {\n      console.log('üîç No section swap - same position');\n\n      // Clean up data attributes and visual feedback even if no swap\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('üîç SECTIONS 5&6 DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('üîÑ Sections 5&6 swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSections5And6Order(prevOrder => {\n        console.log('üîÑ Previous sections 5&6 order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('üîÑ Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('üîÑ New sections 5&6 order:', newOrder);\n        showNotification('üîÑ Sections 5 and 6 reordered!', 'info');\n        console.log('üîÑ Sections 5&6 reordered via drag & drop!');\n        console.log('üìä New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('üîç No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('üîç LINE ITEM COLUMN DRAG DEBUG - Event received:', {\n      active: active.id,\n      over: over.id\n    });\n    if (active.id !== over.id) {\n      console.log('üîÑ Line item column swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setLineItemColumnOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        console.log('üîÑ Previous line item column order:', items);\n        console.log('üîÄ Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        console.log('üîÑ New line item column order:', newOrder);\n        showNotification('üîÑ Line item columns reordered!', 'info');\n        return newOrder;\n      });\n    } else {\n      console.log('üîç No line item column swap - same position');\n    }\n  };\n\n  // Handle shipping column drag end\n  const handleShippingColumnDragEnd = event => {\n    // Check if this is an add-column event from Section5Shipping\n    if (event.type === 'add-column' && event.newOrder) {\n      console.log('üîç SHIPPING COLUMN ADD DEBUG - New column added:', event.newOrder);\n      setShippingColumnOrder(event.newOrder);\n      showNotification('üö¢ New shipping column added!', 'success');\n      return;\n    }\n\n    // Check if this is the new event format from Section5Shipping (reordering)\n    if (event.newOrder) {\n      console.log('üîç SHIPPING COLUMN DRAG DEBUG - New order received:', event.newOrder);\n      setShippingColumnOrder(event.newOrder);\n      showNotification('üö¢ Shipping columns reordered!', 'info');\n      return;\n    }\n\n    // Handle the old event format (fallback)\n    const {\n      active,\n      over\n    } = event;\n    console.log('üîç SHIPPING COLUMN DRAG DEBUG - Event received:', {\n      active: active.id,\n      over: over.id\n    });\n    if (active.id !== over.id) {\n      console.log('üîÑ Shipping column swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setShippingColumnOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        console.log('üîÑ Previous shipping column order:', items);\n        console.log('üîÄ Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        console.log('üîÑ New shipping column order:', newOrder);\n        showNotification('üö¢ Shipping columns reordered!', 'info');\n        return newOrder;\n      });\n    } else {\n      console.log('üîç No shipping column swap - same position');\n    }\n  };\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('üîç VENDOR/SHIP-TO DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('üîÑ Vendor/Ship-To section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('üîÑ Previous vendor/ship-to order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('üîÑ Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('üîÑ New vendor/ship-to order:', newOrder);\n\n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('üîÑ Vendor and Ship To sections reordered!', 'info');\n        console.log('üîÑ Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('üìä New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('üîç No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('üîç VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('üîÑ Vendor-ShipTo + Shipping Details swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('üîÑ Previous vendor-shipTo + shipping details order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('üîÑ Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('üîÑ New vendor-shipTo + shipping details order:', newOrder);\n        showNotification('üîÑ Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('üîÑ Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('üìä New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('üîç No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n\n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('üîÑ MANUAL SWAP FUNCTION CALLED');\n    console.log('üîÑ Before swap - Company fields:', companyFields);\n    console.log('üîÑ Before swap - Purchase Order fields:', purchaseOrderFields);\n\n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle,\n        // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('üîç Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('üîç Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    console.log('üîÑ About to swap fields...');\n    console.log('üîÑ New company fields (with title check):', newCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n    console.log('üîÑ New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n\n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n\n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    showNotification('üîÑ Sections swapped!', 'info');\n    console.log('üîÑ Sections swapped successfully!');\n    console.log('üìä New Section 1 (was Section 2):', newCompanyFields);\n    console.log('üìä New Section 2 (was Section 1):', newPurchaseOrderFields);\n\n    // Log the swap operation\n    console.log('üîÑ Section Swap Details:', {\n      'Section 1 ‚Üí Section 2': newCompanyFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      })),\n      'Section 2 ‚Üí Section 1': newPurchaseOrderFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      }))\n    });\n  };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('üîÑ MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('üîÑ Before swap - Vendor fields:', vendorFields);\n    console.log('üîÑ Before swap - Ship To fields:', shipToFields);\n\n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('üîç Before swap - Vendor field values:', vendorFieldValues);\n    console.log('üîç Before swap - Ship To field values:', shipToFieldValues);\n\n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n\n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    showNotification('üîÑ Vendor and Ship To sections swapped!', 'info');\n    console.log('üîÑ Vendor and Ship To sections swapped successfully!');\n    console.log('üìä New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('üìä New Ship To fields (was Vendor):', vendorFieldValues);\n\n    // Log the swap operation\n    console.log('üîÑ Vendor/Ship-To Swap Details:', {\n      'Vendor ‚Üí Ship To': shipToFieldValues.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      })),\n      'Ship To ‚Üí Vendor': vendorFieldValues.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n\n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('üìù Capturing field values from DOM...');\n\n    // Capture company field values - PRESERVE CURRENT ORDER\n    console.log('üîç DEBUG: Current company fields order before capture:', companyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`üìù Company field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n    console.log('üîç DEBUG: Updated company fields order after capture:', updatedCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n\n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`üìù PO field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`üìù Vendor field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`üìù Ship-to field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('üìù Line items captured:', capturedLineItems);\n\n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n\n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      console.log(`üìù Totals field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    console.log('üìù Field values captured and state updated!');\n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n\n  // Unified drag end dispatcher for a single top-level DndContext\n  const handleRootDragEnd = event => {\n    var _active$data5, _active$data5$current;\n    const {\n      active\n    } = event;\n    const activeId = (active === null || active === void 0 ? void 0 : active.id) || '';\n    const source = active === null || active === void 0 ? void 0 : (_active$data5 = active.data) === null || _active$data5 === void 0 ? void 0 : (_active$data5$current = _active$data5.current) === null || _active$data5$current === void 0 ? void 0 : _active$data5$current.source;\n\n    // Reset section handle dragging state\n    setIsSectionHandleDragging(false);\n\n    // Clean up all visual feedback states\n    const allSections = document.querySelectorAll('[id^=\"section\"]');\n    allSections.forEach(section => {\n      section.removeAttribute('data-is-over');\n      section.removeAttribute('data-is-dragging');\n\n      // Reset styles\n      section.style.border = '';\n      section.style.backgroundColor = '';\n      section.style.transform = '';\n      section.style.transition = '';\n      section.style.boxShadow = '';\n\n      // Remove drop indicators\n      const dropIndicator = section.querySelector('.drop-indicator');\n      if (dropIndicator) {\n        dropIndicator.remove();\n      }\n    });\n    if (source === 'palette') {\n      handlePaletteDragEnd(event);\n      return;\n    }\n\n    // Sections 1 & 2 swap\n    if (activeId === 'section1' || activeId === 'section2') {\n      handleSectionDragEnd(event);\n      return;\n    }\n    // Vendor-ShipTo + ShippingDetails container swap\n    if (activeId === 'sections3And4' || activeId === 'sections5And6') {\n      handleVendorShipToAndShippingDetailsDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To section reordering\n    if (activeId === 'section3' || activeId === 'section4') {\n      handleVendorShipToSectionDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To individual field drags\n    if (String(activeId).startsWith('vendor-')) {\n      handleVendorDragEnd(event);\n      return;\n    }\n    if (String(activeId).startsWith('ship-to-')) {\n      handleShipToDragEnd(event);\n      return;\n    }\n    // Line item column reorder\n    if (['itemNumber', 'description', 'qty', 'rate', 'amount'].includes(activeId)) {\n      handleLineItemColumnDragEnd(event);\n      return;\n    }\n    // Comments & totals sections reorder\n    if (activeId === 'section8' || activeId === 'section9') {\n      handleCommentsTotalsDragEnd(event);\n      return;\n    }\n  };\n\n  // State for tracking section handle drag operations (simplified)\n  const [isSectionHandleDragging, setIsSectionHandleDragging] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `purchase-order-container ${!sidebarVisible ? 'sidebar-hidden' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      collisionDetection: rectIntersection,\n      onDragCancel: () => {\n        console.log('‚ùå Drag cancelled');\n      },\n      onDragMove: event => {\n        console.log('üîÑ Drag move:', event);\n      },\n      onDragStart: event => {\n        console.log('üöÄ DndContext Drag Start:', event);\n        handleDragStart(event);\n      },\n      onDragOver: event => {\n        console.log('üéØ DndContext Drag Over:', event);\n        handleDragOver(event);\n      },\n      onDragEnd: event => {\n        console.log('üèÅ DndContext Drag End:', event);\n        handleRootDragEnd(event);\n      },\n      children: [console.log('üîß DndContext rendering with:', {\n        sensors: sensors,\n        collisionDetection: closestCenter,\n        hasDragStart: !!handleDragStart,\n        hasDragOver: !!handleDragOver,\n        hasDragEnd: !!handleRootDragEnd,\n        timestamp: new Date().toISOString()\n      }), /*#__PURE__*/_jsxDEV(AvailableFields, {\n        isVisible: sidebarVisible,\n        onToggleVisibility: toggleSidebar,\n        showNotification: showNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1968,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"page-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Purchase Order Management System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1976,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create, edit, and manage purchase orders with ease\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1977,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1975,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-section vendor-shipping-columns\",\n              children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                items: sections1And2Order,\n                strategy: horizontalListSortingStrategy,\n                children: [console.log('üîß SortableContext for sections 1&2:', {\n                  items: sections1And2Order,\n                  strategy: 'horizontalListSortingStrategy',\n                  sections1And2OrderType: typeof sections1And2Order,\n                  sections1And2OrderLength: sections1And2Order === null || sections1And2Order === void 0 ? void 0 : sections1And2Order.length,\n                  itemsArray: Array.isArray(sections1And2Order) ? sections1And2Order : 'NOT ARRAY',\n                  timestamp: new Date().toISOString()\n                }), console.log('üîß SortableContext items validation:', {\n                  itemsValid: Array.isArray(sections1And2Order) && sections1And2Order.length > 0,\n                  itemsContent: sections1And2Order,\n                  strategyValid: horizontalListSortingStrategy !== undefined,\n                  timestamp: new Date().toISOString()\n                }), sections1And2Order.map((sectionId, index) => {\n                  console.log(`üîß Rendering section: ${sectionId} at index ${index}`);\n                  if (sectionId === 'section1') {\n                    return /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                      id: \"section1\",\n                      sectionNumber: \"1\",\n                      isSectionHandleDragging: isSectionHandleDragging,\n                      showDragHandle: true,\n                      children: /*#__PURE__*/_jsxDEV(Section1CompanyInfo, {\n                        companyFields: companyFields,\n                        sensors: sensors,\n                        onCompanyDragEnd: handleCompanyDragEnd,\n                        onAddCompanyField: handleAddCompanyField,\n                        onRemoveCompanyField: handleRemoveCompanyField,\n                        onLabelChange: handleCompanyFieldLabelChange,\n                        onContentChange: handleContentChange,\n                        lastModified: lastModified\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2017,\n                        columnNumber: 25\n                      }, this)\n                    }, `section1-${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2016,\n                      columnNumber: 23\n                    }, this);\n                  } else if (sectionId === 'section2') {\n                    return /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                      id: \"section2\",\n                      sectionNumber: \"2\",\n                      isSectionHandleDragging: isSectionHandleDragging,\n                      showDragHandle: true,\n                      children: /*#__PURE__*/_jsxDEV(Section2PurchaseOrder, {\n                        purchaseOrderFields: purchaseOrderFields,\n                        sensors: sensors,\n                        onPurchaseOrderDragEnd: handlePurchaseOrderDragEnd,\n                        onAddPurchaseOrderField: handleAddPurchaseOrderField,\n                        onRemovePurchaseOrderField: handleRemovePurchaseOrderField,\n                        onLabelChange: handlePurchaseOrderFieldLabelChange,\n                        onContentChange: handleContentChange,\n                        lastModified: poLastModified\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2032,\n                        columnNumber: 25\n                      }, this)\n                    }, `section2-${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2031,\n                      columnNumber: 23\n                    }, this);\n                  }\n                  return null;\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1992,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1990,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1989,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-container\",\n            style: {\n              marginTop: '30px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vendor-shipping-columns\",\n              children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                items: vendorShipToSectionOrder,\n                strategy: horizontalListSortingStrategy,\n                children: vendorShipToSectionOrder.map((sectionId, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: sectionId === 'section3' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"section3\",\n                    className: \"vendor-column\",\n                    children: /*#__PURE__*/_jsxDEV(Section3Vendor, {\n                      vendorFields: vendorFields,\n                      sensors: sensors,\n                      onVendorDragEnd: handleVendorDragEnd,\n                      onAddVendorField: handleAddVendorField,\n                      onRemoveVendorField: handleRemoveVendorField,\n                      onLabelChange: handleVendorFieldLabelChange,\n                      onContentChange: handleContentChange,\n                      lastModified: Date.now()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2062,\n                      columnNumber: 25\n                    }, this)\n                  }, `section3-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2061,\n                    columnNumber: 23\n                  }, this) : sectionId === 'section4' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"section4\",\n                    className: \"ship-to-column\",\n                    children: /*#__PURE__*/_jsxDEV(Section4ShipTo, {\n                      shipToFields: shipToFields,\n                      sensors: sensors,\n                      onShipToDragEnd: handleShipToDragEnd,\n                      onAddShipToField: handleAddShipToField,\n                      onRemoveShipToField: handleRemoveShipToField,\n                      onLabelChange: handleShipToFieldLabelChange,\n                      onContentChange: handleContentChange,\n                      lastModified: Date.now()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2075,\n                      columnNumber: 25\n                    }, this)\n                  }, \"section4\", false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2074,\n                    columnNumber: 23\n                  }, this) : null\n                }, `${sectionId}-${index}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2059,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2054,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2053,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2052,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '30px'\n            },\n            children: /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n              id: \"section5\",\n              sectionNumber: \"5\",\n              isSectionHandleDragging: isSectionHandleDragging,\n              showDragHandle: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'relative'\n                },\n                children: /*#__PURE__*/_jsxDEV(Section5Shipping, {\n                  shippingColumnOrder: shippingColumnOrder,\n                  onShippingColumnDragEnd: handleShippingColumnDragEnd\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2097,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2096,\n                columnNumber: 15\n              }, this)\n            }, \"section5\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 2095,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2094,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              marginBottom: '20px',\n              padding: '10px',\n              backgroundColor: '#f8fafc',\n              border: '1px solid #e5e7eb',\n              borderRadius: '8px',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-column-btn\",\n              style: {\n                backgroundColor: '#3b82f6',\n                color: 'white',\n                border: 'none',\n                padding: '10px 16px',\n                borderRadius: '6px',\n                fontSize: '14px',\n                fontWeight: '600',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '6px',\n                transition: 'all 0.2s ease',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              },\n              onClick: e => {\n                e.stopPropagation();\n                e.preventDefault();\n                console.log('Add column button clicked from main form!');\n\n                // Generate a unique ID for the new column\n                const newColumnId = `custom-${Date.now()}`;\n\n                // Add the new column to the shipping column order\n                setShippingColumnOrder(prevOrder => {\n                  const newOrder = [...prevOrder, newColumnId];\n                  console.log('üö¢ Added new shipping column:', {\n                    newColumnId,\n                    newOrder\n                  });\n                  console.log('üö¢ Current shipping column order:', newOrder);\n                  return newOrder;\n                });\n\n                // Show success notification\n                showNotification(`üö¢ Added new shipping column: ${newColumnId}`, 'success');\n              },\n              onMouseEnter: e => {\n                e.target.style.backgroundColor = '#1d4ed8';\n                e.target.style.transform = 'translateY(-1px)';\n                e.target.style.boxShadow = '0 4px 8px rgba(0,0,0,0.15)';\n              },\n              onMouseLeave: e => {\n                e.target.style.backgroundColor = '#3b82f6';\n                e.target.style.transform = 'translateY(0)';\n                e.target.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n              },\n              title: \"Add new shipping column\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '16px'\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2164,\n                columnNumber: 15\n              }, this), \"Add Column\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2116,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sortable-section items-section\",\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              style: {\n                padding: '12px',\n                backgroundColor: '#f8fafc',\n                borderBottom: '1px solid #e5e7eb',\n                fontWeight: '600',\n                fontSize: '14px',\n                color: '#374151',\n                textAlign: 'center'\n              },\n              children: [\"Line Items\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"drag-indicator\",\n                children: \"::\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2181,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2171,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n              items: lineItemColumnOrder,\n              strategy: verticalListSortingStrategy,\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"itemtable\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2189,\n                      columnNumber: 19\n                    }, this), lineItemColumnOrder.map((columnId, index) => {\n                      const columnConfig = {\n                        itemNumber: {\n                          label: 'Item#',\n                          colSpan: 3\n                        },\n                        description: {\n                          label: 'Description',\n                          colSpan: 12\n                        },\n                        qty: {\n                          label: 'Qty',\n                          colSpan: 2\n                        },\n                        rate: {\n                          label: 'Rate',\n                          colSpan: 3\n                        },\n                        amount: {\n                          label: 'Amount',\n                          colSpan: 3\n                        }\n                      };\n                      const config = columnConfig[columnId];\n                      return /*#__PURE__*/_jsxDEV(\"th\", {\n                        colSpan: config.colSpan,\n                        children: config.label\n                      }, `${columnId}-${index}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2201,\n                        columnNumber: 23\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2188,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2187,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [1, 2, 3, 4, 5].map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: \"draggable-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2211,\n                      columnNumber: 21\n                    }, this), lineItemColumnOrder.map((columnId, colIndex) => {\n                      const columnConfig = {\n                        itemNumber: {\n                          colSpan: 3,\n                          placeholder: 'Item number'\n                        },\n                        description: {\n                          colSpan: 12,\n                          placeholder: 'Item description'\n                        },\n                        qty: {\n                          colSpan: 2,\n                          placeholder: 'Qty'\n                        },\n                        rate: {\n                          colSpan: 3,\n                          placeholder: '$0.00'\n                        },\n                        amount: {\n                          colSpan: 3,\n                          placeholder: '$0.00'\n                        }\n                      };\n                      const config = columnConfig[columnId];\n                      return /*#__PURE__*/_jsxDEV(\"td\", {\n                        colSpan: config.colSpan,\n                        \"data-column\": columnId,\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": config.placeholder\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2224,\n                          columnNumber: 27\n                        }, this)\n                      }, `${row}-${columnId}-${rowIndex}-${colIndex}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2223,\n                        columnNumber: 25\n                      }, this);\n                    })]\n                  }, `row-${row}-${rowIndex}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2210,\n                    columnNumber: 19\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2208,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2186,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2185,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2170,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: commentsTotalsSectionOrder,\n            strategy: horizontalListSortingStrategy,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-totals-section\",\n              style: {\n                display: 'flex',\n                gap: '20px'\n              },\n              children: commentsTotalsSectionOrder.map((sectionId, index) => {\n                if (sectionId === 'section8') {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"section8\",\n                    className: \"sortable-section comments-section\",\n                    style: {\n                      flex: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DraggableSectionHeader, {\n                      id: \"section8\",\n                      children: \"Comments or Special Instructions ::\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2244,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-content\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"comments-content\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"Enter comments or special instructions...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2249,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2248,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2247,\n                      columnNumber: 21\n                    }, this)]\n                  }, `section8-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2243,\n                    columnNumber: 19\n                  }, this);\n                } else if (sectionId === 'section9') {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"section9\",\n                    className: \"sortable-section totals-section\",\n                    style: {\n                      flex: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DraggableSectionHeader, {\n                      id: \"section9\",\n                      children: \"Totals ::\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2257,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"subtotal\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"SUBTOTAL:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2262,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"calculated-field\",\n                          children: \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2263,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2261,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"tax\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"TAX:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2266,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2267,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2265,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"shipping\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"SHIPPING:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2270,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2271,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2269,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"other\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"OTHER:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2274,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2275,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2273,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row total-final\",\n                        \"data-field\": \"total\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"TOTAL:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2278,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"calculated-field total-field\",\n                          children: \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2279,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2277,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2260,\n                      columnNumber: 21\n                    }, this)]\n                  }, `section9-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2256,\n                    columnNumber: 19\n                  }, this);\n                }\n                return null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2239,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2238,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Contact Information:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2295,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"Enter contact information here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2296,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2294,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2293,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn preview-btn\",\n              onClick: togglePreviewMode,\n              children: isPreviewMode ? 'üëÅÔ∏è Hide Preview' : 'üëÅÔ∏è Show Preview'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2302,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: handleAIFill,\n              children: \"\\uD83E\\uDD16 AI Fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2305,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn export-btn\",\n              onClick: exportToXML,\n              children: \"\\uD83D\\uDCC4 Generate XML\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2308,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2301,\n            columnNumber: 11\n          }, this), changeHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-history-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              children: [\"\\uD83D\\uDCDD Change History (\", changeHistory.length, \" changes)\", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-history-btn\",\n                onClick: clearChangeHistory,\n                children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2318,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-list\",\n              children: [changeHistory.slice(0, 10).map((change, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"change-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-time\",\n                  children: new Date(change.timestamp).toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2325,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-type\",\n                  children: change.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2328,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-field\",\n                  children: change.fieldId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2329,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-old\",\n                  children: change.oldValue || 'empty'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2330,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-arrow\",\n                  children: \"\\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2331,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-new\",\n                  children: change.newValue || 'empty'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2332,\n                  columnNumber: 21\n                }, this)]\n              }, `${change.id}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2324,\n                columnNumber: 19\n              }, this)), changeHistory.length > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"change-more\",\n                children: [\"... and \", changeHistory.length - 10, \" more changes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2336,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2322,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2315,\n            columnNumber: 13\n          }, this), showXMLModal && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"xml-modal-overlay\",\n            onClick: closeXMLModal,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"xml-modal\",\n              onClick: e => e.stopPropagation(),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-modal-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"\\uD83D\\uDCC4 Generated XML Output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2349,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"xml-modal-close\",\n                  onClick: closeXMLModal,\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2350,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2348,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-modal-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"xml-output-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                    className: \"xml-code\",\n                    children: xmlOutput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2354,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2353,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2352,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-modal-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn copy-btn\",\n                  onClick: copyXMLToClipboard,\n                  children: \"\\uD83D\\uDCCB Copy XML\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2358,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn download-btn\",\n                  onClick: downloadXML,\n                  children: \"\\uD83D\\uDCE5 Download XML\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2361,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn close-btn\",\n                  onClick: closeXMLModal,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2364,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2357,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2347,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1987,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1986,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1937,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notification-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2381,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1936,\n    columnNumber: 5\n  }, this);\n}\n_s7(PurchaseOrderForm, \"oZzcBRN2NBJeSvGmWAWQ1wNPfI0=\", false, function () {\n  return [useDragAndDropSensors, useVendorFieldsDragEnd, useShipToFieldsDragEnd, useAIProvider];\n});\n_c5 = PurchaseOrderForm;\nexport default PurchaseOrderForm;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DraggableSectionWrapper\");\n$RefreshReg$(_c2, \"DraggableGroupWrapper\");\n$RefreshReg$(_c3, \"SortableShippingColumnHeader\");\n$RefreshReg$(_c4, \"DraggableSectionHeader\");\n$RefreshReg$(_c5, \"PurchaseOrderForm\");","map":{"version":3,"names":["React","useState","useEffect","HeaderColorPicker","generatePurchaseOrderXML","Section1CompanyInfo","Section2PurchaseOrder","Section3Vendor","Section4ShipTo","Section5Shipping","AvailableFields","useAIProvider","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","useDraggable","rectIntersection","SortableContext","verticalListSortingStrategy","horizontalListSortingStrategy","useSortable","CSS","arrayMove","jsxDEV","_jsxDEV","DraggableSectionWrapper","children","id","sectionNumber","isSectionHandleDragging","showDragHandle","_s","attributes","listeners","setNodeRef","transform","transition","isDragging","data","type","getSectionClass","sectionNum","style","Transform","toString","opacity","zIndex","cursor","position","width","height","border","borderRadius","backgroundColor","console","log","hasOnMouseDown","onMouseDown","hasOnMouseMove","onMouseMove","hasOnMouseUp","onMouseUp","hasOnTouchStart","onTouchStart","hasOnTouchMove","onTouchMove","hasOnTouchEnd","onTouchEnd","listenerKeys","Object","keys","listenerValues","values","map","v","ref","className","left","top","color","fontSize","background","padding","boxShadow","userSelect","fontFamily","fontWeight","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","DraggableGroupWrapper","_s2","groupName","margin","_c2","SortableShippingColumnHeader","_s3","_c3","DraggableSectionHeader","_s4","_c4","PurchaseOrderForm","_s7","_s5","$RefreshSig$","_s6","companyFields","setCompanyFields","label","placeholder","value","f","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","sidebarVisible","setSidebarVisible","toggleSidebar","generateUniqueFieldId","baseLabel","existingIds","slugBase","String","toLowerCase","replace","candidate","counter","includes","handlePaletteDragEnd","event","_active$data","active","over","current","source","newField","handleAddCompanyField","showNotification","purchaseOrderFields","handleAddPurchaseOrderField","vendorFields","handleAddVendorField","shipToFields","handleAddShipToField","setPurchaseOrderFields","isTitle","setVendorFields","setShipToFields","totalsFields","setTotalsFields","isCalculated","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","prevFields","logChange","handleRemoveCompanyField","fieldId","fieldToRemove","find","field","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","changeType","oldValue","newValue","section","change","now","timestamp","prev","slice","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","togglePreviewMode","clearChangeHistory","showXMLModal","setShowXMLModal","xmlOutput","setXmlOutput","displayXMLOutput","xml","closeXMLModal","copyXMLToClipboard","navigator","clipboard","writeText","then","catch","downloadXML","_purchaseOrderFields$","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","getFieldSuggestions","applySuggestionsToFields","suggestionsMap","fields","Array","isArray","newVal","handleAIFill","payload","context","shippingFields","shippingColumnOrder","startsWith","suggestions","debug","company","name","phone","po","date","number","shipping","requisitioner","shipVia","totals","subtotal","tax","total","line1","item","itemNumber1","desc","description1","qty","qty1","rate","rate1","amount","amount1","next","before","fromEntries","after","forEach","undefined","from","to","sourceKey","write","el","val","textContent","shipSelectors","key","shipOrder","idx","used","suggestionKey","sel","querySelector","nth","selA","selB","suggestionValue","count","querySelectorAll","length","selector","fieldsInDOM","isCustom","setCell","row","col","cell","li","i","k","other","domTotals","calcTotal","calcSub","commentsEl","contactEl","comments","contactInfo","e","error","message","exportToXML","capturedData","captureFieldValues","headerSections","visualSections1And2","sections1And2ForExport","sections1And2Order","vendorShipToSections","visualSections3And4","sections3And4ForExport","vendorShipToSectionOrder","getText","_document$querySelect","_document$querySelect2","trim","normalizedLineItems","lineItems","itemNumber","description","quantity","unitPrice","exportData","sectionOrder","sections1And2","sections3And4","sections5And6","sections5And6Order","sections8And9","commentsTotalsSectionOrder","lineItemColumns","lineItemColumnOrder","shippingColumns","fieldOrder","companyFieldOrder","purchaseOrder","purchaseOrderFieldOrder","vendor","shipTo","shippingData","columnId","fob","shippingTerms","sections3And4And5And6","existingNotification","remove","notification","innerHTML","container","getElementById","setTimeout","parentElement","getFormStats","totalFields","totalChanges","Math","max","getTime","handleCompanyDragEnd","setCompanyFieldOrder","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","logFieldSummary","toLocaleString","handleRemovePurchaseOrderField","handleRemoveVendorField","handleVendorFieldLabelChange","handleRemoveShipToField","handleShipToFieldLabelChange","handlePurchaseOrderDragEnd","setPurchaseOrderFieldOrder","setVendorShipToSectionOrder","setSections1And2Order","setSections5And6Order","vendorShipToAndShippingDetailsOrder","setVendorShipToAndShippingDetailsOrder","setLineItemColumnOrder","setShippingColumnOrder","setCommentsTotalsSectionOrder","handleDragStart","_active$data2","activeData","element","setAttribute","handleDragOver","_active$data3","_over$data","overData","targetElement","handleSectionDragEnd","_active$data4","_over$data2","activeId","overId","section1Element","section2Element","removeAttribute","handleSections5And6DragEnd","handleLineItemColumnDragEnd","items","handleShippingColumnDragEnd","handleCommentsTotalsDragEnd","handleVendorShipToSectionDragEnd","handleVendorShipToAndShippingDetailsDragEnd","handleSwapSections","companyFieldValues","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSwapVendorShipTo","vendorFieldValues","shipToFieldValues","reverse","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","capturedLineItems","rowIndex","rowData","cellSelector","push","updatedTotalsFields","handleRootDragEnd","_active$data5","_active$data5$current","setIsSectionHandleDragging","allSections","dropIndicator","collisionDetection","onDragCancel","onDragMove","onDragStart","onDragOver","onDragEnd","hasDragStart","hasDragOver","hasDragEnd","isVisible","onToggleVisibility","strategy","sections1And2OrderType","sections1And2OrderLength","itemsArray","itemsValid","itemsContent","strategyValid","sectionId","index","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","marginTop","Fragment","onVendorDragEnd","onAddVendorField","onRemoveVendorField","onShipToDragEnd","onAddShipToField","onRemoveShipToField","onShippingColumnDragEnd","display","justifyContent","marginBottom","alignItems","gap","onClick","stopPropagation","preventDefault","newColumnId","onMouseEnter","target","onMouseLeave","borderBottom","textAlign","columnConfig","colSpan","config","colIndex","contentEditable","flex","toLocaleTimeString","_c5","$RefreshReg$"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport './section-styles.css';\nimport './header-colors.css';\nimport './header-color-picker.css';\nimport HeaderColorPicker from './components/HeaderColorPicker';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3Vendor from './components/Section3Vendor';\nimport Section4ShipTo from './components/Section4ShipTo';\nimport Section5Shipping from './components/Section5Shipping';\n\nimport AvailableFields from './components/AvailableFields';\n\nimport { useAIProvider } from './hooks/useAIProvider';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter, useDraggable, rectIntersection } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n\n// Draggable Section Wrapper Component for Sections\nfunction DraggableSectionWrapper({ children, id, sectionNumber, isSectionHandleDragging = false, showDragHandle = true }) {\n\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({ \n    id, \n    data: {\n      type: 'section',\n      sectionNumber: sectionNumber\n    }\n  });\n\n  // Map section numbers to proper CSS classes\n  const getSectionClass = (sectionNum) => {\n    switch(sectionNum) {\n      case 1:\n        return 'section-1-company-info';\n      case 2:\n        return 'section-2-purchase-order';\n      default:\n        return `section-${sectionNum}`;\n    }\n  };\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.6 : 1,\n    zIndex: isDragging ? 1000 : 1,\n    cursor: isDragging ? 'grabbing' : 'grab',\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    border: isDragging ? '3px solid #ff6b6b' : '2px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: isDragging ? 'rgba(255, 107, 107, 0.1)' : 'transparent'\n  };\n\n  // Log the actual attributes and listeners objects\n  console.log(`üîß Detailed useSortable data for ${id}:`, {\n    attributes: attributes,\n    listeners: listeners,\n    setNodeRef: setNodeRef,\n    style: style\n  });\n\n  // Debug: Check if listeners have the right properties\n  if (listeners) {\n    console.log(`üîß Listeners for ${id}:`, {\n      hasOnMouseDown: !!listeners.onMouseDown,\n      hasOnMouseMove: !!listeners.onMouseMove,\n      hasOnMouseUp: !!listeners.onMouseUp,\n      hasOnTouchStart: !!listeners.onTouchStart,\n      hasOnTouchMove: !!listeners.onTouchMove,\n      hasOnTouchEnd: !!listeners.onTouchEnd,\n      listenerKeys: Object.keys(listeners),\n      listenerValues: Object.values(listeners).map(v => typeof v)\n    });\n  } else {\n    console.log(`‚ùå No listeners for ${id}`);\n  }\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className={`sortable-section ${getSectionClass(sectionNumber)} ${isDragging ? 'dragging' : ''}`}\n      data-section={sectionNumber}\n      data-testid={`draggable-section-${id}`}\n      data-dragging={isDragging}\n      {...attributes} \n      {...listeners}\n    >\n      {showDragHandle && (\n        <div\n          className=\"section-drag-handle\"\n          style={{\n            position: 'absolute',\n            left: '-35px',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            cursor: 'grab',\n            color: '#3b82f6',\n            fontSize: '14px',\n            zIndex: '10',\n            opacity: isSectionHandleDragging ? '0.7' : '1',\n            background: 'white',\n            padding: '6px 8px',\n            borderRadius: '8px',\n            border: '2px solid #3b82f6',\n            boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\n            transition: 'all 0.2s',\n            userSelect: 'none',\n            fontFamily: 'monospace',\n            fontWeight: 'bold'\n          }}\n          title=\"Drag to move section\"\n        >\n          ‚ãÆ‚ãÆ\n        </div>\n      )}\n      <div \n        className=\"section-content\"\n        style={{ position: 'relative', width: '100%', height: '100%' }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\n// Draggable Group Wrapper Component for Vendor-Ship-To-Shipping Group\nfunction DraggableGroupWrapper({ children, id, isSectionHandleDragging = false, showDragHandle = true }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({ \n    id, \n    data: {\n      type: 'section-group',\n      groupName: 'vendor-ship-to-shipping'\n    }\n  });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.6 : 1,\n    zIndex: isDragging ? 1000 : 1,\n    cursor: isDragging ? 'grabbing' : 'grab',\n    position: 'relative',\n    width: '100%',\n    border: isDragging ? '3px solid #ff6b6b' : '2px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: isDragging ? 'rgba(255, 107, 107, 0.1)' : 'transparent',\n    padding: '20px',\n    margin: '20px 0'\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className={`sortable-section-group ${isDragging ? 'dragging' : ''}`}\n      data-group=\"vendor-ship-to-shipping\"\n      data-testid={`draggable-group-${id}`}\n      data-dragging={isDragging}\n      {...attributes} \n      {...listeners}\n    >\n      {showDragHandle && (\n        <div\n          className=\"group-drag-handle\"\n          style={{\n            position: 'absolute',\n            left: '-45px',\n            top: '50%',\n            transform: 'translateY(-50%)',\n            cursor: 'grab',\n            color: '#10b981',\n            fontSize: '16px',\n            zIndex: '10',\n            opacity: isSectionHandleDragging ? '0.7' : '1',\n            background: 'white',\n            padding: '8px 10px',\n            borderRadius: '8px',\n            border: '2px solid #10b981',\n            boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\n            transition: 'all 0.2s',\n            userSelect: 'none',\n            fontFamily: 'monospace',\n            fontWeight: 'bold'\n          }}\n          title=\"Drag to move vendor-ship-to-shipping group\"\n        >\n          ‚ö°\n        </div>\n      )}\n      <div \n        className=\"group-content\"\n        style={{ position: 'relative', width: '100%' }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\n// Sortable shipping column header component for shipping details\nfunction SortableShippingColumnHeader({ children, id }) {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\n  \n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      {...attributes} \n      {...listeners}\n      className={`sortable-column-header ${isDragging ? 'dragging' : ''}`}\n    >\n      {children}\n    </div>\n  );\n}\n\n// Draggable Section Header Component for Comments and Totals\nfunction DraggableSectionHeader({ children, id }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className=\"section-header\"\n      {...attributes} \n      {...listeners} \n      title=\"Drag to reorder sections\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: '' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: '' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: '' }\n  ]);\n\n  // Debug: Log company fields state changes\n  useEffect(() => {\n    console.log('üîÑ Company fields state updated:', companyFields.map(f => ({ id: f.id, label: f.label })));\n  }, [companyFields]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // ============================================================================\n  // SIDEBAR MANAGEMENT\n  // ============================================================================\n  \n  // State for sidebar visibility on mobile\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n\n  // Toggle sidebar visibility\n  const toggleSidebar = () => {\n    setSidebarVisible(!sidebarVisible);\n  };\n\n  // Helper: slugify and ensure unique id for new fields\n  const generateUniqueFieldId = (baseLabel, existingIds) => {\n    const slugBase = String(baseLabel)\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n    let candidate = slugBase || 'field';\n    let counter = 1;\n    while (existingIds.includes(candidate)) {\n      candidate = `${slugBase}-${counter++}`;\n    }\n    return candidate;\n  };\n\n  // ============================================================================\n  // DROPPABLE ZONES\n  // ============================================================================\n\n\n\n\n\n  // Handle palette drag end to add fields to target sections\n  const handlePaletteDragEnd = (event) => {\n    const { active, over } = event;\n    console.log('üéØ Palette drag end:', { active, over });\n    \n    if (!active?.data?.current || !over?.id) {\n      console.log('‚ùå Missing active data or over id');\n      return;\n    }\n    const data = active.data.current;\n    if (data.source !== 'palette') {\n      console.log('‚ùå Not a palette source:', data.source);\n      return;\n    }\n\n    const baseLabel = data.label;\n    console.log('üéØ Dropping on zone:', over.id);\n    \n    // Check if dropping on section elements\n    if (over.id === 'section1') {\n      console.log('‚úÖ Adding to company section');\n      const existingIds = companyFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddCompanyField(newField);\n      showNotification(`‚ûï Added \"${baseLabel}\" to Company Info`, 'success');\n    } else if (over.id === 'section2') {\n      console.log('‚úÖ Adding to purchase order section');\n      const existingIds = purchaseOrderFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddPurchaseOrderField(newField);\n      showNotification(`‚ûï Added \"${baseLabel}\" to Purchase Order`, 'success');\n    } else if (over.id === 'section3') {\n      console.log('‚úÖ Adding to vendor section');\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddVendorField(newField);\n      showNotification(`‚ûï Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else if (over.id === 'section4') {\n      console.log('‚úÖ Adding to ship-to section');\n      const existingIds = shipToFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddShipToField(newField);\n      showNotification(`‚ûï Added \"${baseLabel}\" to Ship-To section`, 'success');\n    } else {\n      console.log('‚ùå Unknown drop zone:', over.id);\n    }\n  };\n\n\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: '' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: '' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: '' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: '' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: '' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([\n    { id: 'subtotal', label: 'SUBTOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true },\n    { id: 'tax', label: 'TAX:', placeholder: '$0.00', value: '' },\n    { id: 'shipping', label: 'SHIPPING:', placeholder: '$0.00', value: '' },\n    { id: 'other', label: 'OTHER:', placeholder: '$0.00', value: '' },\n    { id: 'total', label: 'TOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true }\n  ]);\n\n\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChange('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('‚ûï Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      showNotification(`üóëÔ∏è Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('üóëÔ∏è Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('üìù Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'vendor') {\n      const field = vendorFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'ship-to') {\n      const field = shipToFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('üóëÔ∏è Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n  \n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n  \n  \n  // Function to display XML output in a modal\n  const displayXMLOutput = (xml) => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n  \n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n  \n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('üìã XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('‚ùå Failed to copy XML to clipboard', 'error');\n    });\n  };\n  \n  // Function to download XML file\n  const downloadXML = () => {\n    const blob = new Blob([xmlOutput], { type: 'application/xml' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${purchaseOrderFields.find(f => f.id === 'po-number')?.value || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('üì• XML downloaded successfully!', 'success');\n  };\n\n  // =========================================================================\n  // AI SUGGESTIONS\n  // =========================================================================\n  const { getFieldSuggestions } = useAIProvider();\n\n  const applySuggestionsToFields = (suggestionsMap, fields) => {\n    if (!Array.isArray(fields)) return fields;\n    return fields.map(f => {\n      const newVal = suggestionsMap?.[f.id];\n      if (typeof newVal === 'string') {\n        return { ...f, value: newVal };\n      }\n      return f;\n    });\n  };\n\n  const handleAIFill = async () => {\n    try {\n      showNotification('ü§ñ Fetching AI suggestions...', 'info');\n\n      const payload = {\n        context: 'purchase_order',\n        companyFields,\n        purchaseOrderFields,\n                vendorFields,\n        shipToFields,\n        shippingFields: [\n          // Include default shipping fields\n          { id: 'requisitioner', label: 'Requisitioner name' },\n          { id: 'shipVia', label: 'Shipping method' },\n          { id: 'fob', label: 'FOB terms' },\n          { id: 'shippingTerms', label: 'Shipping terms' },\n          // Include custom columns dynamically\n          ...shippingColumnOrder\n            .filter(id => id.startsWith('custom-'))\n            .map(id => ({ \n              id, \n              label: `Custom ${id.replace('custom-', '')}` \n            }))\n        ]\n      };\n\n      const { suggestions } = await getFieldSuggestions(payload);\n      try {\n        console.debug('üß™ AI suggestions keys:', Object.keys(suggestions || {}));\n        // Preview a few critical values to verify mapping\n        console.debug('üß™ AI preview:', {\n          company: {\n            name: suggestions?.['company-name'],\n            phone: suggestions?.['company-phone']\n          },\n          po: {\n            date: suggestions?.['po-date'],\n            number: suggestions?.['po-number']\n          },\n          shipping: {\n            requisitioner: suggestions?.requisitioner,\n            shipVia: suggestions?.shipVia\n          },\n          totals: {\n            subtotal: suggestions?.subtotal,\n            tax: suggestions?.tax,\n            total: suggestions?.total\n          },\n          line1: {\n            item: suggestions?.itemNumber1,\n            desc: suggestions?.description1,\n            qty: suggestions?.qty1,\n            rate: suggestions?.rate1,\n            amount: suggestions?.amount1\n          }\n        });\n      } catch {}\n\n      // 1) Apply to Section 1‚Äì3 states (company/po/vendor/ship-to) with mapping logs\n      setCompanyFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('üß≠ map(companyFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setPurchaseOrderFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('üß≠ map(purchaseOrderFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setVendorFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('üß≠ map(vendorFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setShipToFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('üß≠ map(shipToFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // 2) Shipping details (DOM spans)\n      const write = (el, val) => { if (el && typeof val === 'string') el.textContent = val; };\n\n      const shipSelectors = (key) => [\n        `.shipping-details [data-field=\"${key}\"] .editable-field`,\n        `.shipping-field[data-field=\"${key}\"] .editable-field`,\n        `#shipping-${key}`,\n        `.shipping-field-${key} .editable-field`\n      ];\n\n      // Use dynamic shipping column order instead of hardcoded array\n      const shipOrder = shippingColumnOrder;\n      shipOrder.forEach((key, idx) => {\n        let el = null, used = '';\n        \n        // Handle custom columns (those that start with 'custom-')\n        let suggestionKey = key;\n        if (key.startsWith('custom-')) {\n          // For custom columns, try to find a relevant suggestion or generate one\n          suggestionKey = 'customField'; // Use a generic key for AI suggestions\n        }\n        \n        for (const sel of shipSelectors(key)) {\n          el = document.querySelector(sel);\n          if (el) { used = sel; break; }\n        }\n        // Fallback to positional selector used in your JSX\n        if (!el) {\n          const nth = idx + 1; // 1-based\n          // Prefer :nth-of-type within container to ignore headers\n          const selA = `.shipping-details .shipping-field:nth-of-type(${nth}) .editable-field`;\n          el = document.querySelector(selA);\n          if (el) {\n            used = selA;\n          } else {\n            // Last resort: original child-based selector\n            const selB = `.shipping-field:nth-child(${nth}) .editable-field`;\n            el = document.querySelector(selB);\n            if (el) used = selB;\n          }\n        }\n        \n        // Get the suggestion value, with fallback for custom columns\n        let suggestionValue = suggestions[suggestionKey];\n        if (key.startsWith('custom-') && !suggestionValue) {\n          // Generate a placeholder value for custom columns\n          suggestionValue = `[Custom ${key.replace('custom-', '')}]`;\n        }\n        \n        write(el, suggestionValue);\n        try {\n          const count = document.querySelectorAll('.shipping-details .shipping-field').length;\n          console.debug('üß≠ map(shippingDetails):', { key, selector: used || '(not found)', value: suggestionValue, fieldsInDOM: count, isCustom: key.startsWith('custom-') });\n        } catch {}\n      });\n\n      // 3) Line items (first 3 rows only)\n      // Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\n      const setCell = (row, col, val) => {\n        const selector = `.itemtable tbody tr:nth-child(${row}) td[data-column=\"${col}\"] .editable-field`;\n        const cell = document.querySelector(selector);\n        if (cell && typeof val === 'string') {\n          cell.textContent = val;\n        }\n        try { console.debug('üß≠ map(lineItem):', { row, col, selector, value: val }); } catch {}\n      };\n\n      const li = (i, k) => suggestions?.[`${k}${i}`];\n\n      for (let i = 1; i <= 3; i++) {\n        setCell(i, 'itemNumber', li(i, 'itemNumber'));\n        setCell(i, 'description', li(i, 'description'));\n        setCell(i, 'qty', li(i, 'qty'));\n        setCell(i, 'rate', li(i, 'rate'));\n        setCell(i, 'amount', li(i, 'amount'));\n      }\n\n      // 4) Totals (state + DOM)\n      setTotalsFields(prev => {\n        const map = {\n          subtotal: suggestions.subtotal,\n          tax: suggestions.tax,\n          shipping: suggestions.shipping,\n          other: suggestions.other,\n          total: suggestions.total,\n        };\n        const next = prev.map(f => (map[f.id] ? { ...f, value: map[f.id] } : f));\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && map[id] !== undefined) {\n              console.debug('üß≠ map(totalsFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // Write editable totals into DOM for non-calculated rows\n      const domTotals = (field) => document.querySelector(`.totals-section .total-row[data-field=\"${field}\"] .editable-field`);\n      ['tax','shipping','other'].forEach(key => {\n        const sel = `.totals-section .total-row[data-field=\"${key}\"] .editable-field`;\n        write(domTotals(key), suggestions[key]);\n        try { console.debug('üß≠ map(totalsDOM):', { key, selector: sel, value: suggestions[key] }); } catch {}\n      });\n\n      // Calculated-looking spans (subtotal, total) in your layout use .calculated-field\n      const calcTotal = document.querySelector(`.totals-section .total-row[data-field=\"total\"] .total-field`);\n      const calcSub   = document.querySelector(`.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`);\n      write(calcSub, suggestions.subtotal);\n      write(calcTotal, suggestions.total);\n      try {\n        console.debug('üß≠ map(totalsDOM):', { key: 'subtotal', selector: `.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`, value: suggestions.subtotal });\n        console.debug('üß≠ map(totalsDOM):', { key: 'total', selector: `.totals-section .total-row[data-field=\"total\"] .total-field`, value: suggestions.total });\n      } catch {}\n\n      // 5) Comments, Contact Info (DOM)\n      const commentsEl = document.querySelector('.comments-content .editable-field');\n      const contactEl  = document.querySelector('.contact-section .editable-field');\n      write(commentsEl, suggestions.comments);\n      write(contactEl, suggestions.contactInfo);\n      try {\n        console.debug('üß≠ map(comments):', { selector: '.comments-content .editable-field', value: suggestions.comments });\n        console.debug('üß≠ map(contactInfo):', { selector: '.contact-section .editable-field', value: suggestions.contactInfo });\n      } catch {}\n\n      // 6) Bump timestamps\n      updateCompanyFieldsTimestamp();\n      updatePurchaseOrderFieldsTimestamp();\n\n      showNotification('‚úÖ AI suggestions applied', 'success');\n    } catch (e) {\n      console.error('AI fill failed:', e);\n      showNotification(`‚ùå AI fill failed: ${e.message}`, 'error');\n    }\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n  \n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('üìÑ Starting XML generation...');\n      \n      // Capture current field values first\n      const capturedData = captureFieldValues();\n      \n      // Prepare data for XML generation\n      // Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\n      const headerSections = Array.from(document.querySelectorAll('.header-section .sortable-section'));\n      const visualSections1And2 = headerSections\n        .map(el => el.id)\n        .filter(id => id === 'section1' || id === 'section2');\n      const sections1And2ForExport = (visualSections1And2.length === 2) ? visualSections1And2 : sections1And2Order;\n      \n      // Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\n      const vendorShipToSections = Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));\n      const visualSections3And4 = vendorShipToSections\n        .map(el => el.id)\n        .filter(id => id === 'section3' || id === 'section4');\n      const sections3And4ForExport = (visualSections3And4.length === 2) ? visualSections3And4 : vendorShipToSectionOrder;\n      \n      // Helpers for DOM reads\n      const getText = (sel) => document.querySelector(sel)?.textContent?.trim() || '';\n      \n      // Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\n      const normalizedLineItems = (capturedData.lineItems || []).map(row => ({\n        // original UI keys\n        itemNumber: row.itemNumber || '',\n        description: row.description || '',\n        qty: row.qty || row.quantity || '',\n        rate: row.rate || row.unitPrice || '',\n        amount: row.amount || row.total || '',\n        // template-expected keys\n        quantity: row.quantity || row.qty || '',\n        unitPrice: row.unitPrice || row.rate || '',\n        total: row.total || row.amount || ''\n      }));\n\n      const exportData = {\n        ...capturedData,\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2ForExport, // Use current visual order to ensure XML matches UI\n          sections3And4: sections3And4ForExport, // Use current visual order to ensure XML matches UI\n          sections5And6: sections5And6Order, // Use actual state for sections 5&6\n          sections8And9: commentsTotalsSectionOrder, // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder, // Use actual state for line item columns\n          shippingColumns: shippingColumnOrder // Use actual state for shipping columns\n        },\n        // CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\n        fieldOrder: {\n          company: companyFieldOrder, // Preserve company field order independently of section position\n          purchaseOrder: purchaseOrderFieldOrder, // Preserve PO field order independently of section position\n          vendor: vendorFields.map(f => f.id), // Vendor field order\n          shipTo: shipToFields.map(f => f.id) // Ship-to field order\n        },\n                // Add normalized line items (support both key schemes)\n        lineItems: normalizedLineItems,\n        // Shipping details (prefer data-field; fall back handled in XML builder too)\n        // Capture all shipping columns dynamically, including custom ones\n        ...(() => {\n          const shippingData = {};\n          shippingColumnOrder.forEach(columnId => {\n            const value = getText(`.section-5 [data-field=\"${columnId}\"] .editable-field`);\n            shippingData[columnId] = value;\n          });\n          return shippingData;\n        })(),\n        // Totals: read what the user sees\n        subtotal: getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field') || '$0.00',\n        tax: getText('.totals-section .total-row[data-field=\"tax\"] .editable-field') || '$0.00',\n        shipping: getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field') || '$0.00',\n        other: getText('.totals-section .total-row[data-field=\"other\"] .editable-field') || '$0.00',\n        total: getText('.totals-section .total-row[data-field=\"total\"] .total-field') || '$0.00',\n        comments: getText('.comments-content .editable-field'),\n        contactInfo: getText('.contact-section .editable-field')\n      };\n      \n      console.debug('üîé Export DOM reads:', {\n        requisitioner: exportData.requisitioner,\n        shipVia: exportData.shipVia,\n        fob: exportData.fob,\n        shippingTerms: exportData.shippingTerms,\n        subtotal: exportData.subtotal,\n        tax: exportData.tax,\n        shipping: exportData.shipping,\n        other: exportData.other,\n        total: exportData.total\n      });\n\n      console.log('üìÑ Export data prepared:', exportData);\n      console.log('üîÄ Section order being sent to XML:', exportData.sectionOrder);\n      console.log('üîÄ Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('üîÄ Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('üîÄ Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n            console.log('üîÄ Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('üîÄ Shipping columns order:', exportData.sectionOrder.shippingColumns);\n      console.log('üîÄ Line items data:', exportData.lineItems);\n      \n      // CRITICAL: Log field order information\n      console.log('üîÄ Field order being sent to XML:', exportData.fieldOrder);\n      console.log('üîÄ Company field order:', exportData.fieldOrder.company);\n      console.log('üîÄ Purchase order field order:', exportData.fieldOrder.purchaseOrder);\n      console.log('üîÄ Vendor field order:', exportData.fieldOrder.vendor);\n      console.log('üîÄ Ship-to field order:', exportData.fieldOrder.shipTo);\n      \n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n      \n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n      \n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      \n      showNotification('üìÑ XML generated successfully!', 'success');\n      console.log('‚úÖ XML generation completed successfully');\n      \n    } catch (error) {\n      console.error('‚ùå XML generation failed:', error);\n      showNotification(`‚ùå XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n\n\n\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">√ó</button>\n      </div>\n    `;\n\n    // Add to notification container\n    const container = document.getElementById('notification-container');\n    if (container) {\n      container.appendChild(notification);\n    } else {\n      // Fallback to body if container not found\n      document.body.appendChild(notification);\n    }\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setCompanyFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('üîÑ Company field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('üîÑ Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('üìä FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('‚ûï Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`üóëÔ∏è Removed purchase order field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('üóëÔ∏è Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // VENDOR FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Add new vendor field\n  const handleAddVendorField = (newField) => {\n    setVendorFields(prevFields => [...prevFields, newField]);\n    console.log('‚ûï Added new vendor field:', newField);\n    showNotification(`‚ûï Added vendor field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove vendor field\n  const handleRemoveVendorField = (fieldId) => {\n    setVendorFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`üóëÔ∏è Removed vendor field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('üóëÔ∏è Removed vendor field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle vendor field label changes\n  const handleVendorFieldLabelChange = (fieldId, newLabel) => {\n    setVendorFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'vendor');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n  };\n\n  // ============================================================================\n  // SHIP-TO FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Add new ship-to field\n  const handleAddShipToField = (newField) => {\n    setShipToFields(prevFields => [...prevFields, newField]);\n    console.log('‚ûï Added new ship-to field:', newField);\n    showNotification(`‚ûï Added ship-to field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove ship-to field\n  const handleRemoveShipToField = (fieldId) => {\n    setShipToFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`üóëÔ∏è Removed ship-to field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('üóëÔ∏è Removed ship-to field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle ship-to field label changes\n  const handleShipToFieldLabelChange = (fieldId, newLabel) => {\n    setShipToFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'ship-to');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setPurchaseOrderFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('üîÑ Purchase order field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('üîÑ Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for vendor/ship-to section order\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n  \n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n  \n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5']);  \n\n  \n  // State for vendor-ship-to and shipping-details sections order (simplified after removing section 7)\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['section5']);\n  \n  // CRITICAL: Add field order state management (same pattern as section order)\n  // State for company field order (preserves drag-and-drop order independently of section position)\n  const [companyFieldOrder, setCompanyFieldOrder] = useState([]);\n  \n  // State for purchase order field order (preserves drag-and-drop order independently of section position)\n  const [purchaseOrderFieldOrder, setPurchaseOrderFieldOrder] = useState([]);\n  \n  // Initialize field order states with current field IDs\n  React.useEffect(() => {\n    setCompanyFieldOrder(companyFields.map(field => field.id));\n  }, [companyFields]);\n  \n  React.useEffect(() => {\n    setPurchaseOrderFieldOrder(purchaseOrderFields.map(field => field.id));\n  }, [purchaseOrderFields]);\n  \n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState([\n    'itemNumber',\n    'description', \n    'qty',\n    'rate',\n    'amount'\n  ]);\n  \n  // Log line item column order changes\n  useEffect(() => {\n    console.log('üîÄ Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n  \n  // Shipping column order state\n  const [shippingColumnOrder, setShippingColumnOrder] = useState([\n    'requisitioner',\n    'shipVia',\n    'fob',\n    'shippingTerms'\n  ]);\n  \n  // Log shipping column order changes\n  useEffect(() => {\n    console.log('üö¢ Shipping column order updated:', shippingColumnOrder);\n  }, [shippingColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle drag start\n  const handleDragStart = (event) => {\n    const { active } = event;\n    console.log('üöÄ DRAG START:', { \n      active: active.id, \n      activeData: active?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n    // Add dragging state to the dragged element\n    if (active.id === 'section1' || active.id === 'section2') {\n      const element = document.getElementById(active.id);\n      if (element) {\n        element.setAttribute('data-is-dragging', 'true');\n        console.log('‚úÖ Added dragging state to:', active.id);\n        \n        // Add visual feedback\n        element.style.border = '3px solid #ff6b6b';\n        element.style.backgroundColor = 'rgba(255, 107, 107, 0.1)';\n      }\n    }\n  };\n\n  // Function to handle drag over\n  const handleDragOver = (event) => {\n    const { active, over } = event;\n    \n    console.log('üéØ DRAG OVER EVENT:', { \n      active: active?.id, \n      over: over?.id,\n      activeData: active?.data?.current,\n      overData: over?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n\n    \n    // Handle section reordering drag over\n    if (active.id === 'section1' || active.id === 'section2') {\n      if (over && (over.id === 'section1' || over.id === 'section2')) {\n        console.log('üéØ Section DRAG OVER:', { \n          active: active.id, \n          over: over.id,\n          timestamp: new Date().toISOString()\n        });\n        \n        // Add over state to the target element\n        const targetElement = document.getElementById(over.id);\n        if (targetElement) {\n          targetElement.setAttribute('data-is-over', 'true');\n          \n          // Enhanced visual feedback for section reordering\n          targetElement.style.border = '3px solid #4ecdc4';\n          targetElement.style.backgroundColor = 'rgba(78, 205, 196, 0.15)';\n          targetElement.style.transform = 'scale(1.01)';\n          targetElement.style.transition = 'all 0.2s ease-in-out';\n          targetElement.style.boxShadow = '0 6px 20px rgba(78, 205, 196, 0.3)';\n        }\n      }\n    }\n  };\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('üîç SECTION DRAG DEBUG - Event received:', { \n      activeId: active?.id, \n      overId: over?.id,\n      activeData: active?.data?.current,\n      overData: over?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n    if (!active || !over) {\n      console.log('‚ùå Missing active or over in section drag');\n      return;\n    }\n    \n    if (active.id !== over.id) {\n      console.log('üîÑ Section swap detected!', { active: active.id, over: over.id });\n      \n      setSections1And2Order((prevOrder) => {\n        console.log('üîÑ Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('üîÑ Index calculations:', { oldIndex, newIndex });\n        \n        if (oldIndex === -1 || newIndex === -1) {\n          console.log('‚ùå Invalid indices found');\n          return prevOrder;\n        }\n        \n        const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\n        \n        console.log('üîÑ New section order:', newOrder);\n        console.log('‚úÖ Section swap successful!');\n        \n        showNotification('üîÑ Sections swapped successfully!', 'success');\n        console.log('‚úÖ Sections swapped via drag & drop!');\n        \n        return newOrder;\n      });\n      \n      // Clean up data attributes and visual feedback\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    } else {\n      console.log('üîç No section swap - same position');\n      \n      // Clean up data attributes and visual feedback even if no swap\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('üîç SECTIONS 5&6 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('üîÑ Sections 5&6 swap detected!', { active: active.id, over: over.id });\n      \n      setSections5And6Order(prevOrder => {\n        console.log('üîÑ Previous sections 5&6 order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('üîÑ Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('üîÑ New sections 5&6 order:', newOrder);\n        \n        showNotification('üîÑ Sections 5 and 6 reordered!', 'info');\n        console.log('üîÑ Sections 5&6 reordered via drag & drop!');\n        console.log('üìä New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('üîç No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('üîç LINE ITEM COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('üîÑ Line item column swap detected!', { active: active.id, over: over.id });\n      \n      setLineItemColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('üîÑ Previous line item column order:', items);\n        console.log('üîÄ Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('üîÑ New line item column order:', newOrder);\n        showNotification('üîÑ Line item columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('üîç No line item column swap - same position');\n    }\n  };\n\n  // Handle shipping column drag end\n  const handleShippingColumnDragEnd = (event) => {\n    // Check if this is an add-column event from Section5Shipping\n    if (event.type === 'add-column' && event.newOrder) {\n      console.log('üîç SHIPPING COLUMN ADD DEBUG - New column added:', event.newOrder);\n      setShippingColumnOrder(event.newOrder);\n      showNotification('üö¢ New shipping column added!', 'success');\n      return;\n    }\n    \n    // Check if this is the new event format from Section5Shipping (reordering)\n    if (event.newOrder) {\n      console.log('üîç SHIPPING COLUMN DRAG DEBUG - New order received:', event.newOrder);\n      setShippingColumnOrder(event.newOrder);\n      showNotification('üö¢ Shipping columns reordered!', 'info');\n      return;\n    }\n    \n    // Handle the old event format (fallback)\n    const { active, over } = event;\n    \n    console.log('üîç SHIPPING COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('üîÑ Shipping column swap detected!', { active: active.id, over: over.id });\n      \n      setShippingColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('üîÑ Previous shipping column order:', items);\n        console.log('üîÄ Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('üîÑ New shipping column order:', newOrder);\n        showNotification('üö¢ Shipping columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('üîç No shipping column swap - same position');\n    }\n  };\n\n\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('üîç VENDOR/SHIP-TO DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('üîÑ Vendor/Ship-To section swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('üîÑ Previous vendor/ship-to order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('üîÑ Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('üîÑ New vendor/ship-to order:', newOrder);\n        \n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('üîÑ Vendor and Ship To sections reordered!', 'info');\n        console.log('üîÑ Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('üìä New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('üîç No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('üîç VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('üîÑ Vendor-ShipTo + Shipping Details swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('üîÑ Previous vendor-shipTo + shipping details order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('üîÑ Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('üîÑ New vendor-shipTo + shipping details order:', newOrder);\n        \n        showNotification('üîÑ Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('üîÑ Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('üìä New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('üîç No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('üîÑ MANUAL SWAP FUNCTION CALLED');\n    console.log('üîÑ Before swap - Company fields:', companyFields);\n    console.log('üîÑ Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('üîç Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('üîç Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('üîÑ About to swap fields...');\n    console.log('üîÑ New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('üîÑ New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n              showNotification('üîÑ Sections swapped!', 'info');\n    \n    console.log('üîÑ Sections swapped successfully!');\n    console.log('üìä New Section 1 (was Section 2):', newCompanyFields);\n    console.log('üìä New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('üîÑ Section Swap Details:', {\n      'Section 1 ‚Üí Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 ‚Üí Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n    };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('üîÑ MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('üîÑ Before swap - Vendor fields:', vendorFields);\n    console.log('üîÑ Before swap - Ship To fields:', shipToFields);\n    \n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('üîç Before swap - Vendor field values:', vendorFieldValues);\n    console.log('üîç Before swap - Ship To field values:', shipToFieldValues);\n    \n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n    \n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    \n    showNotification('üîÑ Vendor and Ship To sections swapped!', 'info');\n    \n    console.log('üîÑ Vendor and Ship To sections swapped successfully!');\n    console.log('üìä New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('üìä New Ship To fields (was Vendor):', vendorFieldValues);\n    \n    // Log the swap operation\n    console.log('üîÑ Vendor/Ship-To Swap Details:', {\n      'Vendor ‚Üí Ship To': shipToFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      'Ship To ‚Üí Vendor': vendorFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('üìù Capturing field values from DOM...');\n    \n    // Capture company field values - PRESERVE CURRENT ORDER\n    console.log('üîç DEBUG: Current company fields order before capture:', companyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`üìù Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    console.log('üîç DEBUG: Updated company fields order after capture:', updatedCompanyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`üìù PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`üìù Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`üìù Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('üìù Line items captured:', capturedLineItems);\n    \n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n      \n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      \n      console.log(`üìù Totals field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    \n    console.log('üìù Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n\n  // Unified drag end dispatcher for a single top-level DndContext\n  const handleRootDragEnd = (event) => {\n    const { active } = event;\n    const activeId = active?.id || '';\n    const source = active?.data?.current?.source;\n\n    // Reset section handle dragging state\n    setIsSectionHandleDragging(false);\n    \n    // Clean up all visual feedback states\n    const allSections = document.querySelectorAll('[id^=\"section\"]');\n    allSections.forEach(section => {\n\n      section.removeAttribute('data-is-over');\n      section.removeAttribute('data-is-dragging');\n      \n      // Reset styles\n      section.style.border = '';\n      section.style.backgroundColor = '';\n      section.style.transform = '';\n      section.style.transition = '';\n      section.style.boxShadow = '';\n      \n      // Remove drop indicators\n      const dropIndicator = section.querySelector('.drop-indicator');\n      if (dropIndicator) {\n        dropIndicator.remove();\n      }\n    });\n\n    if (source === 'palette') {\n      handlePaletteDragEnd(event);\n      return;\n    }\n\n    // Sections 1 & 2 swap\n    if (activeId === 'section1' || activeId === 'section2') {\n      handleSectionDragEnd(event);\n      return;\n    }\n    // Vendor-ShipTo + ShippingDetails container swap\n    if (activeId === 'sections3And4' || activeId === 'sections5And6') {\n      handleVendorShipToAndShippingDetailsDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To section reordering\n    if (activeId === 'section3' || activeId === 'section4') {\n      handleVendorShipToSectionDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To individual field drags\n    if (String(activeId).startsWith('vendor-')) {\n      handleVendorDragEnd(event);\n      return;\n    }\n    if (String(activeId).startsWith('ship-to-')) {\n      handleShipToDragEnd(event);\n      return;\n    }\n    // Line item column reorder\n    if (['itemNumber','description','qty','rate','amount'].includes(activeId)) {\n      handleLineItemColumnDragEnd(event);\n      return;\n    }\n    // Comments & totals sections reorder\n    if (activeId === 'section8' || activeId === 'section9') {\n      handleCommentsTotalsDragEnd(event);\n      return;\n    }\n  };\n\n\n\n  // State for tracking section handle drag operations (simplified)\n  const [isSectionHandleDragging, setIsSectionHandleDragging] = useState(false);\n\n  return (\n    <div className={`purchase-order-container ${!sidebarVisible ? 'sidebar-hidden' : ''}`}>\n      <DndContext \n        sensors={sensors} \n        collisionDetection={rectIntersection}\n        onDragCancel={() => {\n          console.log('‚ùå Drag cancelled');\n        }}\n        onDragMove={(event) => {\n          console.log('üîÑ Drag move:', event);\n        }}\n        onDragStart={(event) => {\n          console.log('üöÄ DndContext Drag Start:', event);\n          handleDragStart(event);\n        }}\n        onDragOver={(event) => {\n          console.log('üéØ DndContext Drag Over:', event);\n          handleDragOver(event);\n        }}\n        onDragEnd={(event) => {\n          console.log('üèÅ DndContext Drag End:', event);\n          handleRootDragEnd(event);\n        }}\n      >\n        {console.log('üîß DndContext rendering with:', {\n          sensors: sensors,\n          collisionDetection: closestCenter,\n          hasDragStart: !!handleDragStart,\n          hasDragOver: !!handleDragOver,\n          hasDragEnd: !!handleRootDragEnd,\n          timestamp: new Date().toISOString()\n        })}\n      {/* Available Fields Sidebar Component */}\n      <AvailableFields \n        isVisible={sidebarVisible}\n        onToggleVisibility={toggleSidebar}\n        showNotification={showNotification}\n      />\n\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n        {/* Sidebar toggle is now handled by AvailableFields component */}\n      </header>\n\n      \n\n      {/* Real-time Status Indicator removed per request */}\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section vendor-shipping-columns\">\n              {/* Section-level Drag and Drop */}\n              <SortableContext \n                items={sections1And2Order}\n                strategy={horizontalListSortingStrategy}\n              >\n                {console.log('üîß SortableContext for sections 1&2:', { \n                  items: sections1And2Order, \n                  strategy: 'horizontalListSortingStrategy',\n                  sections1And2OrderType: typeof sections1And2Order,\n                  sections1And2OrderLength: sections1And2Order?.length,\n                  itemsArray: Array.isArray(sections1And2Order) ? sections1And2Order : 'NOT ARRAY',\n                  timestamp: new Date().toISOString()\n                })}\n                {console.log('üîß SortableContext items validation:', {\n                  itemsValid: Array.isArray(sections1And2Order) && sections1And2Order.length > 0,\n                  itemsContent: sections1And2Order,\n                  strategyValid: horizontalListSortingStrategy !== undefined,\n                  timestamp: new Date().toISOString()\n                })}\n                {/* CRITICAL: Render sections dynamically based on sections1And2Order state */}\n                {sections1And2Order.map((sectionId, index) => {\n                  console.log(`üîß Rendering section: ${sectionId} at index ${index}`);\n                  \n                  if (sectionId === 'section1') {\n                    return (\n                      <DraggableSectionWrapper key={`section1-${index}`} id=\"section1\" sectionNumber=\"1\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n                        <Section1CompanyInfo \n                          companyFields={companyFields}\n                          sensors={sensors}\n                          onCompanyDragEnd={handleCompanyDragEnd}\n                          onAddCompanyField={handleAddCompanyField}\n                          onRemoveCompanyField={handleRemoveCompanyField}\n                          onLabelChange={handleCompanyFieldLabelChange}\n                          onContentChange={handleContentChange}\n                          lastModified={lastModified}\n                        />\n                      </DraggableSectionWrapper>\n                    );\n                  } else if (sectionId === 'section2') {\n                    return (\n                      <DraggableSectionWrapper key={`section2-${index}`} id=\"section2\" sectionNumber=\"2\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n                        <Section2PurchaseOrder \n                          purchaseOrderFields={purchaseOrderFields}\n                          sensors={sensors}\n                          onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                          onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                          onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                          onLabelChange={handlePurchaseOrderFieldLabelChange}\n                          onContentChange={handleContentChange}\n                          lastModified={poLastModified}\n                        />\n                      </DraggableSectionWrapper>\n                    );\n                  }\n                  return null;\n                })}\n              </SortableContext>\n            </div>\n          </div>\n\n          {/* Vendor and Ship To Sections (Sections 3 & 4) */}\n          <div className=\"section-container\" style={{ marginTop: '30px' }}>\n            <div className=\"vendor-shipping-columns\">\n              <SortableContext \n                items={vendorShipToSectionOrder}\n                strategy={horizontalListSortingStrategy}\n              >\n                {vendorShipToSectionOrder.map((sectionId, index) => (\n                  <React.Fragment key={`${sectionId}-${index}`}>\n                    {sectionId === 'section3' ? (\n                      <div key={`section3-${index}`} id=\"section3\" className=\"vendor-column\">\n                        <Section3Vendor \n                          vendorFields={vendorFields}\n                          sensors={sensors}\n                          onVendorDragEnd={handleVendorDragEnd}\n                          onAddVendorField={handleAddVendorField}\n                          onRemoveVendorField={handleRemoveVendorField}\n                          onLabelChange={handleVendorFieldLabelChange}\n                          onContentChange={handleContentChange}\n                          lastModified={Date.now()}\n                        />\n                      </div>\n                    ) : sectionId === 'section4' ? (\n                      <div key=\"section4\" id=\"section4\" className=\"ship-to-column\">\n                        <Section4ShipTo \n                          shipToFields={shipToFields}\n                          sensors={sensors}\n                          onShipToDragEnd={handleShipToDragEnd}\n                          onAddShipToField={handleAddShipToField}\n                          onRemoveShipToField={handleRemoveShipToField}\n                          onLabelChange={handleShipToFieldLabelChange}\n                          onContentChange={handleContentChange}\n                          lastModified={Date.now()}\n                        />\n                      </div>\n                    ) : null}\n                  </React.Fragment>\n                ))}\n              </SortableContext>\n            </div>\n          </div>\n\n          {/* Section 5 - Shipping Details */}\n          <div style={{ marginTop: '30px' }}>\n            <DraggableSectionWrapper key=\"section5\" id=\"section5\" sectionNumber=\"5\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n              <div style={{ position: 'relative' }}>\n                <Section5Shipping \n                  shippingColumnOrder={shippingColumnOrder}\n                  onShippingColumnDragEnd={handleShippingColumnDragEnd}\n                />\n              </div>\n            </DraggableSectionWrapper>\n          </div>\n\n          {/* Add Column Button - Positioned right outside Section 5 */}\n          <div style={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            marginBottom: '20px',\n            padding: '10px',\n            backgroundColor: '#f8fafc',\n            border: '1px solid #e5e7eb',\n            borderRadius: '8px',\n            width: '100%'\n          }}>\n            <button \n              className=\"add-column-btn\" \n              style={{\n                backgroundColor: '#3b82f6',\n                color: 'white',\n                border: 'none',\n                padding: '10px 16px',\n                borderRadius: '6px',\n                fontSize: '14px',\n                fontWeight: '600',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '6px',\n                transition: 'all 0.2s ease',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              }}\n              onClick={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                console.log('Add column button clicked from main form!');\n                \n                // Generate a unique ID for the new column\n                const newColumnId = `custom-${Date.now()}`;\n                \n                // Add the new column to the shipping column order\n                setShippingColumnOrder(prevOrder => {\n                  const newOrder = [...prevOrder, newColumnId];\n                  console.log('üö¢ Added new shipping column:', { newColumnId, newOrder });\n                  console.log('üö¢ Current shipping column order:', newOrder);\n                  return newOrder;\n                });\n                \n                // Show success notification\n                showNotification(`üö¢ Added new shipping column: ${newColumnId}`, 'success');\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.backgroundColor = '#1d4ed8';\n                e.target.style.transform = 'translateY(-1px)';\n                e.target.style.boxShadow = '0 4px 8px rgba(0,0,0,0.15)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.backgroundColor = '#3b82f6';\n                e.target.style.transform = 'translateY(0)';\n                e.target.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n              }}\n              title=\"Add new shipping column\"\n            >\n              <span style={{ fontSize: '16px' }}>+</span>\n              Add Column\n            </button>\n          </div>\n\n          {/* Items Table */}\n          <div className=\"sortable-section items-section\" style={{ marginBottom: '20px' }}>\n            <div className=\"section-header\" style={{\n              padding: '12px',\n              backgroundColor: '#f8fafc',\n              borderBottom: '1px solid #e5e7eb',\n              fontWeight: '600',\n              fontSize: '14px',\n              color: '#374151',\n              textAlign: 'center'\n            }}>\n              Line Items\n              <span className=\"drag-indicator\">\n                ::\n              </span>\n            </div>\n            <SortableContext items={lineItemColumnOrder} strategy={verticalListSortingStrategy}>\n              <table className=\"itemtable\">\n              <thead>\n                <tr>\n                  <th></th>\n                  {lineItemColumnOrder.map((columnId, index) => {\n                    const columnConfig = {\n                      itemNumber: { label: 'Item#', colSpan: 3 },\n                      description: { label: 'Description', colSpan: 12 },\n                      qty: { label: 'Qty', colSpan: 2 },\n                      rate: { label: 'Rate', colSpan: 3 },\n                      amount: { label: 'Amount', colSpan: 3 }\n                    };\n                    \n                    const config = columnConfig[columnId];\n                    return (\n                      <th key={`${columnId}-${index}`} colSpan={config.colSpan}>\n                        {config.label}\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {[1, 2, 3, 4, 5].map((row, rowIndex) => (\n                  <tr key={`row-${row}-${rowIndex}`} className=\"draggable-row\">\n                    <td></td>\n                    {lineItemColumnOrder.map((columnId, colIndex) => {\n                      const columnConfig = {\n                        itemNumber: { colSpan: 3, placeholder: 'Item number' },\n                        description: { colSpan: 12, placeholder: 'Item description' },\n                        qty: { colSpan: 2, placeholder: 'Qty' },\n                        rate: { colSpan: 3, placeholder: '$0.00' },\n                        amount: { colSpan: 3, placeholder: '$0.00' }\n                      };\n                      \n                      const config = columnConfig[columnId];\n                      return (\n                        <td key={`${row}-${columnId}-${rowIndex}-${colIndex}`} colSpan={config.colSpan} data-column={columnId}>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder={config.placeholder} />\n                        </td>\n                      );\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            </SortableContext>\n          </div>\n\n\n\n          {/* Comments and Totals - Sections 8 & 9 */}\n          <SortableContext items={commentsTotalsSectionOrder} strategy={horizontalListSortingStrategy}>\n            <div className=\"comments-totals-section\" style={{ display: 'flex', gap: '20px' }}>\n                          {commentsTotalsSectionOrder.map((sectionId, index) => {\n              if (sectionId === 'section8') {\n                return (\n                  <div key={`section8-${index}`} id=\"section8\" className=\"sortable-section comments-section\" style={{ flex: 1 }}>\n                    <DraggableSectionHeader id=\"section8\">\n                      Comments or Special Instructions ::\n                    </DraggableSectionHeader>\n                    <div className=\"section-content\">\n                      <div className=\"comments-content\">\n                        <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n                      </div>\n                    </div>\n                  </div>\n                );\n              } else if (sectionId === 'section9') {\n                return (\n                  <div key={`section9-${index}`} id=\"section9\" className=\"sortable-section totals-section\" style={{ flex: 1 }}>\n                    <DraggableSectionHeader id=\"section9\">\n                      Totals ::\n                    </DraggableSectionHeader>\n                    <div className=\"section-content\">\n                      <div className=\"total-row\" data-field=\"subtotal\">\n                        <span>SUBTOTAL:</span>\n                        <span className=\"calculated-field\">$0.00</span>\n                      </div>\n                      <div className=\"total-row\" data-field=\"tax\">\n                        <span>TAX:</span>\n                        <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                      </div>\n                      <div className=\"total-row\" data-field=\"shipping\">\n                        <span>SHIPPING:</span>\n                        <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                      </div>\n                      <div className=\"total-row\" data-field=\"other\">\n                        <span>OTHER:</span>\n                        <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                      </div>\n                      <div className=\"total-row total-final\" data-field=\"total\">\n                        <span>TOTAL:</span>\n                        <span className=\"calculated-field total-field\">$0.00</span>\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n              return null;\n            })}\n            </div>\n          </SortableContext>\n\n\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <div className=\"contact-content\">\n              <strong>Contact Information:</strong>\n              <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"button-section\">\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? 'üëÅÔ∏è Hide Preview' : 'üëÅÔ∏è Show Preview'}\n            </button>\n            <button className=\"btn\" onClick={handleAIFill}>\n              ü§ñ AI Fill\n            </button>\n            <button className=\"btn export-btn\" onClick={exportToXML}>\n              üìÑ Generate XML\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                üìù Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  üóëÔ∏è Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change, index) => (\n                  <div key={`${change.id}-${index}`} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">‚Üí</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* XML Output Modal */}\n          {showXMLModal && (\n            <div className=\"xml-modal-overlay\" onClick={closeXMLModal}>\n              <div className=\"xml-modal\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"xml-modal-header\">\n                  <h3>üìÑ Generated XML Output</h3>\n                  <button className=\"xml-modal-close\" onClick={closeXMLModal}>√ó</button>\n                </div>\n                <div className=\"xml-modal-content\">\n                  <div className=\"xml-output-container\">\n                    <pre className=\"xml-code\">{xmlOutput}</pre>\n                  </div>\n                </div>\n                <div className=\"xml-modal-actions\">\n                  <button className=\"btn copy-btn\" onClick={copyXMLToClipboard}>\n                    üìã Copy XML\n                  </button>\n                  <button className=\"btn download-btn\" onClick={downloadXML}>\n                    üì• Download XML\n                  </button>\n                  <button className=\"btn close-btn\" onClick={closeXMLModal}>\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n\n\n\n\n        </div>\n      </div>\n      </DndContext>\n      \n      {/* Notification Container */}\n      <div id=\"notification-container\"></div>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}