{"ast":null,"code":"import _objectSpread from\"/Users/waleed/Documents/GitHub/Cadbury3/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import'./PurchaseOrderForm.css';// Import modular components\nimport Section1CompanyInfo from'./components/Section1CompanyInfo';import Section2PurchaseOrder from'./components/Section2PurchaseOrder';import Section3VendorShipTo from'./components/Section3VendorShipTo';// Import custom hooks\nimport{useDragAndDropSensors,useCompanyFieldsDragEnd,usePurchaseOrderFieldsDragEnd,useVendorFieldsDragEnd,useShipToFieldsDragEnd}from'./hooks/useDragAndDrop';import{DndContext,closestCenter}from'@dnd-kit/core';import{SortableContext,verticalListSortingStrategy}from'@dnd-kit/sortable';// Main Purchase Order Form Component\n// Main Purchase Order Form Component\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function PurchaseOrderForm(){// ============================================================================\n// STATE MANAGEMENT\n// ============================================================================\n// Company fields state for Section 1\nconst[companyFields,setCompanyFields]=useState([{id:'company-name',label:'Company Name:',placeholder:'Enter company name',value:'Acme Corporation'},{id:'company-address',label:'Street Address:',placeholder:'Enter street address',value:'123 Business Street'},{id:'company-city-state',label:'City, ST ZIP:',placeholder:'City, State ZIP',value:'New York, NY 10001'},{id:'company-phone',label:'Phone:',placeholder:'(555) 123-4567',value:'(212) 555-0123'},{id:'company-fax',label:'Fax:',placeholder:'(555) 123-4567',value:'(212) 555-0124'},{id:'company-website',label:'Website:',placeholder:'www.example.com',value:'www.acmecorp.com'}]);// Track last modification time for company fields\nconst[lastModified,setLastModified]=useState(new Date().toISOString());// Track last modification time for purchase order fields\nconst[poLastModified,setPoLastModified]=useState(new Date().toISOString());// Purchase Order fields state for Section 2\nconst[purchaseOrderFields,setPurchaseOrderFields]=useState([{id:'po-title',label:'Purchase Order',placeholder:'',isTitle:true,value:'Purchase Order'},{id:'po-date',label:'DATE:',placeholder:'MM/DD/YYYY',value:'12/15/2024'},{id:'po-number',label:'PO #:',placeholder:'PO#123456',value:'PO#2024-001'}]);// Vendor fields state for Section 3\nconst[vendorFields,setVendorFields]=useState([{id:'vendor-company',label:'Company:',placeholder:'Vendor name',value:'Global Supplies Inc.'},{id:'vendor-contact',label:'Contact:',placeholder:'Contact person',value:'John Smith'},{id:'vendor-address',label:'Address:',placeholder:'Street address',value:'456 Vendor Avenue'},{id:'vendor-city-state',label:'City/State:',placeholder:'City, ST ZIP',value:'Los Angeles, CA 90210'},{id:'vendor-phone',label:'Phone:',placeholder:'(555) 123-4567',value:'(310) 555-9876'}]);// Ship To fields state for Section 3\nconst[shipToFields,setShipToFields]=useState([{id:'ship-to-name',label:'Name:',placeholder:'Contact name',value:'Sarah Johnson'},{id:'ship-to-company',label:'Company:',placeholder:'Shipping company',value:'Acme Corporation'},{id:'ship-to-address',label:'Address:',placeholder:'Street address',value:'123 Business Street'},{id:'ship-to-city-state',label:'City/State:',placeholder:'City, ST ZIP',value:'New York, NY 10001'},{id:'ship-to-phone',label:'Phone:',placeholder:'(555) 123-4567',value:'(212) 555-0123'}]);// ============================================================================\n// CUSTOM HOOKS\n// ============================================================================\nconst sensors=useDragAndDropSensors();const handleVendorDragEnd=useVendorFieldsDragEnd(setVendorFields);const handleShipToDragEnd=useShipToFieldsDragEnd(setShipToFields);// ============================================================================\n// COMPANY FIELD MANAGEMENT FUNCTIONS\n// ============================================================================\n// Helper function to update timestamp when company fields change\nconst updateCompanyFieldsTimestamp=()=>{setLastModified(new Date().toISOString());};// Add new company field\nconst handleAddCompanyField=newField=>{setCompanyFields(prevFields=>[...prevFields,newField]);updateCompanyFieldsTimestamp();logChange('field-add',newField.id,'',newField.label,'company');console.log('➕ Added new company field:',newField);};// Remove company field\nconst handleRemoveCompanyField=fieldId=>{setCompanyFields(prevFields=>{const fieldToRemove=prevFields.find(field=>field.id===fieldId);showNotification(\"\\uD83D\\uDDD1\\uFE0F Removed company field: \\\"\".concat(fieldToRemove===null||fieldToRemove===void 0?void 0:fieldToRemove.label,\"\\\"\"),'warning');console.log('🗑️ Removed company field:',fieldToRemove);return prevFields.filter(field=>field.id!==fieldId);});updateCompanyFieldsTimestamp();};// ============================================================================\n// ENHANCED CHANGE TRACKING\n// ============================================================================\n// State for tracking all changes\nconst[changeHistory,setChangeHistory]=useState([]);const[isPreviewMode,setIsPreviewMode]=useState(false);const[lastExportTime,setLastExportTime]=useState(null);// Function to log changes with timestamps\nconst logChange=(changeType,fieldId,oldValue,newValue,section)=>{const change={id:Date.now(),timestamp:new Date().toISOString(),type:changeType,fieldId,oldValue,newValue,section};setChangeHistory(prev=>[change,...prev.slice(0,49)]);// Keep last 50 changes\nconsole.log('📝 Change logged:',change);};// Enhanced field update functions with change logging\nconst handleCompanyFieldLabelChange=(fieldId,newLabel)=>{setCompanyFields(prevFields=>{const oldField=prevFields.find(field=>field.id===fieldId);const oldLabel=oldField?oldField.label:'';logChange('label-change',fieldId,oldLabel,newLabel,'company');return prevFields.map(field=>field.id===fieldId?_objectSpread(_objectSpread({},field),{},{label:newLabel}):field);});updateCompanyFieldsTimestamp();};const handlePurchaseOrderFieldLabelChange=(fieldId,newLabel)=>{setPurchaseOrderFields(prevFields=>{const oldField=prevFields.find(field=>field.id===fieldId);const oldLabel=oldField?oldField.label:'';logChange('label-change',fieldId,oldLabel,newLabel,'purchase-order');return prevFields.map(field=>field.id===fieldId?_objectSpread(_objectSpread({},field),{},{label:newLabel}):field);});updatePurchaseOrderFieldsTimestamp();};// Function to handle content changes in editable fields\nconst handleContentChange=(fieldId,newContent,section)=>{// Find the field and log the change\nlet oldValue='';let fieldType='';if(section==='company'){const field=companyFields.find(f=>f.id===fieldId);if(field){oldValue=field.value||'';fieldType=field.label;}}else if(section==='purchase-order'){const field=purchaseOrderFields.find(f=>f.id===fieldId);if(field){oldValue=field.value||'';fieldType=field.label;}}if(oldValue!==newContent){logChange('content-change',fieldId,oldValue,newContent,section);}};// Function to toggle preview mode\nconst togglePreviewMode=()=>{setIsPreviewMode(!isPreviewMode);};// Function to clear change history\nconst clearChangeHistory=()=>{setChangeHistory([]);console.log('🗑️ Change history cleared');};// Show notification function\nconst showNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';// Remove any existing notifications\nconst existingNotification=document.querySelector('.notification');if(existingNotification){existingNotification.remove();}// Create notification element\nconst notification=document.createElement('div');notification.className=\"notification notification-\".concat(type);notification.innerHTML=\"\\n      <div class=\\\"notification-content\\\">\\n        <span class=\\\"notification-message\\\">\".concat(message,\"</span>\\n        <button class=\\\"notification-close\\\" onclick=\\\"this.parentElement.parentElement.remove()\\\">\\xD7</button>\\n      </div>\\n    \");// Add styles\nnotification.style.cssText=\"\\n      position: fixed;\\n      top: 20px;\\n      right: 20px;\\n      background: \".concat(type==='success'?'#28a745':type==='error'?'#dc3545':'#17a2b8',\";\\n      color: white;\\n      padding: 12px 20px;\\n      border-radius: 5px;\\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\\n      z-index: 10000;\\n      font-family: Arial, sans-serif;\\n      font-size: 14px;\\n      max-width: 300px;\\n      animation: slideIn 0.3s ease-out;\\n    \");// Add animation styles\nconst style=document.createElement('style');style.textContent=\"\\n      @keyframes slideIn {\\n        from {\\n          transform: translateX(100%);\\n          opacity: 0;\\n        }\\n        to {\\n          transform: translateX(0);\\n          opacity: 1;\\n        }\\n      }\\n      .notification-content {\\n        display: flex;\\n        align-items: center;\\n        justify-content: space-between;\\n      }\\n      .notification-close {\\n        background: none;\\n        border: none;\\n        color: white;\\n        font-size: 18px;\\n        cursor: pointer;\\n        margin-left: 10px;\\n        padding: 0;\\n        width: 20px;\\n        height: 20px;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n      }\\n      .notification-close:hover {\\n        opacity: 0.8;\\n      }\\n    \";document.head.appendChild(style);// Add to page\ndocument.body.appendChild(notification);// Auto-remove after 3 seconds\nsetTimeout(()=>{if(notification.parentElement){notification.remove();}},3000);};// Get current form statistics\nconst getFormStats=()=>{return{totalFields:companyFields.length+purchaseOrderFields.length+vendorFields.length+shipToFields.length,companyFields:companyFields.length,purchaseOrderFields:purchaseOrderFields.length,vendorFields:vendorFields.length,shipToFields:shipToFields.length,totalChanges:changeHistory.length,lastModified:Math.max(new Date(lastModified).getTime(),new Date(poLastModified).getTime())};};// Handle company field drag and drop with timestamp update\nconst handleCompanyDragEnd=event=>{useCompanyFieldsDragEnd(setCompanyFields)(event);updateCompanyFieldsTimestamp();// Only log significant reordering, not every small drag\nif(event.active.id!==event.over.id){console.log('🔄 Company fields reordered');}};// ============================================================================\n// SUMMARY LOGGING FUNCTION\n// ============================================================================\n// Function to log a summary of all field states\nconst logFieldSummary=()=>{console.log('📊 FIELD SUMMARY:',{company:{total:companyFields.length,lastModified:new Date(lastModified).toLocaleString(),fields:companyFields.map(f=>({id:f.id,label:f.label}))},purchaseOrder:{total:purchaseOrderFields.length,lastModified:new Date(poLastModified).toLocaleString(),fields:purchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle}))}});};// Log summary on component mount\nReact.useEffect(()=>{logFieldSummary();},[]);// Only run once on mount\n// ============================================================================\n// PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n// ============================================================================\n// Helper function to update timestamp when purchase order fields change\nconst updatePurchaseOrderFieldsTimestamp=()=>{setPoLastModified(new Date().toISOString());};// Add new purchase order field\nconst handleAddPurchaseOrderField=newField=>{setPurchaseOrderFields(prevFields=>[...prevFields,newField]);updatePurchaseOrderFieldsTimestamp();console.log('➕ Added new purchase order field:',newField);};// Remove purchase order field\nconst handleRemovePurchaseOrderField=fieldId=>{setPurchaseOrderFields(prevFields=>{const fieldToRemove=prevFields.find(field=>field.id===fieldId);console.log('🗑️ Removed purchase order field:',fieldToRemove);return prevFields.filter(field=>field.id!==fieldId);});updatePurchaseOrderFieldsTimestamp();};// Handle purchase order field drag and drop with timestamp update\nconst handlePurchaseOrderDragEnd=event=>{usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);updatePurchaseOrderFieldsTimestamp();// Only log significant reordering, not every small drag\nif(event.active.id!==event.over.id){console.log('🔄 Purchase order fields reordered');}};// ============================================================================\n// SECTION-LEVEL DRAG AND DROP\n// ============================================================================\n// State for section order\nconst[sectionOrder,setSectionOrder]=useState(['section1','section2']);// Function to handle section reordering\nconst handleSectionDragEnd=event=>{const{active,over}=event;console.log('🔍 DRAG DEBUG - Event received:',{active,over});if(active.id!==over.id){console.log('🔄 Section swap detected!',{active:active.id,over:over.id});setSectionOrder(prevOrder=>{console.log('🔄 Previous section order:',prevOrder);const oldIndex=prevOrder.indexOf(active.id);const newIndex=prevOrder.indexOf(over.id);console.log('🔄 Index calculations:',{oldIndex,newIndex});const newOrder=[...prevOrder];newOrder.splice(oldIndex,1);newOrder.splice(newIndex,0,active.id);console.log('🔄 New section order:',newOrder);// Swap the actual field data when sections are reordered\nif(active.id==='section1'&&over.id==='section2'){console.log('🔄 SWAP TYPE: Section 1 → Section 2');console.log('🔄 Before swap - Company fields:',companyFields);console.log('🔄 Before swap - Purchase Order fields:',purchaseOrderFields);// Section 1 moved to position 2\nconst companyFieldValues=companyFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const purchaseOrderFieldValues=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle,// Explicitly preserve isTitle property\nvalue:element?element.textContent.trim():''});});console.log('🔍 Before swap - Purchase Order fields:',purchaseOrderFieldValues);console.log('🔍 Title field check:',purchaseOrderFieldValues.find(f=>f.isTitle));// IMPORTANT: Create new field arrays to avoid reference issues\nconst newCompanyFields=purchaseOrderFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle// Ensure isTitle is preserved\n}));const newPurchaseOrderFields=companyFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:false// Company fields should never be title\n}));console.log('🔄 About to swap fields...');console.log('🔄 New company fields (with title check):',newCompanyFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));console.log('🔄 New PO fields (with title check):',newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));setCompanyFields(newCompanyFields);setPurchaseOrderFields(newPurchaseOrderFields);console.log('🔄 Fields swapped in state!');// Update timestamps\nsetLastModified(new Date().toISOString());setPoLastModified(new Date().toISOString());showNotification('🔄 Sections swapped!','info');console.log('🔄 Sections swapped via drag & drop!');console.log('📊 New Section 1 (was Section 2):',newCompanyFields);console.log('📊 New Section 2 (was Section 1):',newPurchaseOrderFields);}else if(active.id==='section2'&&over.id==='section1'){console.log('🔄 SWAP TYPE: Section 2 → Section 1');console.log('🔄 Before swap - Company fields:',companyFields);console.log('🔄 Before swap - Purchase Order fields:',purchaseOrderFields);// Section 2 moved to position 1\nconst companyFieldValues=companyFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const purchaseOrderFieldValues=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle,// Explicitly preserve isTitle property\nvalue:element?element.textContent.trim():''});});console.log('🔍 Before swap - Purchase Order fields:',purchaseOrderFieldValues);console.log('🔍 Title field check:',purchaseOrderFieldValues.find(f=>f.isTitle));// IMPORTANT: Create new field arrays to avoid reference issues\nconst newCompanyFields=purchaseOrderFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle// Ensure isTitle is preserved\n}));const newPurchaseOrderFields=companyFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:false// Company fields should never be title\n}));console.log('🔄 About to swap fields...');console.log('🔄 New company fields (with title check):',newCompanyFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));console.log('🔄 New PO fields (with title check):',newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));setCompanyFields(newCompanyFields);setPurchaseOrderFields(newPurchaseOrderFields);console.log('🔄 Fields swapped in state!');// Update timestamps\nsetLastModified(new Date().toISOString());setPoLastModified(new Date().toISOString());showNotification('🔄 Sections swapped!','info');console.log('🔄 Sections swapped via drag & drop!');console.log('📊 New Section 1 (was Section 2):',newCompanyFields);console.log('📊 New Section 2 (was Section 1):',newPurchaseOrderFields);}return newOrder;});}else{console.log('🔍 No section swap - same position');}};// ============================================================================\n// SECTION SWAPPING FUNCTION\n// ============================================================================\n// Function to swap Section 1 and Section 2\nconst handleSwapSections=()=>{console.log('🔄 MANUAL SWAP FUNCTION CALLED');console.log('🔄 Before swap - Company fields:',companyFields);console.log('🔄 Before swap - Purchase Order fields:',purchaseOrderFields);// Store current values before swapping\nconst companyFieldValues=companyFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{value:element?element.textContent.trim():''});});const purchaseOrderFieldValues=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);return _objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle,// Explicitly preserve isTitle property\nvalue:element?element.textContent.trim():''});});console.log('🔍 Before swap - Purchase Order fields:',purchaseOrderFieldValues);console.log('🔍 Title field check:',purchaseOrderFieldValues.find(f=>f.isTitle));// IMPORTANT: Create new field arrays to avoid reference issues\nconst newCompanyFields=purchaseOrderFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:field.isTitle// Ensure isTitle is preserved\n}));const newPurchaseOrderFields=companyFields.map(field=>_objectSpread(_objectSpread({},field),{},{isTitle:false// Company fields should never be title\n}));console.log('🔄 About to swap fields...');console.log('🔄 New company fields (with title check):',newCompanyFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));console.log('🔄 New PO fields (with title check):',newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,isTitle:f.isTitle})));// Swap the fields - keep Purchase Order section intact (title + date + po#)\nsetCompanyFields(newCompanyFields);setPurchaseOrderFields(newPurchaseOrderFields);// Update timestamps\nsetLastModified(new Date().toISOString());setPoLastModified(new Date().toISOString());showNotification('🔄 Sections swapped!','info');console.log('🔄 Sections swapped successfully!');console.log('📊 New Section 1 (was Section 2):',newCompanyFields);console.log('📊 New Section 2 (was Section 1):',newPurchaseOrderFields);// Log the swap operation\nconsole.log('🔄 Section Swap Details:',{'Section 1 → Section 2':newCompanyFields.map(f=>({id:f.id,label:f.label,value:f.value,isTitle:f.isTitle})),'Section 2 → Section 1':newPurchaseOrderFields.map(f=>({id:f.id,label:f.label,value:f.value,isTitle:f.isTitle}))});};// ============================================================================\n// FIELD VALUE CAPTURE\n// ============================================================================\n// Function to capture current field values from the DOM\nconst captureFieldValues=()=>{console.log('📝 Capturing field values from DOM...');// Capture company field values\nconst updatedCompanyFields=companyFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Company field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture purchase order field values\nconst updatedPurchaseOrderFields=purchaseOrderFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD PO field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture vendor field values\nconst updatedVendorFields=vendorFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Vendor field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Capture ship-to field values\nconst updatedShipToFields=shipToFields.map(field=>{const element=document.getElementById(field.id);const value=element?element.textContent.trim():'';console.log(\"\\uD83D\\uDCDD Ship-to field \\\"\".concat(field.label,\"\\\": \\\"\").concat(value,\"\\\"\"));return _objectSpread(_objectSpread({},field),{},{value});});// Update state with captured values\nsetCompanyFields(updatedCompanyFields);setPurchaseOrderFields(updatedPurchaseOrderFields);setVendorFields(updatedVendorFields);setShipToFields(updatedShipToFields);console.log('📝 Field values captured and state updated!');return{companyFields:updatedCompanyFields,purchaseOrderFields:updatedPurchaseOrderFields,vendorFields:updatedVendorFields,shipToFields:updatedShipToFields};};return/*#__PURE__*/_jsxs(\"div\",{className:\"purchase-order-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Purchase Order Management System\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Create, edit, and manage purchase orders with ease\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"status-indicator\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"status-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83D\\uDCCA Total Fields:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:getFormStats().totalFields})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83C\\uDFE2 Company:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:getFormStats().companyFields})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83D\\uDCCB Purchase Order:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:getFormStats().purchaseOrderFields})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83D\\uDCDD Changes:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:getFormStats().totalChanges})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83D\\uDD52 Last Modified:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:new Date(getFormStats().lastModified).toLocaleTimeString()})]}),lastExportTime&&/*#__PURE__*/_jsxs(\"div\",{className:\"status-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"\\uD83D\\uDCC4 Last Export:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value\",children:new Date(lastExportTime).toLocaleTimeString()})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"header-section\",children:/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragEnd:handleSectionDragEnd,children:/*#__PURE__*/_jsxs(SortableContext,{items:sectionOrder,strategy:verticalListSortingStrategy,children:[/*#__PURE__*/_jsx(\"div\",{id:\"section1\",className:\"sortable-section\",children:/*#__PURE__*/_jsx(Section1CompanyInfo,{companyFields:companyFields,sensors:sensors,onCompanyDragEnd:handleCompanyDragEnd,onAddCompanyField:handleAddCompanyField,onRemoveCompanyField:handleRemoveCompanyField,onLabelChange:handleCompanyFieldLabelChange,onContentChange:handleContentChange,lastModified:lastModified})}),/*#__PURE__*/_jsx(\"div\",{id:\"section2\",className:\"sortable-section\",children:/*#__PURE__*/_jsx(Section2PurchaseOrder,{purchaseOrderFields:purchaseOrderFields,sensors:sensors,onPurchaseOrderDragEnd:handlePurchaseOrderDragEnd,onAddPurchaseOrderField:handleAddPurchaseOrderField,onRemovePurchaseOrderField:handleRemovePurchaseOrderField,onLabelChange:handlePurchaseOrderFieldLabelChange,onContentChange:handleContentChange,lastModified:poLastModified})})]})})})}),/*#__PURE__*/_jsx(Section3VendorShipTo,{vendorFields:vendorFields,shipToFields:shipToFields,sensors:sensors,onVendorDragEnd:handleVendorDragEnd,onShipToDragEnd:handleShipToDragEnd}),/*#__PURE__*/_jsxs(\"div\",{className:\"shipping-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"REQUISITIONER\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"SHIP VIA\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"F.O.B.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"SHIPPING TERMS\"}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Requisitioner name\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Shipping method\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"FOB terms\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"shipping-field\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Shipping terms\"})})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"itemtable\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{}),/*#__PURE__*/_jsx(\"th\",{colSpan:\"3\",children:\"Item#\"}),/*#__PURE__*/_jsx(\"th\",{colSpan:\"12\",children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{colSpan:\"2\",children:\"Qty\"}),/*#__PURE__*/_jsx(\"th\",{colSpan:\"3\",children:\"Rate\"}),/*#__PURE__*/_jsx(\"th\",{colSpan:\"3\",children:\"Amount\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:[1,2,3,4,5].map(row=>/*#__PURE__*/_jsxs(\"tr\",{className:\"draggable-row\",children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{colSpan:\"3\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Item number\"})}),/*#__PURE__*/_jsx(\"td\",{colSpan:\"12\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Item description\"})}),/*#__PURE__*/_jsx(\"td\",{colSpan:\"2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Qty\"})}),/*#__PURE__*/_jsx(\"td\",{colSpan:\"3\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})}),/*#__PURE__*/_jsx(\"td\",{colSpan:\"3\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})})]},row))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"comments-totals-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"comments-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:\"Comments or Special Instructions\"}),/*#__PURE__*/_jsx(\"div\",{className:\"comments-content\",children:/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Enter comments or special instructions...\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"totals-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"SUBTOTAL:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"calculated-field\",children:\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"TAX:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"SHIPPING:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"OTHER:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"$0.00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-row total-final\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"TOTAL:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"calculated-field total-field\",children:\"$0.00\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"contact-section\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Contact Information:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{className:\"editable-field\",contentEditable:\"true\",\"data-placeholder\":\"Enter contact information here\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"button-section\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn preview-btn\",onClick:togglePreviewMode,children:isPreviewMode?'👁️ Hide Preview':'👁️ Show Preview'})}),changeHistory.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"change-history-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[\"\\uD83D\\uDCDD Change History (\",changeHistory.length,\" changes)\",/*#__PURE__*/_jsx(\"button\",{className:\"clear-history-btn\",onClick:clearChangeHistory,children:\"\\uD83D\\uDDD1\\uFE0F Clear\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"change-list\",children:[changeHistory.slice(0,10).map(change=>/*#__PURE__*/_jsxs(\"div\",{className:\"change-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"change-time\",children:new Date(change.timestamp).toLocaleTimeString()}),/*#__PURE__*/_jsx(\"span\",{className:\"change-type\",children:change.type}),/*#__PURE__*/_jsx(\"span\",{className:\"change-field\",children:change.fieldId}),/*#__PURE__*/_jsx(\"span\",{className:\"change-old\",children:change.oldValue||'empty'}),/*#__PURE__*/_jsx(\"span\",{className:\"change-arrow\",children:\"\\u2192\"}),/*#__PURE__*/_jsx(\"span\",{className:\"change-new\",children:change.newValue||'empty'})]},change.id)),changeHistory.length>10&&/*#__PURE__*/_jsxs(\"div\",{className:\"change-more\",children:[\"... and \",changeHistory.length-10,\" more changes\"]})]})]})]})})]});}export default PurchaseOrderForm;","map":{"version":3,"names":["React","useState","useEffect","Section1CompanyInfo","Section2PurchaseOrder","Section3VendorShipTo","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","SortableContext","verticalListSortingStrategy","jsx","_jsx","jsxs","_jsxs","PurchaseOrderForm","companyFields","setCompanyFields","id","label","placeholder","value","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","purchaseOrderFields","setPurchaseOrderFields","isTitle","vendorFields","setVendorFields","shipToFields","setShipToFields","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","handleAddCompanyField","newField","prevFields","logChange","console","log","handleRemoveCompanyField","fieldId","fieldToRemove","find","field","showNotification","concat","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","changeType","oldValue","newValue","section","change","now","timestamp","type","prev","slice","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","map","_objectSpread","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","f","togglePreviewMode","clearChangeHistory","message","arguments","length","undefined","existingNotification","document","querySelector","remove","notification","createElement","className","innerHTML","style","cssText","textContent","head","appendChild","body","setTimeout","parentElement","getFormStats","totalFields","totalChanges","Math","max","getTime","handleCompanyDragEnd","event","active","over","logFieldSummary","company","total","toLocaleString","fields","purchaseOrder","handleAddPurchaseOrderField","handleRemovePurchaseOrderField","handlePurchaseOrderDragEnd","sectionOrder","setSectionOrder","handleSectionDragEnd","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","companyFieldValues","element","getElementById","trim","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSwapSections","captureFieldValues","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","children","toLocaleTimeString","collisionDetection","onDragEnd","items","strategy","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","onVendorDragEnd","onShipToDragEnd","contentEditable","colSpan","row","onClick"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\n\n\n// Main Purchase Order Form Component\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: 'Acme Corporation' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '123 Business Street' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: 'New York, NY 10001' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '(212) 555-0123' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '(212) 555-0124' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: 'www.acmecorp.com' }\n  ]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '12/15/2024' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: 'PO#2024-001' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: 'Global Supplies Inc.' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: 'John Smith' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '456 Vendor Avenue' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: 'Los Angeles, CA 90210' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '(310) 555-9876' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: 'Sarah Johnson' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: 'Acme Corporation' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '123 Business Street' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: 'New York, NY 10001' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '(212) 555-0123' }\n  ]);\n\n\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChange('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      showNotification(`🗑️ Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n\n\n\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Company fields reordered');\n      \n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Purchase order fields reordered');\n\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for section order\n  const [sectionOrder, setSectionOrder] = useState(['section1', 'section2']);\n  \n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', { active: active.id, over: over.id });\n      \n      setSectionOrder(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New section order:', newOrder);\n        \n        // Swap the actual field data when sections are reordered\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n          \n          // Section 1 moved to position 2\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle, // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n          \n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          \n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          \n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          \n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          \n          console.log('🔄 Fields swapped in state!');\n          \n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          \n          showNotification('🔄 Sections swapped!', 'info');\n          \n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n          \n          // Section 2 moved to position 1\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle, // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n          \n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          \n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          \n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          \n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          \n          console.log('🔄 Fields swapped in state!');\n          \n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          \n          showNotification('🔄 Sections swapped!', 'info');\n          \n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        }\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n              showNotification('🔄 Sections swapped!', 'info');\n    \n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n  };\n\n\n  \n\n  \n\n  \n\n  \n\n\n\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n    \n    // Capture company field values\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    \n    console.log('📝 Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields\n    };\n  };\n\n\n\n  return (\n    <div className=\"purchase-order-container\">\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n      </header>\n\n      {/* Real-time Status Indicator */}\n      <div className=\"status-indicator\">\n        <div className=\"status-grid\">\n          <div className=\"status-item\">\n            <span className=\"status-label\">📊 Total Fields:</span>\n            <span className=\"status-value\">{getFormStats().totalFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">🏢 Company:</span>\n            <span className=\"status-value\">{getFormStats().companyFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">📋 Purchase Order:</span>\n            <span className=\"status-value\">{getFormStats().purchaseOrderFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">📝 Changes:</span>\n            <span className=\"status-value\">{getFormStats().totalChanges}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">🕒 Last Modified:</span>\n            <span className=\"status-value\">\n              {new Date(getFormStats().lastModified).toLocaleTimeString()}\n            </span>\n          </div>\n          {lastExportTime && (\n            <div className=\"status-item\">\n              <span className=\"status-label\">📄 Last Export:</span>\n              <span className=\"status-value\">\n                {new Date(lastExportTime).toLocaleTimeString()}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section\">\n              {/* Section-level Drag and Drop */}\n              <DndContext \n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragEnd={handleSectionDragEnd}\n              >\n                <SortableContext \n                  items={sectionOrder}\n                  strategy={verticalListSortingStrategy}\n                >\n                  {/* Section 1: Company Info */}\n                  <div id=\"section1\" className=\"sortable-section\">\n                    <Section1CompanyInfo \n                      companyFields={companyFields}\n                      sensors={sensors}\n                      onCompanyDragEnd={handleCompanyDragEnd}\n                      onAddCompanyField={handleAddCompanyField}\n                      onRemoveCompanyField={handleRemoveCompanyField}\n                      onLabelChange={handleCompanyFieldLabelChange}\n                      onContentChange={handleContentChange}\n                      lastModified={lastModified}\n                    />\n                  </div>\n                  \n                  {/* Section 2: Purchase Order */}\n                  <div id=\"section2\" className=\"sortable-section\">\n                    <Section2PurchaseOrder \n                      purchaseOrderFields={purchaseOrderFields}\n                      sensors={sensors}\n                      onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                      onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                      onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                      onLabelChange={handlePurchaseOrderFieldLabelChange}\n                      onContentChange={handleContentChange}\n                      lastModified={poLastModified}\n                    />\n                  </div>\n                </SortableContext>\n              </DndContext>\n            </div>\n          </div>\n\n          {/* Section 3: Vendor and Ship To */}\n          <Section3VendorShipTo \n            vendorFields={vendorFields}\n            shipToFields={shipToFields}\n            sensors={sensors}\n            onVendorDragEnd={handleVendorDragEnd}\n            onShipToDragEnd={handleShipToDragEnd}\n          />\n\n          {/* Shipping Details */}\n          <div className=\"shipping-details\">\n            <div className=\"section-header\">REQUISITIONER</div>\n            <div className=\"section-header\">SHIP VIA</div>\n            <div className=\"section-header\">F.O.B.</div>\n            <div className=\"section-header\">SHIPPING TERMS</div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Requisitioner name\" /></div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping method\" /></div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"FOB terms\" /></div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping terms\" /></div>\n          </div>\n\n          {/* Items Table */}\n          <table className=\"itemtable\">\n            <thead>\n              <tr>\n                <th></th>\n                <th colSpan=\"3\">Item#</th>\n                <th colSpan=\"12\">Description</th>\n                <th colSpan=\"2\">Qty</th>\n                <th colSpan=\"3\">Rate</th>\n                <th colSpan=\"3\">Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              {[1, 2, 3, 4, 5].map((row) => (\n                <tr key={row} className=\"draggable-row\">\n                  <td></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Item number\" /></td>\n                  <td colSpan=\"12\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Item description\" /></td>\n                  <td colSpan=\"2\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Qty\" /></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" /></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" /></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          {/* Comments and Totals */}\n          <div className=\"comments-totals-section\">\n            <div className=\"comments-section\">\n              <div className=\"section-header\">Comments or Special Instructions</div>\n              <div className=\"comments-content\">\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n              </div>\n            </div>\n            \n            <div className=\"totals-section\">\n              <div className=\"total-row\">\n                <span>SUBTOTAL:</span>\n                <span className=\"calculated-field\">$0.00</span>\n              </div>\n              <div className=\"total-row\">\n                <span>TAX:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row\">\n                <span>SHIPPING:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row\">\n                <span>OTHER:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row total-final\">\n                <span>TOTAL:</span>\n                <span className=\"calculated-field total-field\">$0.00</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <strong>Contact Information:</strong><br />\n            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n          </div>\n\n          {/* Preview Button */}\n          <div className=\"button-section\">\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'}\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                📝 Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  🗑️ Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change) => (\n                  <div key={change.id} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">→</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n\n\n\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}