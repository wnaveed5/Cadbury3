{"ast":null,"code":"var _jsxFileName = \"/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s7 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport './section-styles.css';\nimport './header-colors.css';\nimport './header-color-picker.css';\nimport HeaderColorPicker from './components/HeaderColorPicker';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3Vendor from './components/Section3Vendor';\nimport Section4ShipTo from './components/Section4ShipTo';\nimport Section5Shipping from './components/Section5Shipping';\nimport AvailableFields from './components/AvailableFields';\nimport { useAIProvider } from './hooks/useAIProvider';\n\n// Import custom hooks\nimport { useDragAndDropSensors, useCompanyFieldsDragEnd, usePurchaseOrderFieldsDragEnd, useVendorFieldsDragEnd, useShipToFieldsDragEnd } from './hooks/useDragAndDrop';\nimport { DndContext, closestCenter, useDraggable, rectIntersection } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n// Draggable Section Wrapper Component for Sections\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DraggableSectionWrapper({\n  children,\n  id,\n  sectionNumber,\n  isSectionHandleDragging = false,\n  showDragHandle = true\n}) {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id,\n    data: {\n      type: 'section',\n      sectionNumber: sectionNumber\n    }\n  });\n\n  // Map section numbers to proper CSS classes\n  const getSectionClass = sectionNum => {\n    switch (sectionNum) {\n      case 1:\n        return 'section-1-company-info';\n      case 2:\n        return 'section-2-purchase-order';\n      default:\n        return `section-${sectionNum}`;\n    }\n  };\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.6 : 1,\n    zIndex: isDragging ? 1000 : 1,\n    cursor: isDragging ? 'grabbing' : 'grab',\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    border: isDragging ? '3px solid #ff6b6b' : '2px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: isDragging ? 'rgba(255, 107, 107, 0.1)' : 'transparent'\n  };\n\n  // Log the actual attributes and listeners objects\n  console.log(`🔧 Detailed useSortable data for ${id}:`, {\n    attributes: attributes,\n    listeners: listeners,\n    setNodeRef: setNodeRef,\n    style: style\n  });\n\n  // Debug: Check if listeners have the right properties\n  if (listeners) {\n    console.log(`🔧 Listeners for ${id}:`, {\n      hasOnMouseDown: !!listeners.onMouseDown,\n      hasOnMouseMove: !!listeners.onMouseMove,\n      hasOnMouseUp: !!listeners.onMouseUp,\n      hasOnTouchStart: !!listeners.onTouchStart,\n      hasOnTouchMove: !!listeners.onTouchMove,\n      hasOnTouchEnd: !!listeners.onTouchEnd,\n      listenerKeys: Object.keys(listeners),\n      listenerValues: Object.values(listeners).map(v => typeof v)\n    });\n  } else {\n    console.log(`❌ No listeners for ${id}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: `sortable-section ${getSectionClass(sectionNumber)} ${isDragging ? 'dragging' : ''}`,\n    \"data-section\": sectionNumber,\n    \"data-testid\": `draggable-section-${id}`,\n    \"data-dragging\": isDragging,\n    ...attributes,\n    ...listeners,\n    onClick: () => console.log(`🖱️ Clicked on section ${id}`),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-content\",\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n// Sortable shipping column header component for shipping details\n_s(DraggableSectionWrapper, \"9J/a3p2iAf7PAeqkD/B/H2PQwgk=\", false, function () {\n  return [useSortable];\n});\n_c = DraggableSectionWrapper;\nfunction SortableShippingColumnHeader({\n  children,\n  id\n}) {\n  _s2();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    className: `sortable-column-header ${isDragging ? 'dragging' : ''}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n// Draggable Section Header Component for Comments and Totals\n_s2(SortableShippingColumnHeader, \"wZ9LrlAdu45h+k5IBlwhyTPFbVs=\", false, function () {\n  return [useSortable];\n});\n_c2 = SortableShippingColumnHeader;\nfunction DraggableSectionHeader({\n  children,\n  id\n}) {\n  _s3();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"section-header\",\n    ...attributes,\n    ...listeners,\n    title: \"Drag to reorder sections\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n// Draggable Group Handle Component for Sections 3 & 4\n_s3(DraggableSectionHeader, \"jv8kPLlEaSR8/o9+iCuLK6K7PFU=\", false, function () {\n  return [useSortable];\n});\n_c3 = DraggableSectionHeader;\nfunction DraggableGroupHandle({\n  children,\n  id,\n  label\n}) {\n  _s4();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({\n    id,\n    data: {\n      type: 'section-group',\n      label: label\n    }\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n    position: 'relative'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...attributes,\n      ...listeners,\n      style: {\n        position: 'absolute',\n        left: '-40px',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        width: '30px',\n        height: '60px',\n        backgroundColor: 'white',\n        borderRadius: '6px',\n        cursor: 'grab',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        gap: '4px',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n        zIndex: 10,\n        border: '2px solid #8b5cf6'\n      },\n      title: `Drag to move ${label} as a group`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#8b5cf6',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        children: \"\\u22EE\\u22EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#8b5cf6',\n          fontSize: '10px',\n          writingMode: 'vertical-rl',\n          textOrientation: 'mixed',\n          fontWeight: '600'\n        },\n        children: \"GROUP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n\n// Main Purchase Order Form Component\n_s4(DraggableGroupHandle, \"9J/a3p2iAf7PAeqkD/B/H2PQwgk=\", false, function () {\n  return [useSortable];\n});\n_c4 = DraggableGroupHandle;\nfunction PurchaseOrderForm() {\n  _s7();\n  var _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n\n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([{\n    id: 'company-name',\n    label: 'Company Name:',\n    placeholder: 'Enter company name',\n    value: ''\n  }, {\n    id: 'company-address',\n    label: 'Street Address:',\n    placeholder: 'Enter street address',\n    value: ''\n  }, {\n    id: 'company-city-state',\n    label: 'City, ST ZIP:',\n    placeholder: 'City, State ZIP',\n    value: ''\n  }, {\n    id: 'company-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }, {\n    id: 'company-fax',\n    label: 'Fax:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }, {\n    id: 'company-website',\n    label: 'Website:',\n    placeholder: 'www.example.com',\n    value: ''\n  }]);\n\n  // Debug: Log company fields state changes\n  useEffect(() => {\n    console.log('🔄 Company fields state updated:', companyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n  }, [companyFields]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // ============================================================================\n  // SIDEBAR MANAGEMENT\n  // ============================================================================\n\n  // State for sidebar visibility on mobile\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n\n  // Toggle sidebar visibility\n  const toggleSidebar = () => {\n    setSidebarVisible(!sidebarVisible);\n  };\n\n  // Helper: slugify and ensure unique id for new fields\n  const generateUniqueFieldId = (baseLabel, existingIds) => {\n    const slugBase = String(baseLabel).toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');\n    let candidate = slugBase || 'field';\n    let counter = 1;\n    while (existingIds.includes(candidate)) {\n      candidate = `${slugBase}-${counter++}`;\n    }\n    return candidate;\n  };\n\n  // ============================================================================\n  // DROPPABLE ZONES\n  // ============================================================================\n\n  // Handle palette drag end to add fields to target sections\n  const handlePaletteDragEnd = event => {\n    var _active$data;\n    const {\n      active,\n      over\n    } = event;\n    console.log('🎯 Palette drag end:', {\n      active,\n      over\n    });\n    if (!(active !== null && active !== void 0 && (_active$data = active.data) !== null && _active$data !== void 0 && _active$data.current) || !(over !== null && over !== void 0 && over.id)) {\n      console.log('❌ Missing active data or over id');\n      return;\n    }\n    const data = active.data.current;\n    if (data.source !== 'palette') {\n      console.log('❌ Not a palette source:', data.source);\n      return;\n    }\n    const baseLabel = data.label;\n    console.log('🎯 Dropping on zone:', over.id);\n\n    // Check if dropping on section elements\n    if (over.id === 'section1') {\n      console.log('✅ Adding to company section');\n      const existingIds = companyFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddCompanyField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Company Info`, 'success');\n    } else if (over.id === 'section2') {\n      console.log('✅ Adding to purchase order section');\n      const existingIds = purchaseOrderFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddPurchaseOrderField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Purchase Order`, 'success');\n    } else if (over.id === 'section3') {\n      console.log('✅ Adding to vendor section');\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddVendorField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else if (over.id === 'section4') {\n      console.log('✅ Adding to ship-to section');\n      const existingIds = shipToFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = {\n        id,\n        label: `${baseLabel}:`,\n        placeholder: baseLabel,\n        value: ''\n      };\n      handleAddShipToField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Ship-To section`, 'success');\n    } else {\n      console.log('❌ Unknown drop zone:', over.id);\n    }\n  };\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([{\n    id: 'po-title',\n    label: 'Purchase Order',\n    placeholder: '',\n    isTitle: true,\n    value: 'Purchase Order'\n  }, {\n    id: 'po-date',\n    label: 'DATE:',\n    placeholder: 'MM/DD/YYYY',\n    value: ''\n  }, {\n    id: 'po-number',\n    label: 'PO #:',\n    placeholder: 'PO#123456',\n    value: ''\n  }]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([{\n    id: 'vendor-company',\n    label: 'Company:',\n    placeholder: 'Vendor name',\n    value: ''\n  }, {\n    id: 'vendor-contact',\n    label: 'Contact:',\n    placeholder: 'Contact person',\n    value: ''\n  }, {\n    id: 'vendor-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: ''\n  }, {\n    id: 'vendor-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: ''\n  }, {\n    id: 'vendor-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([{\n    id: 'ship-to-name',\n    label: 'Name:',\n    placeholder: 'Contact name',\n    value: ''\n  }, {\n    id: 'ship-to-company',\n    label: 'Company:',\n    placeholder: 'Shipping company',\n    value: ''\n  }, {\n    id: 'ship-to-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: ''\n  }, {\n    id: 'ship-to-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: ''\n  }, {\n    id: 'ship-to-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: ''\n  }]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([{\n    id: 'subtotal',\n    label: 'SUBTOTAL:',\n    placeholder: '$0.00',\n    value: '$0.00',\n    isCalculated: true\n  }, {\n    id: 'tax',\n    label: 'TAX:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'shipping',\n    label: 'SHIPPING:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'other',\n    label: 'OTHER:',\n    placeholder: '$0.00',\n    value: ''\n  }, {\n    id: 'total',\n    label: 'TOTAL:',\n    placeholder: '$0.00',\n    value: '$0.00',\n    isCalculated: true\n  }]);\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n\n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = newField => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    logChange('field-add', newField.id, '', newField.label, 'company');\n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = fieldId => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed company field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n\n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n\n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Function to add changes to change history (for section operations)\n  const addToChangeHistory = (changeType, fieldId, newValue) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue: '',\n      newValue,\n      section: 'section'\n    };\n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Section change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'vendor') {\n      const field = vendorFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'ship-to') {\n      const field = shipToFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n\n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n\n  // Function to display XML output in a modal\n  const displayXMLOutput = xml => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n\n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n\n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n\n  // Function to download XML file\n  const downloadXML = () => {\n    var _purchaseOrderFields$;\n    const blob = new Blob([xmlOutput], {\n      type: 'application/xml'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${((_purchaseOrderFields$ = purchaseOrderFields.find(f => f.id === 'po-number')) === null || _purchaseOrderFields$ === void 0 ? void 0 : _purchaseOrderFields$.value) || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // =========================================================================\n  // AI SUGGESTIONS\n  // =========================================================================\n  const {\n    getFieldSuggestions\n  } = useAIProvider();\n  const applySuggestionsToFields = (suggestionsMap, fields) => {\n    if (!Array.isArray(fields)) return fields;\n    return fields.map(f => {\n      const newVal = suggestionsMap === null || suggestionsMap === void 0 ? void 0 : suggestionsMap[f.id];\n      if (typeof newVal === 'string') {\n        return {\n          ...f,\n          value: newVal\n        };\n      }\n      return f;\n    });\n  };\n  const handleAIFill = async () => {\n    try {\n      showNotification('🤖 Fetching AI suggestions...', 'info');\n      const payload = {\n        context: 'purchase_order',\n        companyFields,\n        purchaseOrderFields,\n        vendorFields,\n        shipToFields,\n        shippingFields: [\n        // Include default shipping fields\n        {\n          id: 'requisitioner',\n          label: 'Requisitioner name'\n        }, {\n          id: 'shipVia',\n          label: 'Shipping method'\n        }, {\n          id: 'fob',\n          label: 'FOB terms'\n        }, {\n          id: 'shippingTerms',\n          label: 'Shipping terms'\n        },\n        // Include custom columns dynamically\n        ...shippingColumnOrder.filter(id => id.startsWith('custom-')).map(id => ({\n          id,\n          label: `Custom ${id.replace('custom-', '')}`\n        }))]\n      };\n      const {\n        suggestions\n      } = await getFieldSuggestions(payload);\n      try {\n        console.debug('🧪 AI suggestions keys:', Object.keys(suggestions || {}));\n        // Preview a few critical values to verify mapping\n        console.debug('🧪 AI preview:', {\n          company: {\n            name: suggestions === null || suggestions === void 0 ? void 0 : suggestions['company-name'],\n            phone: suggestions === null || suggestions === void 0 ? void 0 : suggestions['company-phone']\n          },\n          po: {\n            date: suggestions === null || suggestions === void 0 ? void 0 : suggestions['po-date'],\n            number: suggestions === null || suggestions === void 0 ? void 0 : suggestions['po-number']\n          },\n          shipping: {\n            requisitioner: suggestions === null || suggestions === void 0 ? void 0 : suggestions.requisitioner,\n            shipVia: suggestions === null || suggestions === void 0 ? void 0 : suggestions.shipVia\n          },\n          totals: {\n            subtotal: suggestions === null || suggestions === void 0 ? void 0 : suggestions.subtotal,\n            tax: suggestions === null || suggestions === void 0 ? void 0 : suggestions.tax,\n            total: suggestions === null || suggestions === void 0 ? void 0 : suggestions.total\n          },\n          line1: {\n            item: suggestions === null || suggestions === void 0 ? void 0 : suggestions.itemNumber1,\n            desc: suggestions === null || suggestions === void 0 ? void 0 : suggestions.description1,\n            qty: suggestions === null || suggestions === void 0 ? void 0 : suggestions.qty1,\n            rate: suggestions === null || suggestions === void 0 ? void 0 : suggestions.rate1,\n            amount: suggestions === null || suggestions === void 0 ? void 0 : suggestions.amount1\n          }\n        });\n      } catch {}\n\n      // 1) Apply to Section 1–3 states (company/po/vendor/ship-to) with mapping logs\n      setCompanyFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(companyFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setPurchaseOrderFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(purchaseOrderFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setVendorFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(vendorFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n      setShipToFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(shipToFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // 2) Shipping details (DOM spans)\n      const write = (el, val) => {\n        if (el && typeof val === 'string') el.textContent = val;\n      };\n      const shipSelectors = key => [`.shipping-details [data-field=\"${key}\"] .editable-field`, `.shipping-field[data-field=\"${key}\"] .editable-field`, `#shipping-${key}`, `.shipping-field-${key} .editable-field`];\n\n      // Use dynamic shipping column order instead of hardcoded array\n      const shipOrder = shippingColumnOrder;\n      shipOrder.forEach((key, idx) => {\n        let el = null,\n          used = '';\n\n        // Handle custom columns (those that start with 'custom-')\n        let suggestionKey = key;\n        if (key.startsWith('custom-')) {\n          // For custom columns, try to find a relevant suggestion or generate one\n          suggestionKey = 'customField'; // Use a generic key for AI suggestions\n        }\n        for (const sel of shipSelectors(key)) {\n          el = document.querySelector(sel);\n          if (el) {\n            used = sel;\n            break;\n          }\n        }\n        // Fallback to positional selector used in your JSX\n        if (!el) {\n          const nth = idx + 1; // 1-based\n          // Prefer :nth-of-type within container to ignore headers\n          const selA = `.shipping-details .shipping-field:nth-of-type(${nth}) .editable-field`;\n          el = document.querySelector(selA);\n          if (el) {\n            used = selA;\n          } else {\n            // Last resort: original child-based selector\n            const selB = `.shipping-field:nth-child(${nth}) .editable-field`;\n            el = document.querySelector(selB);\n            if (el) used = selB;\n          }\n        }\n\n        // Get the suggestion value, with fallback for custom columns\n        let suggestionValue = suggestions[suggestionKey];\n        if (key.startsWith('custom-') && !suggestionValue) {\n          // Generate a placeholder value for custom columns\n          suggestionValue = `[Custom ${key.replace('custom-', '')}]`;\n        }\n        write(el, suggestionValue);\n        try {\n          const count = document.querySelectorAll('.shipping-details .shipping-field').length;\n          console.debug('🧭 map(shippingDetails):', {\n            key,\n            selector: used || '(not found)',\n            value: suggestionValue,\n            fieldsInDOM: count,\n            isCustom: key.startsWith('custom-')\n          });\n        } catch {}\n      });\n\n      // 3) Line items (first 3 rows only)\n      // Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\n      const setCell = (row, col, val) => {\n        const selector = `.itemtable tbody tr:nth-child(${row}) td[data-column=\"${col}\"] .editable-field`;\n        const cell = document.querySelector(selector);\n        if (cell && typeof val === 'string') {\n          cell.textContent = val;\n        }\n        try {\n          console.debug('🧭 map(lineItem):', {\n            row,\n            col,\n            selector,\n            value: val\n          });\n        } catch {}\n      };\n      const li = (i, k) => suggestions === null || suggestions === void 0 ? void 0 : suggestions[`${k}${i}`];\n      for (let i = 1; i <= 3; i++) {\n        setCell(i, 'itemNumber', li(i, 'itemNumber'));\n        setCell(i, 'description', li(i, 'description'));\n        setCell(i, 'qty', li(i, 'qty'));\n        setCell(i, 'rate', li(i, 'rate'));\n        setCell(i, 'amount', li(i, 'amount'));\n      }\n\n      // 4) Totals (state + DOM)\n      setTotalsFields(prev => {\n        const map = {\n          subtotal: suggestions.subtotal,\n          tax: suggestions.tax,\n          shipping: suggestions.shipping,\n          other: suggestions.other,\n          total: suggestions.total\n        };\n        const next = prev.map(f => map[f.id] ? {\n          ...f,\n          value: map[f.id]\n        } : f);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && map[id] !== undefined) {\n              console.debug('🧭 map(totalsFields):', {\n                id,\n                from: before[id],\n                to: after[id],\n                sourceKey: id\n              });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // Write editable totals into DOM for non-calculated rows\n      const domTotals = field => document.querySelector(`.totals-section .total-row[data-field=\"${field}\"] .editable-field`);\n      ['tax', 'shipping', 'other'].forEach(key => {\n        const sel = `.totals-section .total-row[data-field=\"${key}\"] .editable-field`;\n        write(domTotals(key), suggestions[key]);\n        try {\n          console.debug('🧭 map(totalsDOM):', {\n            key,\n            selector: sel,\n            value: suggestions[key]\n          });\n        } catch {}\n      });\n\n      // Calculated-looking spans (subtotal, total) in your layout use .calculated-field\n      const calcTotal = document.querySelector(`.totals-section .total-row[data-field=\"total\"] .total-field`);\n      const calcSub = document.querySelector(`.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`);\n      write(calcSub, suggestions.subtotal);\n      write(calcTotal, suggestions.total);\n      try {\n        console.debug('🧭 map(totalsDOM):', {\n          key: 'subtotal',\n          selector: `.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`,\n          value: suggestions.subtotal\n        });\n        console.debug('🧭 map(totalsDOM):', {\n          key: 'total',\n          selector: `.totals-section .total-row[data-field=\"total\"] .total-field`,\n          value: suggestions.total\n        });\n      } catch {}\n\n      // 5) Comments, Contact Info (DOM)\n      const commentsEl = document.querySelector('.comments-content .editable-field');\n      const contactEl = document.querySelector('.contact-section .editable-field');\n      write(commentsEl, suggestions.comments);\n      write(contactEl, suggestions.contactInfo);\n      try {\n        console.debug('🧭 map(comments):', {\n          selector: '.comments-content .editable-field',\n          value: suggestions.comments\n        });\n        console.debug('🧭 map(contactInfo):', {\n          selector: '.contact-section .editable-field',\n          value: suggestions.contactInfo\n        });\n      } catch {}\n\n      // 6) Bump timestamps\n      updateCompanyFieldsTimestamp();\n      updatePurchaseOrderFieldsTimestamp();\n      showNotification('✅ AI suggestions applied', 'success');\n    } catch (e) {\n      console.error('AI fill failed:', e);\n      showNotification(`❌ AI fill failed: ${e.message}`, 'error');\n    }\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n\n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('📄 Starting XML generation...');\n\n      // Capture current field values first\n      const capturedData = captureFieldValues();\n\n      // Prepare data for XML generation\n      // Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\n      const headerSections = Array.from(document.querySelectorAll('.header-section .sortable-section'));\n      const visualSections1And2 = headerSections.map(el => el.id).filter(id => id === 'section1' || id === 'section2');\n      const sections1And2ForExport = visualSections1And2.length === 2 ? visualSections1And2 : sections1And2Order;\n\n      // Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\n      const vendorShipToSections = Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));\n      const visualSections3And4 = vendorShipToSections.map(el => el.id).filter(id => id === 'section3' || id === 'section4');\n      const sections3And4ForExport = visualSections3And4.length === 2 ? visualSections3And4 : vendorShipToSectionOrder;\n\n      // Helpers for DOM reads\n      const getText = sel => {\n        var _document$querySelect, _document$querySelect2;\n        return ((_document$querySelect = document.querySelector(sel)) === null || _document$querySelect === void 0 ? void 0 : (_document$querySelect2 = _document$querySelect.textContent) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.trim()) || '';\n      };\n\n      // Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\n      const normalizedLineItems = (capturedData.lineItems || []).map(row => ({\n        // original UI keys\n        itemNumber: row.itemNumber || '',\n        description: row.description || '',\n        qty: row.qty || row.quantity || '',\n        rate: row.rate || row.unitPrice || '',\n        amount: row.amount || row.total || '',\n        // template-expected keys\n        quantity: row.quantity || row.qty || '',\n        unitPrice: row.unitPrice || row.rate || '',\n        total: row.total || row.amount || ''\n      }));\n      const exportData = {\n        ...capturedData,\n        // Add major sections order for group swapping\n        majorSectionsOrder: majorSectionsOrder,\n        // New state for sections 3+4 group swapping with section 5\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2ForExport,\n          // Use current visual order to ensure XML matches UI\n          sections3And4: sections3And4ForExport,\n          // Use current visual order to ensure XML matches UI\n          sections5And6: sections5And6Order,\n          // Use actual state for sections 5&6\n          sections8And9: commentsTotalsSectionOrder,\n          // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder,\n          // Use actual state for line item columns\n          shippingColumns: shippingColumnOrder // Use actual state for shipping columns\n        },\n        // CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\n        fieldOrder: {\n          company: companyFieldOrder,\n          // Preserve company field order independently of section position\n          purchaseOrder: purchaseOrderFieldOrder,\n          // Preserve PO field order independently of section position\n          vendor: vendorFields.map(f => f.id),\n          // Vendor field order\n          shipTo: shipToFields.map(f => f.id) // Ship-to field order\n        },\n        // Add normalized line items (support both key schemes)\n        lineItems: normalizedLineItems,\n        // Shipping details (prefer data-field; fall back handled in XML builder too)\n        // Capture all shipping columns dynamically, including custom ones\n        ...(() => {\n          const shippingData = {};\n          shippingColumnOrder.forEach(columnId => {\n            const value = getText(`.section-5 [data-field=\"${columnId}\"] .editable-field`);\n            shippingData[columnId] = value;\n          });\n          return shippingData;\n        })(),\n        // Totals: read what the user sees\n        subtotal: getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field') || '$0.00',\n        tax: getText('.totals-section .total-row[data-field=\"tax\"] .editable-field') || '$0.00',\n        shipping: getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field') || '$0.00',\n        other: getText('.totals-section .total-row[data-field=\"other\"] .editable-field') || '$0.00',\n        total: getText('.totals-section .total-row[data-field=\"total\"] .total-field') || '$0.00',\n        comments: getText('.comments-content .editable-field'),\n        contactInfo: getText('.contact-section .editable-field')\n      };\n      console.debug('🔎 Export DOM reads:', {\n        requisitioner: exportData.requisitioner,\n        shipVia: exportData.shipVia,\n        fob: exportData.fob,\n        shippingTerms: exportData.shippingTerms,\n        subtotal: exportData.subtotal,\n        tax: exportData.tax,\n        shipping: exportData.shipping,\n        other: exportData.other,\n        total: exportData.total\n      });\n      console.log('📄 Export data prepared:', exportData);\n      console.log('🔀 Major sections order being sent to XML:', exportData.majorSectionsOrder);\n      console.log('🔀 Section order being sent to XML:', exportData.sectionOrder);\n      console.log('🔀 Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('🔀 Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('🔀 Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n      console.log('🔀 Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('🔀 Shipping columns order:', exportData.sectionOrder.shippingColumns);\n      console.log('🔀 Line items data:', exportData.lineItems);\n\n      // CRITICAL: Log field order information\n      console.log('🔀 Field order being sent to XML:', exportData.fieldOrder);\n      console.log('🔀 Company field order:', exportData.fieldOrder.company);\n      console.log('🔀 Purchase order field order:', exportData.fieldOrder.purchaseOrder);\n      console.log('🔀 Vendor field order:', exportData.fieldOrder.vendor);\n      console.log('🔀 Ship-to field order:', exportData.fieldOrder.shipTo);\n\n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n\n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n\n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add to notification container\n    const container = document.getElementById('notification-container');\n    if (container) {\n      container.appendChild(notification);\n    } else {\n      // Fallback to body if container not found\n      document.body.appendChild(notification);\n    }\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = event => {\n    _s5();\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n\n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setCompanyFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        console.log('🔄 Company field order updated:', {\n          oldIndex,\n          newIndex,\n          newOrder\n        });\n        return newOrder;\n      });\n      console.log('🔄 Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n\n  // Function to log a summary of all field states\n  _s5(handleCompanyDragEnd, \"Z4WIFLscuzsxuDjcfj/36TQtLNg=\", false, function () {\n    return [useCompanyFieldsDragEnd];\n  });\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({\n          id: f.id,\n          label: f.label\n        }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({\n          id: f.id,\n          label: f.label,\n          isTitle: f.isTitle\n        }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = newField => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = fieldId => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed purchase order field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // VENDOR FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Add new vendor field\n  const handleAddVendorField = newField => {\n    setVendorFields(prevFields => [...prevFields, newField]);\n    console.log('➕ Added new vendor field:', newField);\n    showNotification(`➕ Added vendor field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove vendor field\n  const handleRemoveVendorField = fieldId => {\n    setVendorFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed vendor field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed vendor field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle vendor field label changes\n  const handleVendorFieldLabelChange = (fieldId, newLabel) => {\n    setVendorFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'vendor');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n  };\n\n  // ============================================================================\n  // SHIP-TO FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Add new ship-to field\n  const handleAddShipToField = newField => {\n    setShipToFields(prevFields => [...prevFields, newField]);\n    console.log('➕ Added new ship-to field:', newField);\n    showNotification(`➕ Added ship-to field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove ship-to field\n  const handleRemoveShipToField = fieldId => {\n    setShipToFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed ship-to field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed ship-to field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle ship-to field label changes\n  const handleShipToFieldLabelChange = (fieldId, newLabel) => {\n    setShipToFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'ship-to');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = event => {\n    _s6();\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n\n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setPurchaseOrderFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        console.log('🔄 Purchase order field order updated:', {\n          oldIndex,\n          newIndex,\n          newOrder\n        });\n        return newOrder;\n      });\n      console.log('🔄 Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n\n  // State for vendor/ship-to section order\n  _s6(handlePurchaseOrderDragEnd, \"v6fWquKCV6fyV8vMqH2r576JyB4=\", false, function () {\n    return [usePurchaseOrderFieldsDragEnd];\n  });\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n  const [vendorShipToShippingGroupOrder, setVendorShipToShippingGroupOrder] = useState(['vendor-ship-to-shipping-group']);\n\n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n\n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5']);\n\n  // State for major sections order (vendor-shipto-group and shipping-section)\n  const [majorSectionsOrder, setMajorSectionsOrder] = useState(['vendor-shipto-group', 'shipping-section']);\n\n  // State for vendor-ship-to and shipping-details sections order (simplified after removing section 7)\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['section5']);\n\n  // CRITICAL: Add field order state management (same pattern as section order)\n  // State for company field order (preserves drag-and-drop order independently of section position)\n  const [companyFieldOrder, setCompanyFieldOrder] = useState([]);\n\n  // State for purchase order field order (preserves drag-and-drop order independently of section position)\n  const [purchaseOrderFieldOrder, setPurchaseOrderFieldOrder] = useState([]);\n\n  // Initialize field order states with current field IDs\n  React.useEffect(() => {\n    setCompanyFieldOrder(companyFields.map(field => field.id));\n  }, [companyFields]);\n  React.useEffect(() => {\n    setPurchaseOrderFieldOrder(purchaseOrderFields.map(field => field.id));\n  }, [purchaseOrderFields]);\n\n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState(['itemNumber', 'description', 'qty', 'rate', 'amount']);\n\n  // Log line item column order changes\n  useEffect(() => {\n    console.log('🔀 Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n\n  // Shipping column order state\n  const [shippingColumnOrder, setShippingColumnOrder] = useState(['requisitioner', 'shipVia', 'fob', 'shippingTerms']);\n\n  // Log shipping column order changes\n  useEffect(() => {\n    console.log('🚢 Shipping column order updated:', shippingColumnOrder);\n  }, [shippingColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle drag start\n  const handleDragStart = event => {\n    var _active$data2;\n    const {\n      active\n    } = event;\n    console.log('🚀 DRAG START:', {\n      active: active.id,\n      activeData: active === null || active === void 0 ? void 0 : (_active$data2 = active.data) === null || _active$data2 === void 0 ? void 0 : _active$data2.current,\n      timestamp: new Date().toISOString()\n    });\n\n    // Add dragging state to the dragged element\n    if (active.id === 'section1' || active.id === 'section2') {\n      const element = document.getElementById(active.id);\n      if (element) {\n        element.setAttribute('data-is-dragging', 'true');\n        console.log('✅ Added dragging state to:', active.id);\n\n        // Add visual feedback\n        element.style.border = '3px solid #ff6b6b';\n        element.style.backgroundColor = 'rgba(255, 107, 107, 0.1)';\n      }\n    }\n  };\n\n  // Function to handle drag over\n  const handleDragOver = event => {\n    var _active$data3, _over$data;\n    const {\n      active,\n      over\n    } = event;\n    console.log('🎯 DRAG OVER EVENT:', {\n      active: active === null || active === void 0 ? void 0 : active.id,\n      over: over === null || over === void 0 ? void 0 : over.id,\n      activeData: active === null || active === void 0 ? void 0 : (_active$data3 = active.data) === null || _active$data3 === void 0 ? void 0 : _active$data3.current,\n      overData: over === null || over === void 0 ? void 0 : (_over$data = over.data) === null || _over$data === void 0 ? void 0 : _over$data.current,\n      timestamp: new Date().toISOString()\n    });\n\n    // Handle section reordering drag over\n    if (active.id === 'section1' || active.id === 'section2') {\n      if (over && (over.id === 'section1' || over.id === 'section2')) {\n        console.log('🎯 Section DRAG OVER:', {\n          active: active.id,\n          over: over.id,\n          timestamp: new Date().toISOString()\n        });\n\n        // Add over state to the target element\n        const targetElement = document.getElementById(over.id);\n        if (targetElement) {\n          targetElement.setAttribute('data-is-over', 'true');\n\n          // Enhanced visual feedback for section reordering\n          targetElement.style.border = '3px solid #4ecdc4';\n          targetElement.style.backgroundColor = 'rgba(78, 205, 196, 0.15)';\n          targetElement.style.transform = 'scale(1.01)';\n          targetElement.style.transition = 'all 0.2s ease-in-out';\n          targetElement.style.boxShadow = '0 6px 20px rgba(78, 205, 196, 0.3)';\n        }\n      }\n    }\n  };\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = event => {\n    var _active$data4, _over$data2;\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 SECTION DRAG DEBUG - Event received:', {\n      activeId: active === null || active === void 0 ? void 0 : active.id,\n      overId: over === null || over === void 0 ? void 0 : over.id,\n      activeData: active === null || active === void 0 ? void 0 : (_active$data4 = active.data) === null || _active$data4 === void 0 ? void 0 : _active$data4.current,\n      overData: over === null || over === void 0 ? void 0 : (_over$data2 = over.data) === null || _over$data2 === void 0 ? void 0 : _over$data2.current,\n      timestamp: new Date().toISOString()\n    });\n    if (!active || !over) {\n      console.log('❌ Missing active or over in section drag');\n      return;\n    }\n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSections1And2Order(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        if (oldIndex === -1 || newIndex === -1) {\n          console.log('❌ Invalid indices found');\n          return prevOrder;\n        }\n        const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\n        console.log('🔄 New section order:', newOrder);\n        console.log('✅ Section swap successful!');\n        showNotification('🔄 Sections swapped successfully!', 'success');\n        console.log('✅ Sections swapped via drag & drop!');\n        return newOrder;\n      });\n\n      // Clean up data attributes and visual feedback\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    } else {\n      console.log('🔍 No section swap - same position');\n\n      // Clean up data attributes and visual feedback even if no swap\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New sections 5&6 order:', newOrder);\n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:', {\n      active: active.id,\n      over: over.id\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Line item column swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setLineItemColumnOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        console.log('🔄 Previous line item column order:', items);\n        console.log('🔀 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        console.log('🔄 New line item column order:', newOrder);\n        showNotification('🔄 Line item columns reordered!', 'info');\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No line item column swap - same position');\n    }\n  };\n\n  // Handle shipping column drag end\n  const handleShippingColumnDragEnd = event => {\n    // Check if this is an add-column event from Section5Shipping\n    if (event.type === 'add-column' && event.newOrder) {\n      console.log('🔍 SHIPPING COLUMN ADD DEBUG - New column added:', event.newOrder);\n      setShippingColumnOrder(event.newOrder);\n      showNotification('🚢 New shipping column added!', 'success');\n      return;\n    }\n\n    // Check if this is the new event format from Section5Shipping (reordering)\n    if (event.newOrder) {\n      console.log('🔍 SHIPPING COLUMN DRAG DEBUG - New order received:', event.newOrder);\n      setShippingColumnOrder(event.newOrder);\n      showNotification('🚢 Shipping columns reordered!', 'info');\n      return;\n    }\n\n    // Handle the old event format (fallback)\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 SHIPPING COLUMN DRAG DEBUG - Event received:', {\n      active: active.id,\n      over: over.id\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Shipping column swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setShippingColumnOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        console.log('🔄 Previous shipping column order:', items);\n        console.log('🔀 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        console.log('🔄 New shipping column order:', newOrder);\n        showNotification('🚢 Shipping columns reordered!', 'info');\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No shipping column swap - same position');\n    }\n  };\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New vendor/ship-to order:', newOrder);\n\n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('🔄 Previous vendor-shipTo + shipping details order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New vendor-shipTo + shipping details order:', newOrder);\n        showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n\n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle,\n        // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n\n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n\n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    showNotification('🔄 Sections swapped!', 'info');\n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n\n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      }))\n    });\n  };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n\n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n\n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n\n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n\n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value\n      }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n\n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n\n    // Capture company field values - PRESERVE CURRENT ORDER\n    console.log('🔍 DEBUG: Current company fields order before capture:', companyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n    console.log('🔍 DEBUG: Updated company fields order after capture:', updatedCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label\n    })));\n\n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('📝 Line items captured:', capturedLineItems);\n\n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n\n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      console.log(`📝 Totals field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    console.log('📝 Field values captured and state updated!');\n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n\n  // Unified drag end dispatcher for a single top-level DndContext\n  const handleRootDragEnd = event => {\n    var _active$data5, _active$data5$current;\n    const {\n      active\n    } = event;\n    const activeId = (active === null || active === void 0 ? void 0 : active.id) || '';\n    const source = active === null || active === void 0 ? void 0 : (_active$data5 = active.data) === null || _active$data5 === void 0 ? void 0 : (_active$data5$current = _active$data5.current) === null || _active$data5$current === void 0 ? void 0 : _active$data5$current.source;\n\n    // Reset section handle dragging state\n    setIsSectionHandleDragging(false);\n\n    // Clean up all visual feedback states\n    const allSections = document.querySelectorAll('[id^=\"section\"]');\n    allSections.forEach(section => {\n      section.removeAttribute('data-is-over');\n      section.removeAttribute('data-is-dragging');\n\n      // Reset styles\n      section.style.border = '';\n      section.style.backgroundColor = '';\n      section.style.transform = '';\n      section.style.transition = '';\n      section.style.boxShadow = '';\n\n      // Remove drop indicators\n      const dropIndicator = section.querySelector('.drop-indicator');\n      if (dropIndicator) {\n        dropIndicator.remove();\n      }\n    });\n    if (source === 'palette') {\n      handlePaletteDragEnd(event);\n      return;\n    }\n\n    // Sections 1 & 2 swap\n    if (activeId === 'section1' || activeId === 'section2') {\n      handleSectionDragEnd(event);\n      return;\n    }\n    // Vendor-ShipTo + ShippingDetails container swap\n    if (activeId === 'sections3And4' || activeId === 'sections5And6') {\n      handleVendorShipToAndShippingDetailsDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To section reordering\n    if (activeId === 'section3' || activeId === 'section4') {\n      handleVendorShipToSectionDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To individual field drags\n    if (String(activeId).startsWith('vendor-')) {\n      handleVendorDragEnd(event);\n      return;\n    }\n    if (String(activeId).startsWith('ship-to-')) {\n      handleShipToDragEnd(event);\n      return;\n    }\n    // Line item column reorder\n    if (['itemNumber', 'description', 'qty', 'rate', 'amount'].includes(activeId)) {\n      handleLineItemColumnDragEnd(event);\n      return;\n    }\n    // Comments & totals sections reorder\n    if (activeId === 'section8' || activeId === 'section9') {\n      handleCommentsTotalsDragEnd(event);\n      return;\n    }\n  };\n\n  // State for tracking section handle drag operations (simplified)\n  const [isSectionHandleDragging, setIsSectionHandleDragging] = useState(false);\n  const handleVendorShipToDragEnd = event => {\n    var _active$data6, _over$data3;\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔄 Individual sections drag end:', {\n      active: active === null || active === void 0 ? void 0 : active.id,\n      over: over === null || over === void 0 ? void 0 : over.id,\n      activeData: active === null || active === void 0 ? void 0 : (_active$data6 = active.data) === null || _active$data6 === void 0 ? void 0 : _active$data6.current,\n      overData: over === null || over === void 0 ? void 0 : (_over$data3 = over.data) === null || _over$data3 === void 0 ? void 0 : _over$data3.current,\n      vendorShipToSectionOrder: vendorShipToSectionOrder\n    });\n\n    // Only handle reordering between sections 3 and 4 within the group\n    if (active.id !== over.id && (active.id === 'section3' || active.id === 'section4') && (over.id === 'section3' || over.id === 'section4')) {\n      const oldIndex = vendorShipToSectionOrder.indexOf(active.id);\n      const newIndex = vendorShipToSectionOrder.indexOf(over.id);\n      if (oldIndex !== -1 && newIndex !== -1) {\n        const newOrder = arrayMove(vendorShipToSectionOrder, oldIndex, newIndex);\n        setVendorShipToSectionOrder(newOrder);\n        console.log('🔄 Vendor/Ship-To sections reordered:', {\n          from: active.id,\n          to: over.id,\n          newOrder: newOrder\n        });\n        addToChangeHistory('section-reorder', `${active.id} → ${over.id}`, newOrder.join(', '));\n        showNotification('✅ Sections 3 and 4 reordered successfully', 'success');\n      }\n    } else {\n      console.log('🚫 Not handling this drag in individual context - might be group drag');\n    }\n  };\n  const handleVendorShipToShippingGroupDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-Ship-To-Shipping group drag ended:', {\n        active: active.id,\n        over: over.id\n      });\n\n      // For now, this group can only be in one position\n      // In the future, this could be expanded to allow reordering with other major sections\n    }\n  };\n\n  // Handle major sections drag end (vendor-shipto-group and shipping-section)\n  const handleMajorSectionsDragEnd = event => {\n    var _active$data7, _over$data4;\n    const {\n      active,\n      over\n    } = event;\n    console.log('🚀 Major sections drag end called:', {\n      active: active === null || active === void 0 ? void 0 : active.id,\n      over: over === null || over === void 0 ? void 0 : over.id,\n      activeData: active === null || active === void 0 ? void 0 : (_active$data7 = active.data) === null || _active$data7 === void 0 ? void 0 : _active$data7.current,\n      overData: over === null || over === void 0 ? void 0 : (_over$data4 = over.data) === null || _over$data4 === void 0 ? void 0 : _over$data4.current,\n      majorSectionsOrder: majorSectionsOrder\n    });\n    if (!active || !over || active.id === over.id) {\n      console.log('❌ Early return:', {\n        noActive: !active,\n        noOver: !over,\n        sameId: (active === null || active === void 0 ? void 0 : active.id) === (over === null || over === void 0 ? void 0 : over.id)\n      });\n      return;\n    }\n    console.log('🔄 Major sections drag end:', {\n      active: active.id,\n      over: over.id\n    });\n\n    // Check if we're dragging the vendor-shipto-group or shipping-section\n    if ((active.id === 'vendor-shipto-group' || active.id === 'shipping-section') && (over.id === 'vendor-shipto-group' || over.id === 'shipping-section')) {\n      setMajorSectionsOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        if (oldIndex !== -1 && newIndex !== -1) {\n          const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\n          console.log('🔄 Major sections reordered:', {\n            from: active.id,\n            to: over.id,\n            newOrder: newOrder\n          });\n\n          // Add to change history\n          addToChangeHistory('major-sections-swap', active.id === 'vendor-shipto-group' ? 'Vendor & Ship To Group' : 'Shipping Section', `Swapped with ${over.id === 'vendor-shipto-group' ? 'Vendor & Ship To Group' : 'Shipping Section'}`);\n          showNotification('🔄 Sections 3+4 swapped with Section 5!', 'success');\n          return newOrder;\n        }\n        return prevOrder;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `purchase-order-container ${!sidebarVisible ? 'sidebar-hidden' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      collisionDetection: rectIntersection,\n      onDragCancel: () => {\n        console.log('❌ Drag cancelled');\n      },\n      onDragMove: event => {\n        console.log('🔄 Drag move:', event);\n      },\n      onDragStart: event => {\n        console.log('🚀 DndContext Drag Start:', event);\n        handleDragStart(event);\n      },\n      onDragOver: event => {\n        console.log('🎯 DndContext Drag Over:', event);\n        handleDragOver(event);\n      },\n      onDragEnd: event => {\n        console.log('🏁 DndContext Drag End:', event);\n        handleRootDragEnd(event);\n      },\n      children: [console.log('🔧 DndContext rendering with:', {\n        sensors: sensors,\n        collisionDetection: closestCenter,\n        hasDragStart: !!handleDragStart,\n        hasDragOver: !!handleDragOver,\n        hasDragEnd: !!handleRootDragEnd,\n        timestamp: new Date().toISOString()\n      }), /*#__PURE__*/_jsxDEV(AvailableFields, {\n        isVisible: sidebarVisible,\n        onToggleVisibility: toggleSidebar,\n        showNotification: showNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2052,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"page-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Purchase Order Management System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2060,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Create, edit, and manage purchase orders with ease\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2061,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2059,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header-section vendor-shipping-columns\",\n              children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                items: sections1And2Order,\n                strategy: horizontalListSortingStrategy,\n                children: [console.log('🔧 SortableContext for sections 1&2:', {\n                  items: sections1And2Order,\n                  strategy: 'horizontalListSortingStrategy',\n                  sections1And2OrderType: typeof sections1And2Order,\n                  sections1And2OrderLength: sections1And2Order === null || sections1And2Order === void 0 ? void 0 : sections1And2Order.length,\n                  itemsArray: Array.isArray(sections1And2Order) ? sections1And2Order : 'NOT ARRAY',\n                  timestamp: new Date().toISOString()\n                }), console.log('🔧 SortableContext items validation:', {\n                  itemsValid: Array.isArray(sections1And2Order) && sections1And2Order.length > 0,\n                  itemsContent: sections1And2Order,\n                  strategyValid: horizontalListSortingStrategy !== undefined,\n                  timestamp: new Date().toISOString()\n                }), sections1And2Order.map((sectionId, index) => {\n                  console.log(`🔧 Rendering section: ${sectionId} at index ${index}`);\n                  if (sectionId === 'section1') {\n                    return /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                      id: \"section1\",\n                      sectionNumber: \"1\",\n                      isSectionHandleDragging: isSectionHandleDragging,\n                      showDragHandle: true,\n                      children: /*#__PURE__*/_jsxDEV(Section1CompanyInfo, {\n                        companyFields: companyFields,\n                        sensors: sensors,\n                        onCompanyDragEnd: handleCompanyDragEnd,\n                        onAddCompanyField: handleAddCompanyField,\n                        onRemoveCompanyField: handleRemoveCompanyField,\n                        onLabelChange: handleCompanyFieldLabelChange,\n                        onContentChange: handleContentChange,\n                        lastModified: lastModified\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2101,\n                        columnNumber: 25\n                      }, this)\n                    }, `section1-${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2100,\n                      columnNumber: 23\n                    }, this);\n                  } else if (sectionId === 'section2') {\n                    return /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                      id: \"section2\",\n                      sectionNumber: \"2\",\n                      isSectionHandleDragging: isSectionHandleDragging,\n                      showDragHandle: true,\n                      children: /*#__PURE__*/_jsxDEV(Section2PurchaseOrder, {\n                        purchaseOrderFields: purchaseOrderFields,\n                        sensors: sensors,\n                        onPurchaseOrderDragEnd: handlePurchaseOrderDragEnd,\n                        onAddPurchaseOrderField: handleAddPurchaseOrderField,\n                        onRemovePurchaseOrderField: handleRemovePurchaseOrderField,\n                        onLabelChange: handlePurchaseOrderFieldLabelChange,\n                        onContentChange: handleContentChange,\n                        lastModified: poLastModified\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2116,\n                        columnNumber: 25\n                      }, this)\n                    }, `section2-${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2115,\n                      columnNumber: 23\n                    }, this);\n                  }\n                  return null;\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2076,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2074,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2073,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"major-sections-container\",\n            children: /*#__PURE__*/_jsxDEV(DndContext, {\n              sensors: sensors,\n              collisionDetection: closestCenter,\n              onDragEnd: handleMajorSectionsDragEnd,\n              children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                items: majorSectionsOrder,\n                strategy: verticalListSortingStrategy,\n                children: majorSectionsOrder.map((sectionGroup, index) => {\n                  if (sectionGroup === 'vendor-shipto-group') {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-container\",\n                      style: {\n                        marginTop: '30px',\n                        position: 'relative'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(DraggableGroupHandle, {\n                        id: \"vendor-shipto-group\",\n                        label: \"Vendor & Ship To\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"vendor-shipping-columns\",\n                          children: /*#__PURE__*/_jsxDEV(DndContext, {\n                            sensors: sensors,\n                            collisionDetection: closestCenter,\n                            onDragEnd: handleVendorShipToDragEnd,\n                            children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                              items: vendorShipToSectionOrder,\n                              strategy: horizontalListSortingStrategy,\n                              children: vendorShipToSectionOrder.map((sectionId, sectionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"individual-section\",\n                                children: sectionId === 'section3' ? /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                                  id: \"section3\",\n                                  sectionNumber: \"3\",\n                                  isSectionHandleDragging: isSectionHandleDragging,\n                                  showDragHandle: true,\n                                  children: /*#__PURE__*/_jsxDEV(Section3Vendor, {\n                                    vendorFields: vendorFields,\n                                    sensors: sensors,\n                                    onVendorDragEnd: handleVendorDragEnd,\n                                    onAddVendorField: handleAddVendorField,\n                                    onRemoveVendorField: handleRemoveVendorField,\n                                    onLabelChange: handleVendorFieldLabelChange,\n                                    onContentChange: handleContentChange,\n                                    lastModified: Date.now()\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2167,\n                                    columnNumber: 41\n                                  }, this)\n                                }, `section3-${sectionIndex}`, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2166,\n                                  columnNumber: 39\n                                }, this) : sectionId === 'section4' ? /*#__PURE__*/_jsxDEV(DraggableSectionWrapper, {\n                                  id: \"section4\",\n                                  sectionNumber: \"4\",\n                                  isSectionHandleDragging: isSectionHandleDragging,\n                                  showDragHandle: true,\n                                  children: /*#__PURE__*/_jsxDEV(Section4ShipTo, {\n                                    shipToFields: shipToFields,\n                                    sensors: sensors,\n                                    onShipToDragEnd: handleShipToDragEnd,\n                                    onAddShipToField: handleAddShipToField,\n                                    onRemoveShipToField: handleRemoveShipToField,\n                                    onLabelChange: handleShipToFieldLabelChange,\n                                    onContentChange: handleContentChange,\n                                    lastModified: Date.now()\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 2180,\n                                    columnNumber: 41\n                                  }, this)\n                                }, \"section4\", false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 2179,\n                                  columnNumber: 39\n                                }, this) : null\n                              }, `${sectionId}-${sectionIndex}`, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 2164,\n                                columnNumber: 35\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 2159,\n                              columnNumber: 31\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2154,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2152,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2151,\n                        columnNumber: 25\n                      }, this)\n                    }, `vendor-shipto-group-${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2149,\n                      columnNumber: 23\n                    }, this);\n                  } else if (sectionGroup === 'shipping-section') {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginTop: '30px'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(DraggableGroupHandle, {\n                        id: \"shipping-section\",\n                        label: \"Shipping\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"section-5\",\n                          children: /*#__PURE__*/_jsxDEV(Section5Shipping, {\n                            shippingColumnOrder: shippingColumnOrder,\n                            onShippingColumnDragEnd: handleShippingColumnDragEnd\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 2205,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2204,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2203,\n                        columnNumber: 25\n                      }, this)\n                    }, `shipping-section-${index}`, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2202,\n                      columnNumber: 23\n                    }, this);\n                  }\n                  return null;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2142,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2137,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              marginBottom: '20px',\n              padding: '10px',\n              backgroundColor: '#f8fafc',\n              border: '1px solid #e5e7eb',\n              borderRadius: '8px',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-column-btn\",\n              style: {\n                backgroundColor: '#3b82f6',\n                color: 'white',\n                border: 'none',\n                padding: '10px 16px',\n                borderRadius: '6px',\n                fontSize: '14px',\n                fontWeight: '600',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '6px',\n                transition: 'all 0.2s ease',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              },\n              onClick: e => {\n                e.stopPropagation();\n                e.preventDefault();\n                console.log('Add column button clicked from main form!');\n\n                // Generate a unique ID for the new column\n                const newColumnId = `custom-${Date.now()}`;\n\n                // Add the new column to the shipping column order\n                setShippingColumnOrder(prevOrder => {\n                  const newOrder = [...prevOrder, newColumnId];\n                  console.log('🚢 Added new shipping column:', {\n                    newColumnId,\n                    newOrder\n                  });\n                  console.log('🚢 Current shipping column order:', newOrder);\n                  return newOrder;\n                });\n\n                // Show success notification\n                showNotification(`🚢 Added new shipping column: ${newColumnId}`, 'success');\n              },\n              onMouseEnter: e => {\n                e.target.style.backgroundColor = '#1d4ed8';\n                e.target.style.transform = 'translateY(-1px)';\n                e.target.style.boxShadow = '0 4px 8px rgba(0,0,0,0.15)';\n              },\n              onMouseLeave: e => {\n                e.target.style.backgroundColor = '#3b82f6';\n                e.target.style.transform = 'translateY(0)';\n                e.target.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n              },\n              title: \"Add new shipping column\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '16px'\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2281,\n                columnNumber: 15\n              }, this), \"Add Column\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2233,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2223,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sortable-section items-section\",\n            style: {\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              style: {\n                padding: '12px',\n                backgroundColor: '#f8fafc',\n                borderBottom: '1px solid #e5e7eb',\n                fontWeight: '600',\n                fontSize: '14px',\n                color: '#374151',\n                textAlign: 'center'\n              },\n              children: [\"Line Items\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"drag-indicator\",\n                children: \"::\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2298,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2288,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n              items: lineItemColumnOrder,\n              strategy: verticalListSortingStrategy,\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"itemtable\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2306,\n                      columnNumber: 19\n                    }, this), lineItemColumnOrder.map((columnId, index) => {\n                      const columnConfig = {\n                        itemNumber: {\n                          label: 'Item#',\n                          colSpan: 3\n                        },\n                        description: {\n                          label: 'Description',\n                          colSpan: 12\n                        },\n                        qty: {\n                          label: 'Qty',\n                          colSpan: 2\n                        },\n                        rate: {\n                          label: 'Rate',\n                          colSpan: 3\n                        },\n                        amount: {\n                          label: 'Amount',\n                          colSpan: 3\n                        }\n                      };\n                      const config = columnConfig[columnId];\n                      return /*#__PURE__*/_jsxDEV(\"th\", {\n                        colSpan: config.colSpan,\n                        children: config.label\n                      }, `${columnId}-${index}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2318,\n                        columnNumber: 23\n                      }, this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2305,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2304,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: [1, 2, 3, 4, 5].map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: \"draggable-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2328,\n                      columnNumber: 21\n                    }, this), lineItemColumnOrder.map((columnId, colIndex) => {\n                      const columnConfig = {\n                        itemNumber: {\n                          colSpan: 3,\n                          placeholder: 'Item number'\n                        },\n                        description: {\n                          colSpan: 12,\n                          placeholder: 'Item description'\n                        },\n                        qty: {\n                          colSpan: 2,\n                          placeholder: 'Qty'\n                        },\n                        rate: {\n                          colSpan: 3,\n                          placeholder: '$0.00'\n                        },\n                        amount: {\n                          colSpan: 3,\n                          placeholder: '$0.00'\n                        }\n                      };\n                      const config = columnConfig[columnId];\n                      return /*#__PURE__*/_jsxDEV(\"td\", {\n                        colSpan: config.colSpan,\n                        \"data-column\": columnId,\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": config.placeholder\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2341,\n                          columnNumber: 27\n                        }, this)\n                      }, `${row}-${columnId}-${rowIndex}-${colIndex}`, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2340,\n                        columnNumber: 25\n                      }, this);\n                    })]\n                  }, `row-${row}-${rowIndex}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2327,\n                    columnNumber: 19\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2325,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2303,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2302,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2287,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n            items: commentsTotalsSectionOrder,\n            strategy: horizontalListSortingStrategy,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-totals-section\",\n              style: {\n                display: 'flex',\n                gap: '20px'\n              },\n              children: commentsTotalsSectionOrder.map((sectionId, index) => {\n                if (sectionId === 'section8') {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"section8\",\n                    className: \"sortable-section comments-section\",\n                    style: {\n                      flex: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DraggableSectionHeader, {\n                      id: \"section8\",\n                      children: \"Comments or Special Instructions ::\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2361,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-content\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"comments-content\",\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"Enter comments or special instructions...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2366,\n                          columnNumber: 25\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2365,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2364,\n                      columnNumber: 21\n                    }, this)]\n                  }, `section8-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2360,\n                    columnNumber: 19\n                  }, this);\n                } else if (sectionId === 'section9') {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"section9\",\n                    className: \"sortable-section totals-section\",\n                    style: {\n                      flex: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DraggableSectionHeader, {\n                      id: \"section9\",\n                      children: \"Totals ::\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2374,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-content\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"subtotal\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"SUBTOTAL:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2379,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"calculated-field\",\n                          children: \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2380,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2378,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"tax\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"TAX:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2383,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2384,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2382,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"shipping\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"SHIPPING:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2387,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2388,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2386,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row\",\n                        \"data-field\": \"other\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"OTHER:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2391,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"editable-field\",\n                          contentEditable: \"true\",\n                          \"data-placeholder\": \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2392,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2390,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"total-row total-final\",\n                        \"data-field\": \"total\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: \"TOTAL:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2395,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"calculated-field total-field\",\n                          children: \"$0.00\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 2396,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2394,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2377,\n                      columnNumber: 21\n                    }, this)]\n                  }, `section9-${index}`, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2373,\n                    columnNumber: 19\n                  }, this);\n                }\n                return null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2356,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2355,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contact-section\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Contact Information:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2412,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"Enter contact information here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2413,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2411,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2410,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn preview-btn\",\n              onClick: togglePreviewMode,\n              children: isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2419,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: handleAIFill,\n              children: \"\\uD83E\\uDD16 AI Fill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2422,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn export-btn\",\n              onClick: exportToXML,\n              children: \"\\uD83D\\uDCC4 Generate XML\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2425,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2418,\n            columnNumber: 11\n          }, this), changeHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-history-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              children: [\"\\uD83D\\uDCDD Change History (\", changeHistory.length, \" changes)\", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"clear-history-btn\",\n                onClick: clearChangeHistory,\n                children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2435,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-list\",\n              children: [changeHistory.slice(0, 10).map((change, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"change-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-time\",\n                  children: new Date(change.timestamp).toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2442,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-type\",\n                  children: change.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2445,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-field\",\n                  children: change.fieldId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2446,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-old\",\n                  children: change.oldValue || 'empty'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2447,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-arrow\",\n                  children: \"\\u2192\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2448,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"change-new\",\n                  children: change.newValue || 'empty'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2449,\n                  columnNumber: 21\n                }, this)]\n              }, `${change.id}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2441,\n                columnNumber: 19\n              }, this)), changeHistory.length > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"change-more\",\n                children: [\"... and \", changeHistory.length - 10, \" more changes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2453,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2439,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2432,\n            columnNumber: 13\n          }, this), showXMLModal && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"xml-modal-overlay\",\n            onClick: closeXMLModal,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"xml-modal\",\n              onClick: e => e.stopPropagation(),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-modal-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"\\uD83D\\uDCC4 Generated XML Output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2466,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"xml-modal-close\",\n                  onClick: closeXMLModal,\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2467,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2465,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-modal-content\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"xml-output-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                    className: \"xml-code\",\n                    children: xmlOutput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2471,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2470,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2469,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xml-modal-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn copy-btn\",\n                  onClick: copyXMLToClipboard,\n                  children: \"\\uD83D\\uDCCB Copy XML\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2475,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn download-btn\",\n                  onClick: downloadXML,\n                  children: \"\\uD83D\\uDCE5 Download XML\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2478,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn close-btn\",\n                  onClick: closeXMLModal,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2481,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2474,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2464,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2463,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2071,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2070,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2021,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"notification-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2498,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2020,\n    columnNumber: 5\n  }, this);\n}\n_s7(PurchaseOrderForm, \"N7DW53WcXdYJSXJ0LWug4UdVPzo=\", false, function () {\n  return [useDragAndDropSensors, useVendorFieldsDragEnd, useShipToFieldsDragEnd, useAIProvider];\n});\n_c5 = PurchaseOrderForm;\nexport default PurchaseOrderForm;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DraggableSectionWrapper\");\n$RefreshReg$(_c2, \"SortableShippingColumnHeader\");\n$RefreshReg$(_c3, \"DraggableSectionHeader\");\n$RefreshReg$(_c4, \"DraggableGroupHandle\");\n$RefreshReg$(_c5, \"PurchaseOrderForm\");","map":{"version":3,"names":["React","useState","useEffect","HeaderColorPicker","generatePurchaseOrderXML","Section1CompanyInfo","Section2PurchaseOrder","Section3Vendor","Section4ShipTo","Section5Shipping","AvailableFields","useAIProvider","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","useDraggable","rectIntersection","SortableContext","verticalListSortingStrategy","horizontalListSortingStrategy","useSortable","CSS","arrayMove","jsxDEV","_jsxDEV","DraggableSectionWrapper","children","id","sectionNumber","isSectionHandleDragging","showDragHandle","_s","attributes","listeners","setNodeRef","transform","transition","isDragging","data","type","getSectionClass","sectionNum","style","Transform","toString","opacity","zIndex","cursor","position","width","height","border","borderRadius","backgroundColor","console","log","hasOnMouseDown","onMouseDown","hasOnMouseMove","onMouseMove","hasOnMouseUp","onMouseUp","hasOnTouchStart","onTouchStart","hasOnTouchMove","onTouchMove","hasOnTouchEnd","onTouchEnd","listenerKeys","Object","keys","listenerValues","values","map","v","ref","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","SortableShippingColumnHeader","_s2","userSelect","_c2","DraggableSectionHeader","_s3","title","_c3","DraggableGroupHandle","label","_s4","left","top","display","alignItems","justifyContent","flexDirection","gap","boxShadow","color","fontSize","fontWeight","writingMode","textOrientation","_c4","PurchaseOrderForm","_s7","_s5","$RefreshSig$","_s6","companyFields","setCompanyFields","placeholder","value","f","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","sidebarVisible","setSidebarVisible","toggleSidebar","generateUniqueFieldId","baseLabel","existingIds","slugBase","String","toLowerCase","replace","candidate","counter","includes","handlePaletteDragEnd","event","_active$data","active","over","current","source","newField","handleAddCompanyField","showNotification","purchaseOrderFields","handleAddPurchaseOrderField","vendorFields","handleAddVendorField","shipToFields","handleAddShipToField","setPurchaseOrderFields","isTitle","setVendorFields","setShipToFields","totalsFields","setTotalsFields","isCalculated","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","prevFields","logChange","handleRemoveCompanyField","fieldId","fieldToRemove","find","field","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","changeType","oldValue","newValue","section","change","now","timestamp","prev","slice","addToChangeHistory","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","togglePreviewMode","clearChangeHistory","showXMLModal","setShowXMLModal","xmlOutput","setXmlOutput","displayXMLOutput","xml","closeXMLModal","copyXMLToClipboard","navigator","clipboard","writeText","then","catch","downloadXML","_purchaseOrderFields$","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","getFieldSuggestions","applySuggestionsToFields","suggestionsMap","fields","Array","isArray","newVal","handleAIFill","payload","context","shippingFields","shippingColumnOrder","startsWith","suggestions","debug","company","name","phone","po","date","number","shipping","requisitioner","shipVia","totals","subtotal","tax","total","line1","item","itemNumber1","desc","description1","qty","qty1","rate","rate1","amount","amount1","next","before","fromEntries","after","forEach","undefined","from","to","sourceKey","write","el","val","textContent","shipSelectors","key","shipOrder","idx","used","suggestionKey","sel","querySelector","nth","selA","selB","suggestionValue","count","querySelectorAll","length","selector","fieldsInDOM","isCustom","setCell","row","col","cell","li","i","k","other","domTotals","calcTotal","calcSub","commentsEl","contactEl","comments","contactInfo","e","error","message","exportToXML","capturedData","captureFieldValues","headerSections","visualSections1And2","sections1And2ForExport","sections1And2Order","vendorShipToSections","visualSections3And4","sections3And4ForExport","vendorShipToSectionOrder","getText","_document$querySelect","_document$querySelect2","trim","normalizedLineItems","lineItems","itemNumber","description","quantity","unitPrice","exportData","majorSectionsOrder","sectionOrder","sections1And2","sections3And4","sections5And6","sections5And6Order","sections8And9","commentsTotalsSectionOrder","lineItemColumns","lineItemColumnOrder","shippingColumns","fieldOrder","companyFieldOrder","purchaseOrder","purchaseOrderFieldOrder","vendor","shipTo","shippingData","columnId","fob","shippingTerms","sections3And4And5And6","existingNotification","remove","notification","innerHTML","container","getElementById","setTimeout","parentElement","getFormStats","totalFields","totalChanges","Math","max","getTime","handleCompanyDragEnd","setCompanyFieldOrder","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","logFieldSummary","toLocaleString","handleRemovePurchaseOrderField","handleRemoveVendorField","handleVendorFieldLabelChange","handleRemoveShipToField","handleShipToFieldLabelChange","handlePurchaseOrderDragEnd","setPurchaseOrderFieldOrder","setVendorShipToSectionOrder","vendorShipToShippingGroupOrder","setVendorShipToShippingGroupOrder","setSections1And2Order","setSections5And6Order","setMajorSectionsOrder","vendorShipToAndShippingDetailsOrder","setVendorShipToAndShippingDetailsOrder","setLineItemColumnOrder","setShippingColumnOrder","setCommentsTotalsSectionOrder","handleDragStart","_active$data2","activeData","element","setAttribute","handleDragOver","_active$data3","_over$data","overData","targetElement","handleSectionDragEnd","_active$data4","_over$data2","activeId","overId","section1Element","section2Element","removeAttribute","handleSections5And6DragEnd","handleLineItemColumnDragEnd","items","handleShippingColumnDragEnd","handleCommentsTotalsDragEnd","handleVendorShipToSectionDragEnd","handleVendorShipToAndShippingDetailsDragEnd","handleSwapSections","companyFieldValues","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSwapVendorShipTo","vendorFieldValues","shipToFieldValues","reverse","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","capturedLineItems","rowIndex","rowData","cellSelector","push","updatedTotalsFields","handleRootDragEnd","_active$data5","_active$data5$current","setIsSectionHandleDragging","allSections","dropIndicator","handleVendorShipToDragEnd","_active$data6","_over$data3","join","handleVendorShipToShippingGroupDragEnd","handleMajorSectionsDragEnd","_active$data7","_over$data4","noActive","noOver","sameId","collisionDetection","onDragCancel","onDragMove","onDragStart","onDragOver","onDragEnd","hasDragStart","hasDragOver","hasDragEnd","isVisible","onToggleVisibility","strategy","sections1And2OrderType","sections1And2OrderLength","itemsArray","itemsValid","itemsContent","strategyValid","sectionId","index","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","sectionGroup","marginTop","sectionIndex","onVendorDragEnd","onAddVendorField","onRemoveVendorField","onShipToDragEnd","onAddShipToField","onRemoveShipToField","onShippingColumnDragEnd","marginBottom","padding","stopPropagation","preventDefault","newColumnId","onMouseEnter","target","onMouseLeave","borderBottom","textAlign","columnConfig","colSpan","config","colIndex","contentEditable","flex","toLocaleTimeString","_c5","$RefreshReg$"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\nimport './section-styles.css';\nimport './header-colors.css';\nimport './header-color-picker.css';\nimport HeaderColorPicker from './components/HeaderColorPicker';\nimport { generatePurchaseOrderXML } from './templates/PurchaseOrderTemplate';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3Vendor from './components/Section3Vendor';\nimport Section4ShipTo from './components/Section4ShipTo';\nimport Section5Shipping from './components/Section5Shipping';\n\nimport AvailableFields from './components/AvailableFields';\n\nimport { useAIProvider } from './hooks/useAIProvider';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter, useDraggable, rectIntersection } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy, horizontalListSortingStrategy, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { arrayMove } from '@dnd-kit/sortable';\n\n\n// Draggable Section Wrapper Component for Sections\nfunction DraggableSectionWrapper({ children, id, sectionNumber, isSectionHandleDragging = false, showDragHandle = true }) {\n\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({ \n    id, \n    data: {\n      type: 'section',\n      sectionNumber: sectionNumber\n    }\n  });\n\n  // Map section numbers to proper CSS classes\n  const getSectionClass = (sectionNum) => {\n    switch(sectionNum) {\n      case 1:\n        return 'section-1-company-info';\n      case 2:\n        return 'section-2-purchase-order';\n      default:\n        return `section-${sectionNum}`;\n    }\n  };\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.6 : 1,\n    zIndex: isDragging ? 1000 : 1,\n    cursor: isDragging ? 'grabbing' : 'grab',\n    position: 'relative',\n    width: '100%',\n    height: '100%',\n    border: isDragging ? '3px solid #ff6b6b' : '2px solid #ddd',\n    borderRadius: '8px',\n    backgroundColor: isDragging ? 'rgba(255, 107, 107, 0.1)' : 'transparent'\n  };\n\n  // Log the actual attributes and listeners objects\n  console.log(`🔧 Detailed useSortable data for ${id}:`, {\n    attributes: attributes,\n    listeners: listeners,\n    setNodeRef: setNodeRef,\n    style: style\n  });\n\n  // Debug: Check if listeners have the right properties\n  if (listeners) {\n    console.log(`🔧 Listeners for ${id}:`, {\n      hasOnMouseDown: !!listeners.onMouseDown,\n      hasOnMouseMove: !!listeners.onMouseMove,\n      hasOnMouseUp: !!listeners.onMouseUp,\n      hasOnTouchStart: !!listeners.onTouchStart,\n      hasOnTouchMove: !!listeners.onTouchMove,\n      hasOnTouchEnd: !!listeners.onTouchEnd,\n      listenerKeys: Object.keys(listeners),\n      listenerValues: Object.values(listeners).map(v => typeof v)\n    });\n  } else {\n    console.log(`❌ No listeners for ${id}`);\n  }\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className={`sortable-section ${getSectionClass(sectionNumber)} ${isDragging ? 'dragging' : ''}`}\n      data-section={sectionNumber}\n      data-testid={`draggable-section-${id}`}\n      data-dragging={isDragging}\n      {...attributes} \n      {...listeners}\n      onClick={() => console.log(`🖱️ Clicked on section ${id}`)}\n    >\n      <div \n        className=\"section-content\"\n        style={{ position: 'relative', width: '100%', height: '100%' }}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n\n\n\n// Sortable shipping column header component for shipping details\nfunction SortableShippingColumnHeader({ children, id }) {\n  const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({ id });\n  \n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    cursor: 'grab',\n    userSelect: 'none'\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      {...attributes} \n      {...listeners}\n      className={`sortable-column-header ${isDragging ? 'dragging' : ''}`}\n    >\n      {children}\n    </div>\n  );\n}\n\n// Draggable Section Header Component for Comments and Totals\nfunction DraggableSectionHeader({ children, id }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n  } = useSortable({ id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div \n      ref={setNodeRef} \n      style={style} \n      className=\"section-header\"\n      {...attributes} \n      {...listeners} \n      title=\"Drag to reorder sections\"\n    >\n      {children}\n    </div>\n  );\n}\n\n// Draggable Group Handle Component for Sections 3 & 4\nfunction DraggableGroupHandle({ children, id, label }) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging\n  } = useSortable({ \n    id,\n    data: {\n      type: 'section-group',\n      label: label\n    }\n  });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    opacity: isDragging ? 0.5 : 1,\n    position: 'relative'\n  };\n\n  return (\n    <div ref={setNodeRef} style={style}>\n      {/* Group Drag Handle */}\n      <div \n        {...attributes} \n        {...listeners}\n        style={{\n          position: 'absolute',\n          left: '-40px',\n          top: '50%',\n          transform: 'translateY(-50%)',\n          width: '30px',\n          height: '60px',\n          backgroundColor: 'white',\n          borderRadius: '6px',\n          cursor: 'grab',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flexDirection: 'column',\n          gap: '4px',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          zIndex: 10,\n          border: '2px solid #8b5cf6'\n        }}\n        title={`Drag to move ${label} as a group`}\n      >\n        <span style={{ color: '#8b5cf6', fontSize: '18px', fontWeight: 'bold' }}>⋮⋮</span>\n        <span style={{ \n          color: '#8b5cf6', \n          fontSize: '10px', \n          writingMode: 'vertical-rl',\n          textOrientation: 'mixed',\n          fontWeight: '600'\n        }}>GROUP</span>\n      </div>\n      {children}\n    </div>\n  );\n}\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: '' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: '' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: '' }\n  ]);\n\n  // Debug: Log company fields state changes\n  useEffect(() => {\n    console.log('🔄 Company fields state updated:', companyFields.map(f => ({ id: f.id, label: f.label })));\n  }, [companyFields]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // ============================================================================\n  // SIDEBAR MANAGEMENT\n  // ============================================================================\n  \n  // State for sidebar visibility on mobile\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n\n  // Toggle sidebar visibility\n  const toggleSidebar = () => {\n    setSidebarVisible(!sidebarVisible);\n  };\n\n  // Helper: slugify and ensure unique id for new fields\n  const generateUniqueFieldId = (baseLabel, existingIds) => {\n    const slugBase = String(baseLabel)\n      .toLowerCase()\n      .replace(/[^a-z0-9]+/g, '-')\n      .replace(/(^-|-$)/g, '');\n    let candidate = slugBase || 'field';\n    let counter = 1;\n    while (existingIds.includes(candidate)) {\n      candidate = `${slugBase}-${counter++}`;\n    }\n    return candidate;\n  };\n\n  // ============================================================================\n  // DROPPABLE ZONES\n  // ============================================================================\n\n\n\n\n\n  // Handle palette drag end to add fields to target sections\n  const handlePaletteDragEnd = (event) => {\n    const { active, over } = event;\n    console.log('🎯 Palette drag end:', { active, over });\n    \n    if (!active?.data?.current || !over?.id) {\n      console.log('❌ Missing active data or over id');\n      return;\n    }\n    const data = active.data.current;\n    if (data.source !== 'palette') {\n      console.log('❌ Not a palette source:', data.source);\n      return;\n    }\n\n    const baseLabel = data.label;\n    console.log('🎯 Dropping on zone:', over.id);\n    \n    // Check if dropping on section elements\n    if (over.id === 'section1') {\n      console.log('✅ Adding to company section');\n      const existingIds = companyFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddCompanyField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Company Info`, 'success');\n    } else if (over.id === 'section2') {\n      console.log('✅ Adding to purchase order section');\n      const existingIds = purchaseOrderFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddPurchaseOrderField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Purchase Order`, 'success');\n    } else if (over.id === 'section3') {\n      console.log('✅ Adding to vendor section');\n      const existingIds = vendorFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddVendorField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Vendor section`, 'success');\n    } else if (over.id === 'section4') {\n      console.log('✅ Adding to ship-to section');\n      const existingIds = shipToFields.map(f => f.id);\n      const id = generateUniqueFieldId(baseLabel, existingIds);\n      const newField = { id, label: `${baseLabel}:`, placeholder: baseLabel, value: '' };\n      handleAddShipToField(newField);\n      showNotification(`➕ Added \"${baseLabel}\" to Ship-To section`, 'success');\n    } else {\n      console.log('❌ Unknown drop zone:', over.id);\n    }\n  };\n\n\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: '' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: '' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: '' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: '' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: '' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: '' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '' }\n  ]);\n\n  // Totals fields state for Section 9\n  const [totalsFields, setTotalsFields] = useState([\n    { id: 'subtotal', label: 'SUBTOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true },\n    { id: 'tax', label: 'TAX:', placeholder: '$0.00', value: '' },\n    { id: 'shipping', label: 'SHIPPING:', placeholder: '$0.00', value: '' },\n    { id: 'other', label: 'OTHER:', placeholder: '$0.00', value: '' },\n    { id: 'total', label: 'TOTAL:', placeholder: '$0.00', value: '$0.00', isCalculated: true }\n  ]);\n\n\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChange('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      showNotification(`🗑️ Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Function to add changes to change history (for section operations)\n  const addToChangeHistory = (changeType, fieldId, newValue) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue: '',\n      newValue,\n      section: 'section'\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Section change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'vendor') {\n      const field = vendorFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'ship-to') {\n      const field = shipToFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // ============================================================================\n  // XML DISPLAY MODAL\n  // ============================================================================\n  \n  // State for XML modal\n  const [showXMLModal, setShowXMLModal] = useState(false);\n  const [xmlOutput, setXmlOutput] = useState('');\n  \n  \n  // Function to display XML output in a modal\n  const displayXMLOutput = (xml) => {\n    setXmlOutput(xml);\n    setShowXMLModal(true);\n  };\n  \n  // Function to close XML modal\n  const closeXMLModal = () => {\n    setShowXMLModal(false);\n    setXmlOutput('');\n  };\n  \n  // Function to copy XML to clipboard\n  const copyXMLToClipboard = () => {\n    navigator.clipboard.writeText(xmlOutput).then(() => {\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(() => {\n      showNotification('❌ Failed to copy XML to clipboard', 'error');\n    });\n  };\n  \n  // Function to download XML file\n  const downloadXML = () => {\n    const blob = new Blob([xmlOutput], { type: 'application/xml' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${purchaseOrderFields.find(f => f.id === 'po-number')?.value || 'unknown'}.xml`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n    showNotification('📥 XML downloaded successfully!', 'success');\n  };\n\n  // =========================================================================\n  // AI SUGGESTIONS\n  // =========================================================================\n  const { getFieldSuggestions } = useAIProvider();\n\n  const applySuggestionsToFields = (suggestionsMap, fields) => {\n    if (!Array.isArray(fields)) return fields;\n    return fields.map(f => {\n      const newVal = suggestionsMap?.[f.id];\n      if (typeof newVal === 'string') {\n        return { ...f, value: newVal };\n      }\n      return f;\n    });\n  };\n\n  const handleAIFill = async () => {\n    try {\n      showNotification('🤖 Fetching AI suggestions...', 'info');\n\n      const payload = {\n        context: 'purchase_order',\n        companyFields,\n        purchaseOrderFields,\n                vendorFields,\n        shipToFields,\n        shippingFields: [\n          // Include default shipping fields\n          { id: 'requisitioner', label: 'Requisitioner name' },\n          { id: 'shipVia', label: 'Shipping method' },\n          { id: 'fob', label: 'FOB terms' },\n          { id: 'shippingTerms', label: 'Shipping terms' },\n          // Include custom columns dynamically\n          ...shippingColumnOrder\n            .filter(id => id.startsWith('custom-'))\n            .map(id => ({ \n              id, \n              label: `Custom ${id.replace('custom-', '')}` \n            }))\n        ]\n      };\n\n      const { suggestions } = await getFieldSuggestions(payload);\n      try {\n        console.debug('🧪 AI suggestions keys:', Object.keys(suggestions || {}));\n        // Preview a few critical values to verify mapping\n        console.debug('🧪 AI preview:', {\n          company: {\n            name: suggestions?.['company-name'],\n            phone: suggestions?.['company-phone']\n          },\n          po: {\n            date: suggestions?.['po-date'],\n            number: suggestions?.['po-number']\n          },\n          shipping: {\n            requisitioner: suggestions?.requisitioner,\n            shipVia: suggestions?.shipVia\n          },\n          totals: {\n            subtotal: suggestions?.subtotal,\n            tax: suggestions?.tax,\n            total: suggestions?.total\n          },\n          line1: {\n            item: suggestions?.itemNumber1,\n            desc: suggestions?.description1,\n            qty: suggestions?.qty1,\n            rate: suggestions?.rate1,\n            amount: suggestions?.amount1\n          }\n        });\n      } catch {}\n\n      // 1) Apply to Section 1–3 states (company/po/vendor/ship-to) with mapping logs\n      setCompanyFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(companyFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setPurchaseOrderFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(purchaseOrderFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setVendorFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(vendorFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      setShipToFields(prev => {\n        const next = applySuggestionsToFields(suggestions, prev);\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && suggestions[id] !== undefined) {\n              console.debug('🧭 map(shipToFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // 2) Shipping details (DOM spans)\n      const write = (el, val) => { if (el && typeof val === 'string') el.textContent = val; };\n\n      const shipSelectors = (key) => [\n        `.shipping-details [data-field=\"${key}\"] .editable-field`,\n        `.shipping-field[data-field=\"${key}\"] .editable-field`,\n        `#shipping-${key}`,\n        `.shipping-field-${key} .editable-field`\n      ];\n\n      // Use dynamic shipping column order instead of hardcoded array\n      const shipOrder = shippingColumnOrder;\n      shipOrder.forEach((key, idx) => {\n        let el = null, used = '';\n        \n        // Handle custom columns (those that start with 'custom-')\n        let suggestionKey = key;\n        if (key.startsWith('custom-')) {\n          // For custom columns, try to find a relevant suggestion or generate one\n          suggestionKey = 'customField'; // Use a generic key for AI suggestions\n        }\n        \n        for (const sel of shipSelectors(key)) {\n          el = document.querySelector(sel);\n          if (el) { used = sel; break; }\n        }\n        // Fallback to positional selector used in your JSX\n        if (!el) {\n          const nth = idx + 1; // 1-based\n          // Prefer :nth-of-type within container to ignore headers\n          const selA = `.shipping-details .shipping-field:nth-of-type(${nth}) .editable-field`;\n          el = document.querySelector(selA);\n          if (el) {\n            used = selA;\n          } else {\n            // Last resort: original child-based selector\n            const selB = `.shipping-field:nth-child(${nth}) .editable-field`;\n            el = document.querySelector(selB);\n            if (el) used = selB;\n          }\n        }\n        \n        // Get the suggestion value, with fallback for custom columns\n        let suggestionValue = suggestions[suggestionKey];\n        if (key.startsWith('custom-') && !suggestionValue) {\n          // Generate a placeholder value for custom columns\n          suggestionValue = `[Custom ${key.replace('custom-', '')}]`;\n        }\n        \n        write(el, suggestionValue);\n        try {\n          const count = document.querySelectorAll('.shipping-details .shipping-field').length;\n          console.debug('🧭 map(shippingDetails):', { key, selector: used || '(not found)', value: suggestionValue, fieldsInDOM: count, isCustom: key.startsWith('custom-') });\n        } catch {}\n      });\n\n      // 3) Line items (first 3 rows only)\n      // Rows are rendered with data-column per your table; we fill itemNumber, description, qty, rate, amount.\n      const setCell = (row, col, val) => {\n        const selector = `.itemtable tbody tr:nth-child(${row}) td[data-column=\"${col}\"] .editable-field`;\n        const cell = document.querySelector(selector);\n        if (cell && typeof val === 'string') {\n          cell.textContent = val;\n        }\n        try { console.debug('🧭 map(lineItem):', { row, col, selector, value: val }); } catch {}\n      };\n\n      const li = (i, k) => suggestions?.[`${k}${i}`];\n\n      for (let i = 1; i <= 3; i++) {\n        setCell(i, 'itemNumber', li(i, 'itemNumber'));\n        setCell(i, 'description', li(i, 'description'));\n        setCell(i, 'qty', li(i, 'qty'));\n        setCell(i, 'rate', li(i, 'rate'));\n        setCell(i, 'amount', li(i, 'amount'));\n      }\n\n      // 4) Totals (state + DOM)\n      setTotalsFields(prev => {\n        const map = {\n          subtotal: suggestions.subtotal,\n          tax: suggestions.tax,\n          shipping: suggestions.shipping,\n          other: suggestions.other,\n          total: suggestions.total,\n        };\n        const next = prev.map(f => (map[f.id] ? { ...f, value: map[f.id] } : f));\n        try {\n          const before = Object.fromEntries(prev.map(f => [f.id, f.value]));\n          const after  = Object.fromEntries(next.map(f => [f.id, f.value]));\n          Object.keys(after).forEach(id => {\n            if (before[id] !== after[id] && map[id] !== undefined) {\n              console.debug('🧭 map(totalsFields):', { id, from: before[id], to: after[id], sourceKey: id });\n            }\n          });\n        } catch {}\n        return next;\n      });\n\n      // Write editable totals into DOM for non-calculated rows\n      const domTotals = (field) => document.querySelector(`.totals-section .total-row[data-field=\"${field}\"] .editable-field`);\n      ['tax','shipping','other'].forEach(key => {\n        const sel = `.totals-section .total-row[data-field=\"${key}\"] .editable-field`;\n        write(domTotals(key), suggestions[key]);\n        try { console.debug('🧭 map(totalsDOM):', { key, selector: sel, value: suggestions[key] }); } catch {}\n      });\n\n      // Calculated-looking spans (subtotal, total) in your layout use .calculated-field\n      const calcTotal = document.querySelector(`.totals-section .total-row[data-field=\"total\"] .total-field`);\n      const calcSub   = document.querySelector(`.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`);\n      write(calcSub, suggestions.subtotal);\n      write(calcTotal, suggestions.total);\n      try {\n        console.debug('🧭 map(totalsDOM):', { key: 'subtotal', selector: `.totals-section .total-row[data-field=\"subtotal\"] .calculated-field`, value: suggestions.subtotal });\n        console.debug('🧭 map(totalsDOM):', { key: 'total', selector: `.totals-section .total-row[data-field=\"total\"] .total-field`, value: suggestions.total });\n      } catch {}\n\n      // 5) Comments, Contact Info (DOM)\n      const commentsEl = document.querySelector('.comments-content .editable-field');\n      const contactEl  = document.querySelector('.contact-section .editable-field');\n      write(commentsEl, suggestions.comments);\n      write(contactEl, suggestions.contactInfo);\n      try {\n        console.debug('🧭 map(comments):', { selector: '.comments-content .editable-field', value: suggestions.comments });\n        console.debug('🧭 map(contactInfo):', { selector: '.contact-section .editable-field', value: suggestions.contactInfo });\n      } catch {}\n\n      // 6) Bump timestamps\n      updateCompanyFieldsTimestamp();\n      updatePurchaseOrderFieldsTimestamp();\n\n      showNotification('✅ AI suggestions applied', 'success');\n    } catch (e) {\n      console.error('AI fill failed:', e);\n      showNotification(`❌ AI fill failed: ${e.message}`, 'error');\n    }\n  };\n\n  // ============================================================================\n  // XML EXPORT FUNCTIONALITY\n  // ============================================================================\n  \n  // Function to export form data as XML\n  const exportToXML = () => {\n    try {\n      console.log('📄 Starting XML generation...');\n      \n      // Capture current field values first\n      const capturedData = captureFieldValues();\n      \n      // Prepare data for XML generation\n      // Determine current visual order of sections 1 & 2 from DOM to avoid async state lag\n      const headerSections = Array.from(document.querySelectorAll('.header-section .sortable-section'));\n      const visualSections1And2 = headerSections\n        .map(el => el.id)\n        .filter(id => id === 'section1' || id === 'section2');\n      const sections1And2ForExport = (visualSections1And2.length === 2) ? visualSections1And2 : sections1And2Order;\n      \n      // Determine current visual order of sections 3 & 4 (Vendor / Ship-To) from DOM\n      const vendorShipToSections = Array.from(document.querySelectorAll('.vendor-shipping-section .sortable-section'));\n      const visualSections3And4 = vendorShipToSections\n        .map(el => el.id)\n        .filter(id => id === 'section3' || id === 'section4');\n      const sections3And4ForExport = (visualSections3And4.length === 2) ? visualSections3And4 : vendorShipToSectionOrder;\n      \n      // Helpers for DOM reads\n      const getText = (sel) => document.querySelector(sel)?.textContent?.trim() || '';\n      \n      // Normalize line items to include both UI keys (qty/rate/amount) and template keys (quantity/unitPrice/total)\n      const normalizedLineItems = (capturedData.lineItems || []).map(row => ({\n        // original UI keys\n        itemNumber: row.itemNumber || '',\n        description: row.description || '',\n        qty: row.qty || row.quantity || '',\n        rate: row.rate || row.unitPrice || '',\n        amount: row.amount || row.total || '',\n        // template-expected keys\n        quantity: row.quantity || row.qty || '',\n        unitPrice: row.unitPrice || row.rate || '',\n        total: row.total || row.amount || ''\n      }));\n\n      const exportData = {\n        ...capturedData,\n        // Add major sections order for group swapping\n        majorSectionsOrder: majorSectionsOrder, // New state for sections 3+4 group swapping with section 5\n        // Add section order information for dynamic XML generation\n        sectionOrder: {\n          sections1And2: sections1And2ForExport, // Use current visual order to ensure XML matches UI\n          sections3And4: sections3And4ForExport, // Use current visual order to ensure XML matches UI\n          sections5And6: sections5And6Order, // Use actual state for sections 5&6\n          sections8And9: commentsTotalsSectionOrder, // Use actual state for sections 8&9\n          lineItemColumns: lineItemColumnOrder, // Use actual state for line item columns\n          shippingColumns: shippingColumnOrder // Use actual state for shipping columns\n        },\n        // CRITICAL: Add field order information for dynamic XML generation (same pattern as section order)\n        fieldOrder: {\n          company: companyFieldOrder, // Preserve company field order independently of section position\n          purchaseOrder: purchaseOrderFieldOrder, // Preserve PO field order independently of section position\n          vendor: vendorFields.map(f => f.id), // Vendor field order\n          shipTo: shipToFields.map(f => f.id) // Ship-to field order\n        },\n                // Add normalized line items (support both key schemes)\n        lineItems: normalizedLineItems,\n        // Shipping details (prefer data-field; fall back handled in XML builder too)\n        // Capture all shipping columns dynamically, including custom ones\n        ...(() => {\n          const shippingData = {};\n          shippingColumnOrder.forEach(columnId => {\n            const value = getText(`.section-5 [data-field=\"${columnId}\"] .editable-field`);\n            shippingData[columnId] = value;\n          });\n          return shippingData;\n        })(),\n        // Totals: read what the user sees\n        subtotal: getText('.totals-section .total-row[data-field=\"subtotal\"] .calculated-field') || '$0.00',\n        tax: getText('.totals-section .total-row[data-field=\"tax\"] .editable-field') || '$0.00',\n        shipping: getText('.totals-section .total-row[data-field=\"shipping\"] .editable-field') || '$0.00',\n        other: getText('.totals-section .total-row[data-field=\"other\"] .editable-field') || '$0.00',\n        total: getText('.totals-section .total-row[data-field=\"total\"] .total-field') || '$0.00',\n        comments: getText('.comments-content .editable-field'),\n        contactInfo: getText('.contact-section .editable-field')\n      };\n      \n      console.debug('🔎 Export DOM reads:', {\n        requisitioner: exportData.requisitioner,\n        shipVia: exportData.shipVia,\n        fob: exportData.fob,\n        shippingTerms: exportData.shippingTerms,\n        subtotal: exportData.subtotal,\n        tax: exportData.tax,\n        shipping: exportData.shipping,\n        other: exportData.other,\n        total: exportData.total\n      });\n\n      console.log('📄 Export data prepared:', exportData);\n      console.log('🔀 Major sections order being sent to XML:', exportData.majorSectionsOrder);\n      console.log('🔀 Section order being sent to XML:', exportData.sectionOrder);\n      console.log('🔀 Sections 1&2 order:', exportData.sectionOrder.sections1And2);\n      console.log('🔀 Sections 3&4 order:', exportData.sectionOrder.sections3And4);\n      console.log('🔀 Sections 3&4 + 5&6 order:', exportData.sectionOrder.sections3And4And5And6);\n            console.log('🔀 Line item columns order:', exportData.sectionOrder.lineItemColumns);\n      console.log('🔀 Shipping columns order:', exportData.sectionOrder.shippingColumns);\n      console.log('🔀 Line items data:', exportData.lineItems);\n      \n      // CRITICAL: Log field order information\n      console.log('🔀 Field order being sent to XML:', exportData.fieldOrder);\n      console.log('🔀 Company field order:', exportData.fieldOrder.company);\n      console.log('🔀 Purchase order field order:', exportData.fieldOrder.purchaseOrder);\n      console.log('🔀 Vendor field order:', exportData.fieldOrder.vendor);\n      console.log('🔀 Ship-to field order:', exportData.fieldOrder.shipTo);\n      \n      // Generate XML\n      const xml = generatePurchaseOrderXML(exportData);\n      \n      // Display XML in a modal instead of downloading\n      displayXMLOutput(xml);\n      \n      // Update export timestamp\n      setLastExportTime(new Date().toISOString());\n      \n      showNotification('📄 XML generated successfully!', 'success');\n      console.log('✅ XML generation completed successfully');\n      \n    } catch (error) {\n      console.error('❌ XML generation failed:', error);\n      showNotification(`❌ XML generation failed: ${error.message}`, 'error');\n    }\n  };\n\n\n\n\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add to notification container\n    const container = document.getElementById('notification-container');\n    if (container) {\n      container.appendChild(notification);\n    } else {\n      // Fallback to body if container not found\n      document.body.appendChild(notification);\n    }\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setCompanyFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('🔄 Company field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('🔄 Company fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed purchase order field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // VENDOR FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Add new vendor field\n  const handleAddVendorField = (newField) => {\n    setVendorFields(prevFields => [...prevFields, newField]);\n    console.log('➕ Added new vendor field:', newField);\n    showNotification(`➕ Added vendor field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove vendor field\n  const handleRemoveVendorField = (fieldId) => {\n    setVendorFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed vendor field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('🗑️ Removed vendor field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle vendor field label changes\n  const handleVendorFieldLabelChange = (fieldId, newLabel) => {\n    setVendorFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'vendor');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n  };\n\n  // ============================================================================\n  // SHIP-TO FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Add new ship-to field\n  const handleAddShipToField = (newField) => {\n    setShipToFields(prevFields => [...prevFields, newField]);\n    console.log('➕ Added new ship-to field:', newField);\n    showNotification(`➕ Added ship-to field: \"${newField.label}\"`, 'success');\n  };\n\n  // Remove ship-to field\n  const handleRemoveShipToField = (fieldId) => {\n    setShipToFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed ship-to field: \"${fieldToRemove?.label}\"`, 'warning');\n      console.log('🗑️ Removed ship-to field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n  };\n\n  // Handle ship-to field label changes\n  const handleShipToFieldLabelChange = (fieldId, newLabel) => {\n    setShipToFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'ship-to');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    \n    // CRITICAL: Update field order state to preserve drag-and-drop order (same pattern as section swapping)\n    if (event.active.id !== event.over.id) {\n      setPurchaseOrderFieldOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(event.active.id);\n        const newIndex = prevOrder.indexOf(event.over.id);\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, event.active.id);\n        \n        console.log('🔄 Purchase order field order updated:', { oldIndex, newIndex, newOrder });\n        return newOrder;\n      });\n      \n      console.log('🔄 Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for vendor/ship-to section order\n  const [vendorShipToSectionOrder, setVendorShipToSectionOrder] = useState(['section3', 'section4']);\n  const [vendorShipToShippingGroupOrder, setVendorShipToShippingGroupOrder] = useState(['vendor-ship-to-shipping-group']);\n  \n  // State for sections 1 and 2 order (Company Info and Purchase Order)\n  const [sections1And2Order, setSections1And2Order] = useState(['section1', 'section2']);\n  \n  // State for sections 5 and 6 order (Vendor/Ship-To and Shipping Details)\n  const [sections5And6Order, setSections5And6Order] = useState(['section5']);  \n\n  // State for major sections order (vendor-shipto-group and shipping-section)\n  const [majorSectionsOrder, setMajorSectionsOrder] = useState(['vendor-shipto-group', 'shipping-section']);\n  \n  // State for vendor-ship-to and shipping-details sections order (simplified after removing section 7)\n  const [vendorShipToAndShippingDetailsOrder, setVendorShipToAndShippingDetailsOrder] = useState(['section5']);\n  \n  // CRITICAL: Add field order state management (same pattern as section order)\n  // State for company field order (preserves drag-and-drop order independently of section position)\n  const [companyFieldOrder, setCompanyFieldOrder] = useState([]);\n  \n  // State for purchase order field order (preserves drag-and-drop order independently of section position)\n  const [purchaseOrderFieldOrder, setPurchaseOrderFieldOrder] = useState([]);\n  \n  // Initialize field order states with current field IDs\n  React.useEffect(() => {\n    setCompanyFieldOrder(companyFields.map(field => field.id));\n  }, [companyFields]);\n  \n  React.useEffect(() => {\n    setPurchaseOrderFieldOrder(purchaseOrderFields.map(field => field.id));\n  }, [purchaseOrderFields]);\n  \n  // Line item column order state\n  const [lineItemColumnOrder, setLineItemColumnOrder] = useState([\n    'itemNumber',\n    'description', \n    'qty',\n    'rate',\n    'amount'\n  ]);\n  \n  // Log line item column order changes\n  useEffect(() => {\n    console.log('🔀 Line item column order updated:', lineItemColumnOrder);\n  }, [lineItemColumnOrder]);\n  \n  // Shipping column order state\n  const [shippingColumnOrder, setShippingColumnOrder] = useState([\n    'requisitioner',\n    'shipVia',\n    'fob',\n    'shippingTerms'\n  ]);\n  \n  // Log shipping column order changes\n  useEffect(() => {\n    console.log('🚢 Shipping column order updated:', shippingColumnOrder);\n  }, [shippingColumnOrder]);\n\n  // Comments and Totals section order state (Section 8 & 9)\n  const [commentsTotalsSectionOrder, setCommentsTotalsSectionOrder] = useState(['section8', 'section9']);\n\n  // Function to handle drag start\n  const handleDragStart = (event) => {\n    const { active } = event;\n    console.log('🚀 DRAG START:', { \n      active: active.id, \n      activeData: active?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n    // Add dragging state to the dragged element\n    if (active.id === 'section1' || active.id === 'section2') {\n      const element = document.getElementById(active.id);\n      if (element) {\n        element.setAttribute('data-is-dragging', 'true');\n        console.log('✅ Added dragging state to:', active.id);\n        \n        // Add visual feedback\n        element.style.border = '3px solid #ff6b6b';\n        element.style.backgroundColor = 'rgba(255, 107, 107, 0.1)';\n      }\n    }\n  };\n\n  // Function to handle drag over\n  const handleDragOver = (event) => {\n    const { active, over } = event;\n    \n    console.log('🎯 DRAG OVER EVENT:', { \n      active: active?.id, \n      over: over?.id,\n      activeData: active?.data?.current,\n      overData: over?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n\n    \n    // Handle section reordering drag over\n    if (active.id === 'section1' || active.id === 'section2') {\n      if (over && (over.id === 'section1' || over.id === 'section2')) {\n        console.log('🎯 Section DRAG OVER:', { \n          active: active.id, \n          over: over.id,\n          timestamp: new Date().toISOString()\n        });\n        \n        // Add over state to the target element\n        const targetElement = document.getElementById(over.id);\n        if (targetElement) {\n          targetElement.setAttribute('data-is-over', 'true');\n          \n          // Enhanced visual feedback for section reordering\n          targetElement.style.border = '3px solid #4ecdc4';\n          targetElement.style.backgroundColor = 'rgba(78, 205, 196, 0.15)';\n          targetElement.style.transform = 'scale(1.01)';\n          targetElement.style.transition = 'all 0.2s ease-in-out';\n          targetElement.style.boxShadow = '0 6px 20px rgba(78, 205, 196, 0.3)';\n        }\n      }\n    }\n  };\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SECTION DRAG DEBUG - Event received:', { \n      activeId: active?.id, \n      overId: over?.id,\n      activeData: active?.data?.current,\n      overData: over?.data?.current,\n      timestamp: new Date().toISOString()\n    });\n    \n    if (!active || !over) {\n      console.log('❌ Missing active or over in section drag');\n      return;\n    }\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', { active: active.id, over: over.id });\n      \n      setSections1And2Order((prevOrder) => {\n        console.log('🔄 Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        if (oldIndex === -1 || newIndex === -1) {\n          console.log('❌ Invalid indices found');\n          return prevOrder;\n        }\n        \n        const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\n        \n        console.log('🔄 New section order:', newOrder);\n        console.log('✅ Section swap successful!');\n        \n        showNotification('🔄 Sections swapped successfully!', 'success');\n        console.log('✅ Sections swapped via drag & drop!');\n        \n        return newOrder;\n      });\n      \n      // Clean up data attributes and visual feedback\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    } else {\n      console.log('🔍 No section swap - same position');\n      \n      // Clean up data attributes and visual feedback even if no swap\n      const section1Element = document.getElementById('section1');\n      const section2Element = document.getElementById('section2');\n      if (section1Element) {\n        section1Element.removeAttribute('data-is-dragging');\n        section1Element.removeAttribute('data-is-over');\n        section1Element.style.border = '';\n        section1Element.style.backgroundColor = '';\n      }\n      if (section2Element) {\n        section2Element.removeAttribute('data-is-dragging');\n        section2Element.removeAttribute('data-is-over');\n        section2Element.style.border = '';\n        section2Element.style.backgroundColor = '';\n      }\n    }\n  };\n\n  // Function to handle sections 5 and 6 reordering (Vendor/Ship-To and Shipping Details)\n  const handleSections5And6DragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 SECTIONS 5&6 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Sections 5&6 swap detected!', { active: active.id, over: over.id });\n      \n      setSections5And6Order(prevOrder => {\n        console.log('🔄 Previous sections 5&6 order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New sections 5&6 order:', newOrder);\n        \n        showNotification('🔄 Sections 5 and 6 reordered!', 'info');\n        console.log('🔄 Sections 5&6 reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No sections 5&6 swap - same position');\n    }\n  };\n\n  // Handle line item column drag end\n  const handleLineItemColumnDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 LINE ITEM COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Line item column swap detected!', { active: active.id, over: over.id });\n      \n      setLineItemColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('🔄 Previous line item column order:', items);\n        console.log('🔀 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('🔄 New line item column order:', newOrder);\n        showNotification('🔄 Line item columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No line item column swap - same position');\n    }\n  };\n\n  // Handle shipping column drag end\n  const handleShippingColumnDragEnd = (event) => {\n    // Check if this is an add-column event from Section5Shipping\n    if (event.type === 'add-column' && event.newOrder) {\n      console.log('🔍 SHIPPING COLUMN ADD DEBUG - New column added:', event.newOrder);\n      setShippingColumnOrder(event.newOrder);\n      showNotification('🚢 New shipping column added!', 'success');\n      return;\n    }\n    \n    // Check if this is the new event format from Section5Shipping (reordering)\n    if (event.newOrder) {\n      console.log('🔍 SHIPPING COLUMN DRAG DEBUG - New order received:', event.newOrder);\n      setShippingColumnOrder(event.newOrder);\n      showNotification('🚢 Shipping columns reordered!', 'info');\n      return;\n    }\n    \n    // Handle the old event format (fallback)\n    const { active, over } = event;\n    \n    console.log('🔍 SHIPPING COLUMN DRAG DEBUG - Event received:', { active: active.id, over: over.id });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Shipping column swap detected!', { active: active.id, over: over.id });\n      \n      setShippingColumnOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        console.log('🔄 Previous shipping column order:', items);\n        console.log('🔀 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = arrayMove(items, oldIndex, newIndex);\n        \n        console.log('🔄 New shipping column order:', newOrder);\n        showNotification('🚢 Shipping columns reordered!', 'info');\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No shipping column swap - same position');\n    }\n  };\n\n\n\n  // Handle Comments and Totals section drag end\n  const handleCommentsTotalsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (active.id !== over.id) {\n      setCommentsTotalsSectionOrder((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        \n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n  };\n\n  // Function to handle vendor/ship-to section reordering\n  const handleVendorShipToSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR/SHIP-TO DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor/Ship-To section swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToSectionOrder(prevOrder => {\n        console.log('🔄 Previous vendor/ship-to order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor/ship-to order:', newOrder);\n        \n        // The sections are already reordered by the code above, no need to swap field data\n        // Just show notification that sections were reordered\n        showNotification('🔄 Vendor and Ship To sections reordered!', 'info');\n        console.log('🔄 Vendor/Ship-To sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor/ship-to swap - same position');\n    }\n  };\n\n  // Function to handle vendor-ship-to and shipping-details sections reordering\n  const handleVendorShipToAndShippingDetailsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 VENDOR-SHIP-TO + SHIPPING DETAILS DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-ShipTo + Shipping Details swap detected!', { active: active.id, over: over.id });\n      \n      setVendorShipToAndShippingDetailsOrder(prevOrder => {\n        console.log('🔄 Previous vendor-shipTo + shipping details order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New vendor-shipTo + shipping details order:', newOrder);\n        \n        showNotification('🔄 Vendor-ShipTo and Shipping Details sections reordered!', 'info');\n        console.log('🔄 Vendor-ShipTo + Shipping Details sections reordered via drag & drop!');\n        console.log('📊 New section order:', newOrder);\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No vendor-shipTo + shipping details swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n              showNotification('🔄 Sections swapped!', 'info');\n    \n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n    };\n\n  // Function to manually swap Vendor and Ship To sections\n  const handleSwapVendorShipTo = () => {\n    console.log('🔄 MANUAL VENDOR/SHIP-TO SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Vendor fields:', vendorFields);\n    console.log('🔄 Before swap - Ship To fields:', shipToFields);\n    \n    // Store current values before swapping\n    const vendorFieldValues = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const shipToFieldValues = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Vendor field values:', vendorFieldValues);\n    console.log('🔍 Before swap - Ship To field values:', shipToFieldValues);\n    \n    // Swap the fields\n    setVendorFields(shipToFieldValues);\n    setShipToFields(vendorFieldValues);\n    \n    // Update section order\n    setVendorShipToSectionOrder(prevOrder => {\n      const newOrder = [...prevOrder].reverse();\n      return newOrder;\n    });\n    \n    showNotification('🔄 Vendor and Ship To sections swapped!', 'info');\n    \n    console.log('🔄 Vendor and Ship To sections swapped successfully!');\n    console.log('📊 New Vendor fields (was Ship To):', shipToFieldValues);\n    console.log('📊 New Ship To fields (was Vendor):', vendorFieldValues);\n    \n    // Log the swap operation\n    console.log('🔄 Vendor/Ship-To Swap Details:', {\n      'Vendor → Ship To': shipToFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value })),\n      'Ship To → Vendor': vendorFieldValues.map(f => ({ id: f.id, label: f.label, value: f.value }))\n    });\n  };\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n    \n    // Capture company field values - PRESERVE CURRENT ORDER\n    console.log('🔍 DEBUG: Current company fields order before capture:', companyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    console.log('🔍 DEBUG: Updated company fields order after capture:', updatedCompanyFields.map(f => ({ id: f.id, label: f.label })));\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture line item values from the table\n    const capturedLineItems = [];\n    for (let rowIndex = 0; rowIndex < 5; rowIndex++) {\n      const rowData = {};\n      lineItemColumnOrder.forEach(columnId => {\n        const cellSelector = `tr:nth-child(${rowIndex + 1}) td[data-column=\"${columnId}\"] .editable-field`;\n        const cell = document.querySelector(`.itemtable tbody ${cellSelector}`);\n        const value = cell ? cell.textContent.trim() : '';\n        rowData[columnId] = value;\n      });\n      capturedLineItems.push(rowData);\n    }\n    console.log('📝 Line items captured:', capturedLineItems);\n    \n    // Capture totals field values using the new state structure\n    const updatedTotalsFields = totalsFields.map(field => {\n      let value = field.value; // Default to current state value\n      \n      // For editable fields, try to get from DOM\n      if (!field.isCalculated) {\n        const selector = `.totals-section .total-row[data-field=\"${field.id}\"] .editable-field`;\n        const element = document.querySelector(selector);\n        if (element) {\n          value = element.textContent.trim();\n        }\n      }\n      \n      console.log(`📝 Totals field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    setTotalsFields(updatedTotalsFields);\n    \n    console.log('📝 Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields,\n      lineItems: capturedLineItems,\n      totalsFields: updatedTotalsFields\n    };\n  };\n\n  // Unified drag end dispatcher for a single top-level DndContext\n  const handleRootDragEnd = (event) => {\n    const { active } = event;\n    const activeId = active?.id || '';\n    const source = active?.data?.current?.source;\n\n    // Reset section handle dragging state\n    setIsSectionHandleDragging(false);\n    \n    // Clean up all visual feedback states\n    const allSections = document.querySelectorAll('[id^=\"section\"]');\n    allSections.forEach(section => {\n\n      section.removeAttribute('data-is-over');\n      section.removeAttribute('data-is-dragging');\n      \n      // Reset styles\n      section.style.border = '';\n      section.style.backgroundColor = '';\n      section.style.transform = '';\n      section.style.transition = '';\n      section.style.boxShadow = '';\n      \n      // Remove drop indicators\n      const dropIndicator = section.querySelector('.drop-indicator');\n      if (dropIndicator) {\n        dropIndicator.remove();\n      }\n    });\n\n    if (source === 'palette') {\n      handlePaletteDragEnd(event);\n      return;\n    }\n\n    // Sections 1 & 2 swap\n    if (activeId === 'section1' || activeId === 'section2') {\n      handleSectionDragEnd(event);\n      return;\n    }\n    // Vendor-ShipTo + ShippingDetails container swap\n    if (activeId === 'sections3And4' || activeId === 'sections5And6') {\n      handleVendorShipToAndShippingDetailsDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To section reordering\n    if (activeId === 'section3' || activeId === 'section4') {\n      handleVendorShipToSectionDragEnd(event);\n      return;\n    }\n    // Vendor or Ship-To individual field drags\n    if (String(activeId).startsWith('vendor-')) {\n      handleVendorDragEnd(event);\n      return;\n    }\n    if (String(activeId).startsWith('ship-to-')) {\n      handleShipToDragEnd(event);\n      return;\n    }\n    // Line item column reorder\n    if (['itemNumber','description','qty','rate','amount'].includes(activeId)) {\n      handleLineItemColumnDragEnd(event);\n      return;\n    }\n    // Comments & totals sections reorder\n    if (activeId === 'section8' || activeId === 'section9') {\n      handleCommentsTotalsDragEnd(event);\n      return;\n    }\n  };\n\n\n\n  // State for tracking section handle drag operations (simplified)\n  const [isSectionHandleDragging, setIsSectionHandleDragging] = useState(false);\n\n  const handleVendorShipToDragEnd = (event) => {\n    const { active, over } = event;\n\n    console.log('🔄 Individual sections drag end:', { \n      active: active?.id, \n      over: over?.id,\n      activeData: active?.data?.current,\n      overData: over?.data?.current,\n      vendorShipToSectionOrder: vendorShipToSectionOrder\n    });\n\n    // Only handle reordering between sections 3 and 4 within the group\n    if (active.id !== over.id &&\n        (active.id === 'section3' || active.id === 'section4') &&\n        (over.id === 'section3' || over.id === 'section4')) {\n      \n      const oldIndex = vendorShipToSectionOrder.indexOf(active.id);\n      const newIndex = vendorShipToSectionOrder.indexOf(over.id);\n\n      if (oldIndex !== -1 && newIndex !== -1) {\n        const newOrder = arrayMove(vendorShipToSectionOrder, oldIndex, newIndex);\n        setVendorShipToSectionOrder(newOrder);\n        console.log('🔄 Vendor/Ship-To sections reordered:', { from: active.id, to: over.id, newOrder: newOrder });\n        addToChangeHistory('section-reorder', `${active.id} → ${over.id}`, newOrder.join(', '));\n        showNotification('✅ Sections 3 and 4 reordered successfully', 'success');\n      }\n    } else {\n      console.log('🚫 Not handling this drag in individual context - might be group drag');\n    }\n  };\n\n  const handleVendorShipToShippingGroupDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Vendor-Ship-To-Shipping group drag ended:', {\n        active: active.id,\n        over: over.id\n      });\n      \n      // For now, this group can only be in one position\n      // In the future, this could be expanded to allow reordering with other major sections\n    }\n  };\n\n  // Handle major sections drag end (vendor-shipto-group and shipping-section)\n  const handleMajorSectionsDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🚀 Major sections drag end called:', { \n      active: active?.id, \n      over: over?.id,\n      activeData: active?.data?.current,\n      overData: over?.data?.current,\n      majorSectionsOrder: majorSectionsOrder\n    });\n    \n    if (!active || !over || active.id === over.id) {\n      console.log('❌ Early return:', { \n        noActive: !active, \n        noOver: !over, \n        sameId: active?.id === over?.id \n      });\n      return;\n    }\n\n    console.log('🔄 Major sections drag end:', { active: active.id, over: over.id });\n\n    // Check if we're dragging the vendor-shipto-group or shipping-section\n    if ((active.id === 'vendor-shipto-group' || active.id === 'shipping-section') &&\n        (over.id === 'vendor-shipto-group' || over.id === 'shipping-section')) {\n      \n      setMajorSectionsOrder(prevOrder => {\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        if (oldIndex !== -1 && newIndex !== -1) {\n          const newOrder = arrayMove(prevOrder, oldIndex, newIndex);\n          \n          console.log('🔄 Major sections reordered:', {\n            from: active.id,\n            to: over.id,\n            newOrder: newOrder\n          });\n          \n          // Add to change history\n          addToChangeHistory('major-sections-swap', \n            active.id === 'vendor-shipto-group' ? 'Vendor & Ship To Group' : 'Shipping Section',\n            `Swapped with ${over.id === 'vendor-shipto-group' ? 'Vendor & Ship To Group' : 'Shipping Section'}`\n          );\n          \n          showNotification('🔄 Sections 3+4 swapped with Section 5!', 'success');\n          \n          return newOrder;\n        }\n        \n        return prevOrder;\n      });\n    }\n  };\n\n\n\n  return (\n    <div className={`purchase-order-container ${!sidebarVisible ? 'sidebar-hidden' : ''}`}>\n      <DndContext \n        sensors={sensors} \n        collisionDetection={rectIntersection}\n        onDragCancel={() => {\n          console.log('❌ Drag cancelled');\n        }}\n        onDragMove={(event) => {\n          console.log('🔄 Drag move:', event);\n        }}\n        onDragStart={(event) => {\n          console.log('🚀 DndContext Drag Start:', event);\n          handleDragStart(event);\n        }}\n        onDragOver={(event) => {\n          console.log('🎯 DndContext Drag Over:', event);\n          handleDragOver(event);\n        }}\n        onDragEnd={(event) => {\n          console.log('🏁 DndContext Drag End:', event);\n          handleRootDragEnd(event);\n        }}\n      >\n        {console.log('🔧 DndContext rendering with:', {\n          sensors: sensors,\n          collisionDetection: closestCenter,\n          hasDragStart: !!handleDragStart,\n          hasDragOver: !!handleDragOver,\n          hasDragEnd: !!handleRootDragEnd,\n          timestamp: new Date().toISOString()\n        })}\n      {/* Available Fields Sidebar Component */}\n      <AvailableFields \n        isVisible={sidebarVisible}\n        onToggleVisibility={toggleSidebar}\n        showNotification={showNotification}\n      />\n\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n        {/* Sidebar toggle is now handled by AvailableFields component */}\n      </header>\n\n      \n\n      {/* Real-time Status Indicator removed per request */}\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section vendor-shipping-columns\">\n              {/* Section-level Drag and Drop */}\n              <SortableContext \n                items={sections1And2Order}\n                strategy={horizontalListSortingStrategy}\n              >\n                {console.log('🔧 SortableContext for sections 1&2:', { \n                  items: sections1And2Order, \n                  strategy: 'horizontalListSortingStrategy',\n                  sections1And2OrderType: typeof sections1And2Order,\n                  sections1And2OrderLength: sections1And2Order?.length,\n                  itemsArray: Array.isArray(sections1And2Order) ? sections1And2Order : 'NOT ARRAY',\n                  timestamp: new Date().toISOString()\n                })}\n                {console.log('🔧 SortableContext items validation:', {\n                  itemsValid: Array.isArray(sections1And2Order) && sections1And2Order.length > 0,\n                  itemsContent: sections1And2Order,\n                  strategyValid: horizontalListSortingStrategy !== undefined,\n                  timestamp: new Date().toISOString()\n                })}\n                {/* CRITICAL: Render sections dynamically based on sections1And2Order state */}\n                {sections1And2Order.map((sectionId, index) => {\n                  console.log(`🔧 Rendering section: ${sectionId} at index ${index}`);\n                  \n                  if (sectionId === 'section1') {\n                    return (\n                      <DraggableSectionWrapper key={`section1-${index}`} id=\"section1\" sectionNumber=\"1\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n                        <Section1CompanyInfo \n                          companyFields={companyFields}\n                          sensors={sensors}\n                          onCompanyDragEnd={handleCompanyDragEnd}\n                          onAddCompanyField={handleAddCompanyField}\n                          onRemoveCompanyField={handleRemoveCompanyField}\n                          onLabelChange={handleCompanyFieldLabelChange}\n                          onContentChange={handleContentChange}\n                          lastModified={lastModified}\n                        />\n                      </DraggableSectionWrapper>\n                    );\n                  } else if (sectionId === 'section2') {\n                    return (\n                      <DraggableSectionWrapper key={`section2-${index}`} id=\"section2\" sectionNumber=\"2\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n                        <Section2PurchaseOrder \n                          purchaseOrderFields={purchaseOrderFields}\n                          sensors={sensors}\n                          onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                          onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                          onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                          onLabelChange={handlePurchaseOrderFieldLabelChange}\n                          onContentChange={handleContentChange}\n                          lastModified={poLastModified}\n                        />\n                      </DraggableSectionWrapper>\n                    );\n                  }\n                  return null;\n                })}\n              </SortableContext>\n            </div>\n          </div>\n\n          {/* Major Sections Container with Drag and Drop */}\n          <div className=\"major-sections-container\">\n            <DndContext\n              sensors={sensors}\n              collisionDetection={closestCenter}\n              onDragEnd={handleMajorSectionsDragEnd}\n            >\n              <SortableContext \n                items={majorSectionsOrder}\n                strategy={verticalListSortingStrategy}\n              >\n                {majorSectionsOrder.map((sectionGroup, index) => {\n                  if (sectionGroup === 'vendor-shipto-group') {\n                    return (\n                      <div key={`vendor-shipto-group-${index}`} className=\"section-container\" style={{ marginTop: '30px', position: 'relative' }}>\n                        {/* Group Drag Handle for Sections 3 & 4 */}\n                        <DraggableGroupHandle id=\"vendor-shipto-group\" label=\"Vendor & Ship To\">\n                          <div className=\"vendor-shipping-columns\">\n                            {/* Individual sections with their own DndContext for internal reordering */}\n                            <DndContext\n                              sensors={sensors}\n                              collisionDetection={closestCenter}\n                              onDragEnd={handleVendorShipToDragEnd}\n                            >\n                              <SortableContext \n                                items={vendorShipToSectionOrder}\n                                strategy={horizontalListSortingStrategy}\n                              >\n                                {vendorShipToSectionOrder.map((sectionId, sectionIndex) => (\n                                  <div key={`${sectionId}-${sectionIndex}`} className=\"individual-section\">\n                                    {sectionId === 'section3' ? (\n                                      <DraggableSectionWrapper key={`section3-${sectionIndex}`} id=\"section3\" sectionNumber=\"3\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n                                        <Section3Vendor \n                                          vendorFields={vendorFields}\n                                          sensors={sensors}\n                                          onVendorDragEnd={handleVendorDragEnd}\n                                          onAddVendorField={handleAddVendorField}\n                                          onRemoveVendorField={handleRemoveVendorField}\n                                          onLabelChange={handleVendorFieldLabelChange}\n                                          onContentChange={handleContentChange}\n                                          lastModified={Date.now()}\n                                        />\n                                      </DraggableSectionWrapper>\n                                    ) : sectionId === 'section4' ? (\n                                      <DraggableSectionWrapper key=\"section4\" id=\"section4\" sectionNumber=\"4\" isSectionHandleDragging={isSectionHandleDragging} showDragHandle={true}>\n                                        <Section4ShipTo \n                                          shipToFields={shipToFields}\n                                          sensors={sensors}\n                                          onShipToDragEnd={handleShipToDragEnd}\n                                          onAddShipToField={handleAddShipToField}\n                                          onRemoveShipToField={handleRemoveShipToField}\n                                          onLabelChange={handleShipToFieldLabelChange}\n                                          onContentChange={handleContentChange}\n                                          lastModified={Date.now()}\n                                        />\n                                      </DraggableSectionWrapper>\n                                    ) : null}\n                                  </div>\n                                ))}\n                              </SortableContext>\n                            </DndContext>\n                          </div>\n                        </DraggableGroupHandle>\n                      </div>\n                    );\n                  } else if (sectionGroup === 'shipping-section') {\n                    return (\n                      <div key={`shipping-section-${index}`} style={{ marginTop: '30px' }}>\n                        <DraggableGroupHandle id=\"shipping-section\" label=\"Shipping\">\n                          <div className=\"section-5\">\n                            <Section5Shipping \n                              shippingColumnOrder={shippingColumnOrder}\n                              onShippingColumnDragEnd={handleShippingColumnDragEnd}\n                            />\n                          </div>\n                        </DraggableGroupHandle>\n                      </div>\n                    );\n                  }\n                  return null;\n                })}\n              </SortableContext>\n            </DndContext>\n\n\n          </div>\n\n          {/* Add Column Button - Positioned right outside Section 5 */}\n          <div style={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            marginBottom: '20px',\n            padding: '10px',\n            backgroundColor: '#f8fafc',\n            border: '1px solid #e5e7eb',\n            borderRadius: '8px',\n            width: '100%'\n          }}>\n            <button \n              className=\"add-column-btn\" \n              style={{\n                backgroundColor: '#3b82f6',\n                color: 'white',\n                border: 'none',\n                padding: '10px 16px',\n                borderRadius: '6px',\n                fontSize: '14px',\n                fontWeight: '600',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '6px',\n                transition: 'all 0.2s ease',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n              }}\n              onClick={(e) => {\n                e.stopPropagation();\n                e.preventDefault();\n                console.log('Add column button clicked from main form!');\n                \n                // Generate a unique ID for the new column\n                const newColumnId = `custom-${Date.now()}`;\n                \n                // Add the new column to the shipping column order\n                setShippingColumnOrder(prevOrder => {\n                  const newOrder = [...prevOrder, newColumnId];\n                  console.log('🚢 Added new shipping column:', { newColumnId, newOrder });\n                  console.log('🚢 Current shipping column order:', newOrder);\n                  return newOrder;\n                });\n                \n                // Show success notification\n                showNotification(`🚢 Added new shipping column: ${newColumnId}`, 'success');\n              }}\n              onMouseEnter={(e) => {\n                e.target.style.backgroundColor = '#1d4ed8';\n                e.target.style.transform = 'translateY(-1px)';\n                e.target.style.boxShadow = '0 4px 8px rgba(0,0,0,0.15)';\n              }}\n              onMouseLeave={(e) => {\n                e.target.style.backgroundColor = '#3b82f6';\n                e.target.style.transform = 'translateY(0)';\n                e.target.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n              }}\n              title=\"Add new shipping column\"\n            >\n              <span style={{ fontSize: '16px' }}>+</span>\n              Add Column\n            </button>\n          </div>\n\n          {/* Items Table */}\n          <div className=\"sortable-section items-section\" style={{ marginBottom: '20px' }}>\n            <div className=\"section-header\" style={{\n              padding: '12px',\n              backgroundColor: '#f8fafc',\n              borderBottom: '1px solid #e5e7eb',\n              fontWeight: '600',\n              fontSize: '14px',\n              color: '#374151',\n              textAlign: 'center'\n            }}>\n              Line Items\n              <span className=\"drag-indicator\">\n                ::\n              </span>\n            </div>\n            <SortableContext items={lineItemColumnOrder} strategy={verticalListSortingStrategy}>\n              <table className=\"itemtable\">\n              <thead>\n                <tr>\n                  <th></th>\n                  {lineItemColumnOrder.map((columnId, index) => {\n                    const columnConfig = {\n                      itemNumber: { label: 'Item#', colSpan: 3 },\n                      description: { label: 'Description', colSpan: 12 },\n                      qty: { label: 'Qty', colSpan: 2 },\n                      rate: { label: 'Rate', colSpan: 3 },\n                      amount: { label: 'Amount', colSpan: 3 }\n                    };\n                    \n                    const config = columnConfig[columnId];\n                    return (\n                      <th key={`${columnId}-${index}`} colSpan={config.colSpan}>\n                        {config.label}\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {[1, 2, 3, 4, 5].map((row, rowIndex) => (\n                  <tr key={`row-${row}-${rowIndex}`} className=\"draggable-row\">\n                    <td></td>\n                    {lineItemColumnOrder.map((columnId, colIndex) => {\n                      const columnConfig = {\n                        itemNumber: { colSpan: 3, placeholder: 'Item number' },\n                        description: { colSpan: 12, placeholder: 'Item description' },\n                        qty: { colSpan: 2, placeholder: 'Qty' },\n                        rate: { colSpan: 3, placeholder: '$0.00' },\n                        amount: { colSpan: 3, placeholder: '$0.00' }\n                      };\n                      \n                      const config = columnConfig[columnId];\n                      return (\n                        <td key={`${row}-${columnId}-${rowIndex}-${colIndex}`} colSpan={config.colSpan} data-column={columnId}>\n                          <span className=\"editable-field\" contentEditable=\"true\" data-placeholder={config.placeholder} />\n                        </td>\n                      );\n                    })}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            </SortableContext>\n          </div>\n\n\n\n          {/* Comments and Totals - Sections 8 & 9 */}\n          <SortableContext items={commentsTotalsSectionOrder} strategy={horizontalListSortingStrategy}>\n            <div className=\"comments-totals-section\" style={{ display: 'flex', gap: '20px' }}>\n                          {commentsTotalsSectionOrder.map((sectionId, index) => {\n              if (sectionId === 'section8') {\n                return (\n                  <div key={`section8-${index}`} id=\"section8\" className=\"sortable-section comments-section\" style={{ flex: 1 }}>\n                    <DraggableSectionHeader id=\"section8\">\n                      Comments or Special Instructions ::\n                    </DraggableSectionHeader>\n                    <div className=\"section-content\">\n                      <div className=\"comments-content\">\n                        <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n                      </div>\n                    </div>\n                  </div>\n                );\n              } else if (sectionId === 'section9') {\n                return (\n                  <div key={`section9-${index}`} id=\"section9\" className=\"sortable-section totals-section\" style={{ flex: 1 }}>\n                    <DraggableSectionHeader id=\"section9\">\n                      Totals ::\n                    </DraggableSectionHeader>\n                    <div className=\"section-content\">\n                      <div className=\"total-row\" data-field=\"subtotal\">\n                        <span>SUBTOTAL:</span>\n                        <span className=\"calculated-field\">$0.00</span>\n                      </div>\n                      <div className=\"total-row\" data-field=\"tax\">\n                        <span>TAX:</span>\n                        <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                      </div>\n                      <div className=\"total-row\" data-field=\"shipping\">\n                        <span>SHIPPING:</span>\n                        <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                      </div>\n                      <div className=\"total-row\" data-field=\"other\">\n                        <span>OTHER:</span>\n                        <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n                      </div>\n                      <div className=\"total-row total-final\" data-field=\"total\">\n                        <span>TOTAL:</span>\n                        <span className=\"calculated-field total-field\">$0.00</span>\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n              return null;\n            })}\n            </div>\n          </SortableContext>\n\n\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <div className=\"contact-content\">\n              <strong>Contact Information:</strong>\n              <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"button-section\">\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'}\n            </button>\n            <button className=\"btn\" onClick={handleAIFill}>\n              🤖 AI Fill\n            </button>\n            <button className=\"btn export-btn\" onClick={exportToXML}>\n              📄 Generate XML\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                📝 Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  🗑️ Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change, index) => (\n                  <div key={`${change.id}-${index}`} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">→</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* XML Output Modal */}\n          {showXMLModal && (\n            <div className=\"xml-modal-overlay\" onClick={closeXMLModal}>\n              <div className=\"xml-modal\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"xml-modal-header\">\n                  <h3>📄 Generated XML Output</h3>\n                  <button className=\"xml-modal-close\" onClick={closeXMLModal}>×</button>\n                </div>\n                <div className=\"xml-modal-content\">\n                  <div className=\"xml-output-container\">\n                    <pre className=\"xml-code\">{xmlOutput}</pre>\n                  </div>\n                </div>\n                <div className=\"xml-modal-actions\">\n                  <button className=\"btn copy-btn\" onClick={copyXMLToClipboard}>\n                    📋 Copy XML\n                  </button>\n                  <button className=\"btn download-btn\" onClick={downloadXML}>\n                    📥 Download XML\n                  </button>\n                  <button className=\"btn close-btn\" onClick={closeXMLModal}>\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n\n\n\n\n        </div>\n      </div>\n      </DndContext>\n      \n      {/* Notification Container */}\n      <div id=\"notification-container\"></div>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}