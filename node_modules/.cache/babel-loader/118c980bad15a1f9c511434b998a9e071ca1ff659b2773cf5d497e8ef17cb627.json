{"ast":null,"code":"var _jsxFileName = \"/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\n\n// Import custom hooks\nimport { useDragAndDropSensors, useCompanyFieldsDragEnd, usePurchaseOrderFieldsDragEnd, useVendorFieldsDragEnd, useShipToFieldsDragEnd } from './hooks/useDragAndDrop';\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\n\n// Main Purchase Order Form Component\n\n// Main Purchase Order Form Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PurchaseOrderForm() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n\n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([{\n    id: 'company-name',\n    label: 'Company Name:',\n    placeholder: 'Enter company name',\n    value: 'Acme Corporation'\n  }, {\n    id: 'company-address',\n    label: 'Street Address:',\n    placeholder: 'Enter street address',\n    value: '123 Business Street'\n  }, {\n    id: 'company-city-state',\n    label: 'City, ST ZIP:',\n    placeholder: 'City, State ZIP',\n    value: 'New York, NY 10001'\n  }, {\n    id: 'company-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: '(212) 555-0123'\n  }, {\n    id: 'company-fax',\n    label: 'Fax:',\n    placeholder: '(555) 123-4567',\n    value: '(212) 555-0124'\n  }, {\n    id: 'company-website',\n    label: 'Website:',\n    placeholder: 'www.example.com',\n    value: 'www.acmecorp.com'\n  }]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([{\n    id: 'po-title',\n    label: 'Purchase Order',\n    placeholder: '',\n    isTitle: true,\n    value: 'Purchase Order'\n  }, {\n    id: 'po-date',\n    label: 'DATE:',\n    placeholder: 'MM/DD/YYYY',\n    value: '12/15/2024'\n  }, {\n    id: 'po-number',\n    label: 'PO #:',\n    placeholder: 'PO#123456',\n    value: 'PO#2024-001'\n  }]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([{\n    id: 'vendor-company',\n    label: 'Company:',\n    placeholder: 'Vendor name',\n    value: 'Global Supplies Inc.'\n  }, {\n    id: 'vendor-contact',\n    label: 'Contact:',\n    placeholder: 'Contact person',\n    value: 'John Smith'\n  }, {\n    id: 'vendor-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: '456 Vendor Avenue'\n  }, {\n    id: 'vendor-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: 'Los Angeles, CA 90210'\n  }, {\n    id: 'vendor-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: '(310) 555-9876'\n  }]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([{\n    id: 'ship-to-name',\n    label: 'Name:',\n    placeholder: 'Contact name',\n    value: 'Sarah Johnson'\n  }, {\n    id: 'ship-to-company',\n    label: 'Company:',\n    placeholder: 'Shipping company',\n    value: 'Acme Corporation'\n  }, {\n    id: 'ship-to-address',\n    label: 'Address:',\n    placeholder: 'Street address',\n    value: '123 Business Street'\n  }, {\n    id: 'ship-to-city-state',\n    label: 'City/State:',\n    placeholder: 'City, ST ZIP',\n    value: 'New York, NY 10001'\n  }, {\n    id: 'ship-to-phone',\n    label: 'Phone:',\n    placeholder: '(555) 123-4567',\n    value: '(212) 555-0123'\n  }]);\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n\n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = newField => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    logChange('field-add', newField.id, '', newField.label, 'company');\n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = fieldId => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      showNotification(`🗑️ Removed company field: \"${fieldToRemove === null || fieldToRemove === void 0 ? void 0 : fieldToRemove.label}\"`, 'warning');\n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING AND HTML PREVIEW\n  // ============================================================================\n\n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n\n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      return prevFields.map(field => field.id === fieldId ? {\n        ...field,\n        label: newLabel\n      } : field);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n  // Function to generate live HTML preview\n  const generateLiveHTMLPreview = () => {\n    return generateHTMLMirror(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n  };\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // Enhanced HTML export with timestamp\n  const handleExportToHTML = () => {\n    const htmlContent = generateHTMLMirror(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n    const blob = new Blob([htmlContent], {\n      type: 'text/html'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.html`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    setLastExportTime(new Date().toISOString());\n    console.log('📄 HTML exported successfully!');\n  };\n\n  // XML export to clipboard\n  const handleExportToXML = () => {\n    // Generate XML content based on current form state\n    const xmlContent = generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n\n    // Show notification about XML generation\n    showNotification('📋 XML generated with current form structure!', 'success');\n    navigator.clipboard.writeText(xmlContent).then(() => {\n      console.log('📋 XML copied to clipboard!');\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(err => {\n      console.error('Failed to copy XML:', err);\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = xmlContent;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      console.log('📋 XML copied to clipboard (fallback method)!');\n      showNotification('📋 XML copied to clipboard!', 'success');\n    });\n  };\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = event => {\n    _s();\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Company fields reordered');\n      // MANUALLY TRIGGER XML UPDATE after field reorder\n      setTimeout(() => {\n        console.log('🔄 Manually triggering XML update after company field reorder...');\n        updateXMLContent();\n      }, 100);\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n\n  // Function to log a summary of all field states\n  _s(handleCompanyDragEnd, \"Z4WIFLscuzsxuDjcfj/36TQtLNg=\", false, function () {\n    return [useCompanyFieldsDragEnd];\n  });\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({\n          id: f.id,\n          label: f.label\n        }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({\n          id: f.id,\n          label: f.label,\n          isTitle: f.isTitle\n        }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n\n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = newField => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = fieldId => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = event => {\n    _s2();\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Purchase order fields reordered');\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n\n  // State for section order\n  _s2(handlePurchaseOrderDragEnd, \"v6fWquKCV6fyV8vMqH2r576JyB4=\", false, function () {\n    return [usePurchaseOrderFieldsDragEnd];\n  });\n  const [sectionOrder, setSectionOrder] = useState(['section1', 'section2']);\n\n  // Function to handle section reordering\n  const handleSectionDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    console.log('🔍 DRAG DEBUG - Event received:', {\n      active,\n      over\n    });\n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', {\n        active: active.id,\n        over: over.id\n      });\n      setSectionOrder(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        console.log('🔄 Index calculations:', {\n          oldIndex,\n          newIndex\n        });\n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        console.log('🔄 New section order:', newOrder);\n\n        // Swap the actual field data when sections are reordered\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n          // Section 1 moved to position 2\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle,\n              // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          console.log('🔄 Fields swapped in state!');\n\n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          showNotification('🔄 Sections swapped!', 'info');\n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n          // Section 2 moved to position 1\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle,\n              // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n            id: f.id,\n            label: f.label,\n            isTitle: f.isTitle\n          })));\n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          console.log('🔄 Fields swapped in state!');\n\n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          showNotification('🔄 Sections swapped!', 'info');\n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        }\n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n\n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n\n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle,\n        // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n\n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({\n      id: f.id,\n      label: f.label,\n      isTitle: f.isTitle\n    })));\n\n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n\n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n\n    // Show notification about XML structure change\n    showNotification('🔄 Sections swapped! XML structure has been updated.', 'info');\n\n    // MANUALLY TRIGGER XML UPDATE after manual section swap\n    setTimeout(() => {\n      console.log('🔄 Manually triggering XML update after manual section swap...');\n      updateXMLContent();\n    }, 100);\n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n\n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({\n        id: f.id,\n        label: f.label,\n        value: f.value,\n        isTitle: f.isTitle\n      }))\n    });\n  };\n\n  // Enhanced change logging with XML impact tracking\n  const logChangeWithXMLTracking = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section,\n      affectsXML: checkXMLStructureImpact(changeType, section, fieldId)\n    };\n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged with XML tracking:', change);\n  };\n\n  // Effect to automatically update XML content on mount and when key form data changes\n  useEffect(() => {\n    updateXMLContent();\n  }, [companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder]);\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n\n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n\n    // Capture company field values\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return {\n        ...field,\n        value\n      };\n    });\n\n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    console.log('📝 Field values captured and state updated!');\n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields\n    };\n  };\n\n  // Generate live XML preview\n  const generateLiveXMLPreview = () => {\n    try {\n      console.log('🚀 Generating live XML preview...');\n      const xmlContent = generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n      setCurrentXMLContent(xmlContent);\n      setXmlLastUpdated(new Date().toISOString());\n      console.log('✅ Live XML preview updated, length:', xmlContent.length);\n    } catch (error) {\n      console.error('❌ Failed to generate live XML preview:', error);\n      setCurrentXMLContent('Error generating XML: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"purchase-order-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Purchase Order Management System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create, edit, and manage purchase orders with ease\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-indicator\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCCA Total Fields:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().totalFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83C\\uDFE2 Company:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().companyFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCCB Purchase Order:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().purchaseOrderFields\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCDD Changes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: getFormStats().totalChanges\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDD52 Last Modified:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: new Date(getFormStats().lastModified).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 11\n        }, this), lastExportTime && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-label\",\n            children: \"\\uD83D\\uDCC4 Last Export:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-value\",\n            children: new Date(lastExportTime).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-section\",\n            children: /*#__PURE__*/_jsxDEV(DndContext, {\n              sensors: sensors,\n              collisionDetection: closestCenter,\n              onDragEnd: handleSectionDragEnd,\n              children: /*#__PURE__*/_jsxDEV(SortableContext, {\n                items: sectionOrder,\n                strategy: verticalListSortingStrategy,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"section1\",\n                  className: \"sortable-section\",\n                  children: /*#__PURE__*/_jsxDEV(Section1CompanyInfo, {\n                    companyFields: companyFields,\n                    sensors: sensors,\n                    onCompanyDragEnd: handleCompanyDragEnd,\n                    onAddCompanyField: handleAddCompanyField,\n                    onRemoveCompanyField: handleRemoveCompanyField,\n                    onLabelChange: handleCompanyFieldLabelChange,\n                    onContentChange: handleContentChange,\n                    lastModified: lastModified\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 819,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 818,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"section2\",\n                  className: \"sortable-section\",\n                  children: /*#__PURE__*/_jsxDEV(Section2PurchaseOrder, {\n                    purchaseOrderFields: purchaseOrderFields,\n                    sensors: sensors,\n                    onPurchaseOrderDragEnd: handlePurchaseOrderDragEnd,\n                    onAddPurchaseOrderField: handleAddPurchaseOrderField,\n                    onRemovePurchaseOrderField: handleRemovePurchaseOrderField,\n                    onLabelChange: handlePurchaseOrderFieldLabelChange,\n                    onContentChange: handleContentChange,\n                    lastModified: poLastModified\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 833,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 832,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Section3VendorShipTo, {\n          vendorFields: vendorFields,\n          shipToFields: shipToFields,\n          sensors: sensors,\n          onVendorDragEnd: handleVendorDragEnd,\n          onShipToDragEnd: handleShipToDragEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shipping-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: \"REQUISITIONER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: \"SHIP VIA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: \"F.O.B.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: \"SHIPPING TERMS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shipping-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editable-field\",\n              contentEditable: \"true\",\n              \"data-placeholder\": \"Requisitioner name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shipping-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editable-field\",\n              contentEditable: \"true\",\n              \"data-placeholder\": \"Shipping method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shipping-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editable-field\",\n              contentEditable: \"true\",\n              \"data-placeholder\": \"FOB terms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shipping-field\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"editable-field\",\n              contentEditable: \"true\",\n              \"data-placeholder\": \"Shipping terms\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"itemtable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"3\",\n                children: \"Item#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"12\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"2\",\n                children: \"Qty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 877,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"3\",\n                children: \"Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                colSpan: \"3\",\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [1, 2, 3, 4, 5].map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"draggable-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"Item number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 886,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"12\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"Item description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"2\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"$0.00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 889,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 889,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"editable-field\",\n                  contentEditable: \"true\",\n                  \"data-placeholder\": \"$0.00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 890,\n                  columnNumber: 35\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 890,\n                columnNumber: 19\n              }, this)]\n            }, row, true, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-totals-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comments-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              children: \"Comments or Special Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comments-content\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"Enter comments or special instructions...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"totals-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"SUBTOTAL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 907,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"calculated-field\",\n                children: \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"TAX:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"SHIPPING:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 916,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"OTHER:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"editable-field\",\n                contentEditable: \"true\",\n                \"data-placeholder\": \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-row total-final\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"TOTAL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"calculated-field total-field\",\n                children: \"$0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contact Information:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"editable-field\",\n            contentEditable: \"true\",\n            \"data-placeholder\": \"Enter contact information here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 932,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn export-html-btn\",\n            onClick: handleExportToHTML,\n            children: \"\\uD83D\\uDCC4 Convert to HTML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn preview-btn\",\n            onClick: togglePreviewMode,\n            children: isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 11\n        }, this), changeHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-history-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [\"\\uD83D\\uDCDD Change History (\", changeHistory.length, \" changes)\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"clear-history-btn\",\n              onClick: clearChangeHistory,\n              children: \"\\uD83D\\uDDD1\\uFE0F Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 950,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-list\",\n            children: [changeHistory.slice(0, 10).map(change => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-time\",\n                children: new Date(change.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-type\",\n                children: change.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 960,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-field\",\n                children: change.fieldId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-old\",\n                children: change.oldValue || 'empty'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-arrow\",\n                children: \"\\u2192\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 963,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"change-new\",\n                children: change.newValue || 'empty'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 21\n              }, this)]\n            }, change.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 19\n            }, this)), changeHistory.length > 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"change-more\",\n              children: [\"... and \", changeHistory.length - 10, \" more changes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 947,\n          columnNumber: 13\n        }, this), isPreviewMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"html-preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [\"\\uD83D\\uDD0D Live HTML Preview\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"copy-html-btn\",\n              onClick: () => {\n                navigator.clipboard.writeText(generateLiveHTMLPreview());\n                console.log('📋 HTML copied to clipboard!');\n              },\n              children: \"\\uD83D\\uDCCB Copy HTML\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-container\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              title: \"HTML Preview\",\n              srcDoc: generateLiveHTMLPreview(),\n              className: \"html-preview-frame\",\n              sandbox: \"allow-scripts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"xml-preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [\"\\uD83D\\uDCC4 Live XML Preview\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"copy-xml-btn\",\n              onClick: () => {\n                navigator.clipboard.writeText(currentXMLContent);\n                console.log('📋 XML copied to clipboard!');\n              },\n              children: \"\\uD83D\\uDCCB Copy XML\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-container\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"xml-preview-content\",\n              children: currentXMLContent || 'XML will be generated when you open the XML Generator Modal'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XMLGeneratorModal, {\n          isOpen: isXMLModalOpen,\n          onClose: () => setIsXMLModalOpen(false),\n          formData: xmlFormData,\n          onRefresh: () => {\n            // Refresh form data if needed\n            console.log('🔄 Refreshing form data...');\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 758,\n    columnNumber: 5\n  }, this);\n}\n_s3(PurchaseOrderForm, \"ZXnIppVX7IUFFeEt4eDn9jjxcW0=\", false, function () {\n  return [useDragAndDropSensors, useVendorFieldsDragEnd, useShipToFieldsDragEnd];\n});\n_c = PurchaseOrderForm;\nexport default PurchaseOrderForm;\nvar _c;\n$RefreshReg$(_c, \"PurchaseOrderForm\");","map":{"version":3,"names":["React","useState","useEffect","Section1CompanyInfo","Section2PurchaseOrder","Section3VendorShipTo","useDragAndDropSensors","useCompanyFieldsDragEnd","usePurchaseOrderFieldsDragEnd","useVendorFieldsDragEnd","useShipToFieldsDragEnd","DndContext","closestCenter","SortableContext","verticalListSortingStrategy","jsxDEV","_jsxDEV","PurchaseOrderForm","_s3","_s","$RefreshSig$","_s2","companyFields","setCompanyFields","id","label","placeholder","value","lastModified","setLastModified","Date","toISOString","poLastModified","setPoLastModified","purchaseOrderFields","setPurchaseOrderFields","isTitle","vendorFields","setVendorFields","shipToFields","setShipToFields","sensors","handleVendorDragEnd","handleShipToDragEnd","updateCompanyFieldsTimestamp","handleAddCompanyField","newField","prevFields","logChange","console","log","handleRemoveCompanyField","fieldId","fieldToRemove","find","field","showNotification","filter","changeHistory","setChangeHistory","isPreviewMode","setIsPreviewMode","lastExportTime","setLastExportTime","changeType","oldValue","newValue","section","change","now","timestamp","type","prev","slice","handleCompanyFieldLabelChange","newLabel","oldField","oldLabel","map","handlePurchaseOrderFieldLabelChange","updatePurchaseOrderFieldsTimestamp","handleContentChange","newContent","fieldType","f","generateLiveHTMLPreview","generateHTMLMirror","sectionOrder","togglePreviewMode","clearChangeHistory","handleExportToHTML","htmlContent","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","replace","body","appendChild","click","removeChild","revokeObjectURL","handleExportToXML","xmlContent","generateXMLTemplate","navigator","clipboard","writeText","then","catch","err","error","textArea","select","execCommand","message","existingNotification","querySelector","remove","notification","className","innerHTML","style","cssText","textContent","head","setTimeout","parentElement","getFormStats","totalFields","length","totalChanges","Math","max","getTime","handleCompanyDragEnd","event","active","over","updateXMLContent","logFieldSummary","company","total","toLocaleString","fields","purchaseOrder","handleAddPurchaseOrderField","handleRemovePurchaseOrderField","handlePurchaseOrderDragEnd","setSectionOrder","handleSectionDragEnd","prevOrder","oldIndex","indexOf","newIndex","newOrder","splice","companyFieldValues","element","getElementById","trim","purchaseOrderFieldValues","newCompanyFields","newPurchaseOrderFields","handleSwapSections","logChangeWithXMLTracking","affectsXML","checkXMLStructureImpact","captureFieldValues","updatedCompanyFields","updatedPurchaseOrderFields","updatedVendorFields","updatedShipToFields","generateLiveXMLPreview","setCurrentXMLContent","setXmlLastUpdated","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","collisionDetection","onDragEnd","items","strategy","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","onPurchaseOrderDragEnd","onAddPurchaseOrderField","onRemovePurchaseOrderField","onVendorDragEnd","onShipToDragEnd","contentEditable","colSpan","row","onClick","title","srcDoc","sandbox","currentXMLContent","XMLGeneratorModal","isOpen","isXMLModalOpen","onClose","setIsXMLModalOpen","formData","xmlFormData","onRefresh","_c","$RefreshReg$"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/PurchaseOrderForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PurchaseOrderForm.css';\n\n// Import modular components\nimport Section1CompanyInfo from './components/Section1CompanyInfo';\nimport Section2PurchaseOrder from './components/Section2PurchaseOrder';\nimport Section3VendorShipTo from './components/Section3VendorShipTo';\n\n// Import custom hooks\nimport { \n  useDragAndDropSensors, \n  useCompanyFieldsDragEnd, \n  usePurchaseOrderFieldsDragEnd,\n  useVendorFieldsDragEnd,\n  useShipToFieldsDragEnd\n} from './hooks/useDragAndDrop';\n\nimport { DndContext, closestCenter } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\n\n\n// Main Purchase Order Form Component\n\n// Main Purchase Order Form Component\nfunction PurchaseOrderForm() {\n  // ============================================================================\n  // STATE MANAGEMENT\n  // ============================================================================\n  \n  // Company fields state for Section 1\n  const [companyFields, setCompanyFields] = useState([\n    { id: 'company-name', label: 'Company Name:', placeholder: 'Enter company name', value: 'Acme Corporation' },\n    { id: 'company-address', label: 'Street Address:', placeholder: 'Enter street address', value: '123 Business Street' },\n    { id: 'company-city-state', label: 'City, ST ZIP:', placeholder: 'City, State ZIP', value: 'New York, NY 10001' },\n    { id: 'company-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '(212) 555-0123' },\n    { id: 'company-fax', label: 'Fax:', placeholder: '(555) 123-4567', value: '(212) 555-0124' },\n    { id: 'company-website', label: 'Website:', placeholder: 'www.example.com', value: 'www.acmecorp.com' }\n  ]);\n\n  // Track last modification time for company fields\n  const [lastModified, setLastModified] = useState(new Date().toISOString());\n\n  // Track last modification time for purchase order fields\n  const [poLastModified, setPoLastModified] = useState(new Date().toISOString());\n\n\n\n  // Purchase Order fields state for Section 2\n  const [purchaseOrderFields, setPurchaseOrderFields] = useState([\n    { id: 'po-title', label: 'Purchase Order', placeholder: '', isTitle: true, value: 'Purchase Order' },\n    { id: 'po-date', label: 'DATE:', placeholder: 'MM/DD/YYYY', value: '12/15/2024' },\n    { id: 'po-number', label: 'PO #:', placeholder: 'PO#123456', value: 'PO#2024-001' }\n  ]);\n\n  // Vendor fields state for Section 3\n  const [vendorFields, setVendorFields] = useState([\n    { id: 'vendor-company', label: 'Company:', placeholder: 'Vendor name', value: 'Global Supplies Inc.' },\n    { id: 'vendor-contact', label: 'Contact:', placeholder: 'Contact person', value: 'John Smith' },\n    { id: 'vendor-address', label: 'Address:', placeholder: 'Street address', value: '456 Vendor Avenue' },\n    { id: 'vendor-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: 'Los Angeles, CA 90210' },\n    { id: 'vendor-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '(310) 555-9876' }\n  ]);\n\n  // Ship To fields state for Section 3\n  const [shipToFields, setShipToFields] = useState([\n    { id: 'ship-to-name', label: 'Name:', placeholder: 'Contact name', value: 'Sarah Johnson' },\n    { id: 'ship-to-company', label: 'Company:', placeholder: 'Shipping company', value: 'Acme Corporation' },\n    { id: 'ship-to-address', label: 'Address:', placeholder: 'Street address', value: '123 Business Street' },\n    { id: 'ship-to-city-state', label: 'City/State:', placeholder: 'City, ST ZIP', value: 'New York, NY 10001' },\n    { id: 'ship-to-phone', label: 'Phone:', placeholder: '(555) 123-4567', value: '(212) 555-0123' }\n  ]);\n\n\n\n  // ============================================================================\n  // CUSTOM HOOKS\n  // ============================================================================\n  \n  const sensors = useDragAndDropSensors();\n  const handleVendorDragEnd = useVendorFieldsDragEnd(setVendorFields);\n  const handleShipToDragEnd = useShipToFieldsDragEnd(setShipToFields);\n\n  // ============================================================================\n  // COMPANY FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when company fields change\n  const updateCompanyFieldsTimestamp = () => {\n    setLastModified(new Date().toISOString());\n  };\n\n  // Add new company field\n  const handleAddCompanyField = (newField) => {\n    setCompanyFields(prevFields => [...prevFields, newField]);\n    updateCompanyFieldsTimestamp();\n    \n    logChange('field-add', newField.id, '', newField.label, 'company');\n    \n    console.log('➕ Added new company field:', newField);\n  };\n\n  // Remove company field\n  const handleRemoveCompanyField = (fieldId) => {\n    setCompanyFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      \n      showNotification(`🗑️ Removed company field: \"${fieldToRemove?.label}\"`, 'warning');\n      \n      console.log('🗑️ Removed company field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  // ============================================================================\n  // ENHANCED CHANGE TRACKING AND HTML PREVIEW\n  // ============================================================================\n  \n  // State for tracking all changes\n  const [changeHistory, setChangeHistory] = useState([]);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const [lastExportTime, setLastExportTime] = useState(null);\n  \n\n\n  \n  // Function to log changes with timestamps\n  const logChange = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged:', change);\n  };\n\n  // Enhanced field update functions with change logging\n  const handleCompanyFieldLabelChange = (fieldId, newLabel) => {\n    setCompanyFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'company');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updateCompanyFieldsTimestamp();\n  };\n\n  const handlePurchaseOrderFieldLabelChange = (fieldId, newLabel) => {\n    setPurchaseOrderFields(prevFields => {\n      const oldField = prevFields.find(field => field.id === fieldId);\n      const oldLabel = oldField ? oldField.label : '';\n      \n      logChange('label-change', fieldId, oldLabel, newLabel, 'purchase-order');\n      \n      return prevFields.map(field => \n        field.id === fieldId ? { ...field, label: newLabel } : field\n      );\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Function to handle content changes in editable fields\n  const handleContentChange = (fieldId, newContent, section) => {\n    // Find the field and log the change\n    let oldValue = '';\n    let fieldType = '';\n    \n    if (section === 'company') {\n      const field = companyFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    } else if (section === 'purchase-order') {\n      const field = purchaseOrderFields.find(f => f.id === fieldId);\n      if (field) {\n        oldValue = field.value || '';\n        fieldType = field.label;\n      }\n    }\n    \n    if (oldValue !== newContent) {\n      logChange('content-change', fieldId, oldValue, newContent, section);\n    }\n  };\n\n  // Function to generate live HTML preview\n  const generateLiveHTMLPreview = () => {\n    return generateHTMLMirror(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n  };\n\n  // Function to toggle preview mode\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n  };\n\n  // Function to clear change history\n  const clearChangeHistory = () => {\n    setChangeHistory([]);\n    console.log('🗑️ Change history cleared');\n  };\n\n  // Enhanced HTML export with timestamp\n  const handleExportToHTML = () => {\n    const htmlContent = generateHTMLMirror(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n    const blob = new Blob([htmlContent], { type: 'text/html' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `purchase-order-${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.html`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    \n    setLastExportTime(new Date().toISOString());\n    console.log('📄 HTML exported successfully!');\n  };\n\n  // XML export to clipboard\n  const handleExportToXML = () => {\n    // Generate XML content based on current form state\n    const xmlContent = generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n    \n    // Show notification about XML generation\n    showNotification('📋 XML generated with current form structure!', 'success');\n    \n    navigator.clipboard.writeText(xmlContent).then(() => {\n      console.log('📋 XML copied to clipboard!');\n      showNotification('📋 XML copied to clipboard!', 'success');\n    }).catch(err => {\n      console.error('Failed to copy XML:', err);\n      // Fallback for older browsers\n      const textArea = document.createElement('textarea');\n      textArea.value = xmlContent;\n      document.body.appendChild(textArea);\n      textArea.select();\n      document.execCommand('copy');\n      document.body.removeChild(textArea);\n      console.log('📋 XML copied to clipboard (fallback method)!');\n      showNotification('📋 XML copied to clipboard!', 'success');\n    });\n  };\n\n\n\n  // Show notification function\n  const showNotification = (message, type = 'info') => {\n    // Remove any existing notifications\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n      existingNotification.remove();\n    }\n\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.innerHTML = `\n      <div class=\"notification-content\">\n        <span class=\"notification-message\">${message}</span>\n        <button class=\"notification-close\" onclick=\"this.parentElement.parentElement.remove()\">×</button>\n      </div>\n    `;\n\n    // Add styles\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${type === 'success' ? '#28a745' : type === 'error' ? '#dc3545' : '#17a2b8'};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 5px;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      z-index: 10000;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      max-width: 300px;\n      animation: slideIn 0.3s ease-out;\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateX(100%);\n          opacity: 0;\n        }\n        to {\n          transform: translateX(0);\n          opacity: 1;\n        }\n      }\n      .notification-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .notification-close {\n        background: none;\n        border: none;\n        color: white;\n        font-size: 18px;\n        cursor: pointer;\n        margin-left: 10px;\n        padding: 0;\n        width: 20px;\n        height: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .notification-close:hover {\n        opacity: 0.8;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // Add to page\n    document.body.appendChild(notification);\n\n    // Auto-remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 3000);\n  };\n\n  // Get current form statistics\n  const getFormStats = () => {\n    return {\n      totalFields: companyFields.length + purchaseOrderFields.length + vendorFields.length + shipToFields.length,\n      companyFields: companyFields.length,\n      purchaseOrderFields: purchaseOrderFields.length,\n      vendorFields: vendorFields.length,\n      shipToFields: shipToFields.length,\n      totalChanges: changeHistory.length,\n      lastModified: Math.max(new Date(lastModified).getTime(), new Date(poLastModified).getTime())\n    };\n  };\n\n  // Handle company field drag and drop with timestamp update\n  const handleCompanyDragEnd = (event) => {\n    useCompanyFieldsDragEnd(setCompanyFields)(event);\n    updateCompanyFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Company fields reordered');\n      // MANUALLY TRIGGER XML UPDATE after field reorder\n      setTimeout(() => {\n        console.log('🔄 Manually triggering XML update after company field reorder...');\n        updateXMLContent();\n      }, 100);\n    }\n  };\n\n  // ============================================================================\n  // SUMMARY LOGGING FUNCTION\n  // ============================================================================\n  \n  // Function to log a summary of all field states\n  const logFieldSummary = () => {\n    console.log('📊 FIELD SUMMARY:', {\n      company: {\n        total: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map(f => ({ id: f.id, label: f.label }))\n      },\n      purchaseOrder: {\n        total: purchaseOrderFields.length,\n        lastModified: new Date(poLastModified).toLocaleString(),\n        fields: purchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle }))\n      }\n    });\n  };\n\n  // Log summary on component mount\n  React.useEffect(() => {\n    logFieldSummary();\n  }, []); // Only run once on mount\n\n  // ============================================================================\n  // PURCHASE ORDER FIELD MANAGEMENT FUNCTIONS\n  // ============================================================================\n  \n  // Helper function to update timestamp when purchase order fields change\n  const updatePurchaseOrderFieldsTimestamp = () => {\n    setPoLastModified(new Date().toISOString());\n  };\n\n  // Add new purchase order field\n  const handleAddPurchaseOrderField = (newField) => {\n    setPurchaseOrderFields(prevFields => [...prevFields, newField]);\n    updatePurchaseOrderFieldsTimestamp();\n    console.log('➕ Added new purchase order field:', newField);\n  };\n\n  // Remove purchase order field\n  const handleRemovePurchaseOrderField = (fieldId) => {\n    setPurchaseOrderFields(prevFields => {\n      const fieldToRemove = prevFields.find(field => field.id === fieldId);\n      console.log('🗑️ Removed purchase order field:', fieldToRemove);\n      return prevFields.filter(field => field.id !== fieldId);\n    });\n    updatePurchaseOrderFieldsTimestamp();\n  };\n\n  // Handle purchase order field drag and drop with timestamp update\n  const handlePurchaseOrderDragEnd = (event) => {\n    usePurchaseOrderFieldsDragEnd(setPurchaseOrderFields)(event);\n    updatePurchaseOrderFieldsTimestamp();\n    // Only log significant reordering, not every small drag\n    if (event.active.id !== event.over.id) {\n      console.log('🔄 Purchase order fields reordered');\n\n    }\n  };\n\n  // ============================================================================\n  // SECTION-LEVEL DRAG AND DROP\n  // ============================================================================\n  \n  // State for section order\n  const [sectionOrder, setSectionOrder] = useState(['section1', 'section2']);\n  \n  // Function to handle section reordering\n  const handleSectionDragEnd = (event) => {\n    const { active, over } = event;\n    \n    console.log('🔍 DRAG DEBUG - Event received:', { active, over });\n    \n    if (active.id !== over.id) {\n      console.log('🔄 Section swap detected!', { active: active.id, over: over.id });\n      \n      setSectionOrder(prevOrder => {\n        console.log('🔄 Previous section order:', prevOrder);\n        \n        const oldIndex = prevOrder.indexOf(active.id);\n        const newIndex = prevOrder.indexOf(over.id);\n        \n        console.log('🔄 Index calculations:', { oldIndex, newIndex });\n        \n        const newOrder = [...prevOrder];\n        newOrder.splice(oldIndex, 1);\n        newOrder.splice(newIndex, 0, active.id);\n        \n        console.log('🔄 New section order:', newOrder);\n        \n        // Swap the actual field data when sections are reordered\n        if (active.id === 'section1' && over.id === 'section2') {\n          console.log('🔄 SWAP TYPE: Section 1 → Section 2');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n          \n          // Section 1 moved to position 2\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle, // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n          \n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          \n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          \n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          \n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          \n          console.log('🔄 Fields swapped in state!');\n          \n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          \n          showNotification('🔄 Sections swapped!', 'info');\n          \n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        } else if (active.id === 'section2' && over.id === 'section1') {\n          console.log('🔄 SWAP TYPE: Section 2 → Section 1');\n          console.log('🔄 Before swap - Company fields:', companyFields);\n          console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n          \n          // Section 2 moved to position 1\n          const companyFieldValues = companyFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n            const element = document.getElementById(field.id);\n            return {\n              ...field,\n              isTitle: field.isTitle, // Explicitly preserve isTitle property\n              value: element ? element.textContent.trim() : ''\n            };\n          });\n          \n          console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n          console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n          \n          // IMPORTANT: Create new field arrays to avoid reference issues\n          const newCompanyFields = purchaseOrderFields.map(field => ({\n            ...field,\n            isTitle: field.isTitle // Ensure isTitle is preserved\n          }));\n          \n          const newPurchaseOrderFields = companyFields.map(field => ({\n            ...field,\n            isTitle: false // Company fields should never be title\n          }));\n          \n          console.log('🔄 About to swap fields...');\n          console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n          \n          setCompanyFields(newCompanyFields);\n          setPurchaseOrderFields(newPurchaseOrderFields);\n          \n          console.log('🔄 Fields swapped in state!');\n          \n          // Update timestamps\n          setLastModified(new Date().toISOString());\n          setPoLastModified(new Date().toISOString());\n          \n          showNotification('🔄 Sections swapped!', 'info');\n          \n          console.log('🔄 Sections swapped via drag & drop!');\n          console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n          console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n        }\n        \n        return newOrder;\n      });\n    } else {\n      console.log('🔍 No section swap - same position');\n    }\n  };\n\n  // ============================================================================\n  // SECTION SWAPPING FUNCTION\n  // ============================================================================\n  \n\n  \n  // Function to swap Section 1 and Section 2\n  const handleSwapSections = () => {\n    console.log('🔄 MANUAL SWAP FUNCTION CALLED');\n    console.log('🔄 Before swap - Company fields:', companyFields);\n    console.log('🔄 Before swap - Purchase Order fields:', purchaseOrderFields);\n    \n    // Store current values before swapping\n    const companyFieldValues = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    const purchaseOrderFieldValues = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      return {\n        ...field,\n        isTitle: field.isTitle, // Explicitly preserve isTitle property\n        value: element ? element.textContent.trim() : ''\n      };\n    });\n    \n    console.log('🔍 Before swap - Purchase Order fields:', purchaseOrderFieldValues);\n    console.log('🔍 Title field check:', purchaseOrderFieldValues.find(f => f.isTitle));\n    \n    // IMPORTANT: Create new field arrays to avoid reference issues\n    const newCompanyFields = purchaseOrderFields.map(field => ({\n      ...field,\n      isTitle: field.isTitle // Ensure isTitle is preserved\n    }));\n    \n    const newPurchaseOrderFields = companyFields.map(field => ({\n      ...field,\n      isTitle: false // Company fields should never be title\n    }));\n    \n    console.log('🔄 About to swap fields...');\n    console.log('🔄 New company fields (with title check):', newCompanyFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    console.log('🔄 New PO fields (with title check):', newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, isTitle: f.isTitle })));\n    \n    // Swap the fields - keep Purchase Order section intact (title + date + po#)\n    setCompanyFields(newCompanyFields);\n    setPurchaseOrderFields(newPurchaseOrderFields);\n    \n    // Update timestamps\n    setLastModified(new Date().toISOString());\n    setPoLastModified(new Date().toISOString());\n    \n    // Show notification about XML structure change\n    showNotification('🔄 Sections swapped! XML structure has been updated.', 'info');\n    \n    // MANUALLY TRIGGER XML UPDATE after manual section swap\n    setTimeout(() => {\n      console.log('🔄 Manually triggering XML update after manual section swap...');\n      updateXMLContent();\n    }, 100);\n    \n    console.log('🔄 Sections swapped successfully!');\n    console.log('📊 New Section 1 (was Section 2):', newCompanyFields);\n    console.log('📊 New Section 2 (was Section 1):', newPurchaseOrderFields);\n    \n    // Log the swap operation\n    console.log('🔄 Section Swap Details:', {\n      'Section 1 → Section 2': newCompanyFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle })),\n      'Section 2 → Section 1': newPurchaseOrderFields.map(f => ({ id: f.id, label: f.label, value: f.value, isTitle: f.isTitle }))\n    });\n  };\n\n\n  \n\n  \n\n  \n\n  \n  // Enhanced change logging with XML impact tracking\n  const logChangeWithXMLTracking = (changeType, fieldId, oldValue, newValue, section) => {\n    const change = {\n      id: Date.now(),\n      timestamp: new Date().toISOString(),\n      type: changeType,\n      fieldId,\n      oldValue,\n      newValue,\n      section,\n      affectsXML: checkXMLStructureImpact(changeType, section, fieldId)\n    };\n    \n    setChangeHistory(prev => [change, ...prev.slice(0, 49)]); // Keep last 50 changes\n    console.log('📝 Change logged with XML tracking:', change);\n  };\n\n  // Effect to automatically update XML content on mount and when key form data changes\n  useEffect(() => {\n    updateXMLContent();\n  }, [companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder]);\n\n  // ============================================================================\n  // FIELD VALUE CAPTURE\n  // ============================================================================\n  \n  // Function to capture current field values from the DOM\n  const captureFieldValues = () => {\n    console.log('📝 Capturing field values from DOM...');\n    \n    // Capture company field values\n    const updatedCompanyFields = companyFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Company field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture purchase order field values\n    const updatedPurchaseOrderFields = purchaseOrderFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 PO field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture vendor field values\n    const updatedVendorFields = vendorFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Vendor field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Capture ship-to field values\n    const updatedShipToFields = shipToFields.map(field => {\n      const element = document.getElementById(field.id);\n      const value = element ? element.textContent.trim() : '';\n      console.log(`📝 Ship-to field \"${field.label}\": \"${value}\"`);\n      return { ...field, value };\n    });\n    \n    // Update state with captured values\n    setCompanyFields(updatedCompanyFields);\n    setPurchaseOrderFields(updatedPurchaseOrderFields);\n    setVendorFields(updatedVendorFields);\n    setShipToFields(updatedShipToFields);\n    \n    console.log('📝 Field values captured and state updated!');\n    \n    return {\n      companyFields: updatedCompanyFields,\n      purchaseOrderFields: updatedPurchaseOrderFields,\n      vendorFields: updatedVendorFields,\n      shipToFields: updatedShipToFields\n    };\n  };\n\n  // Generate live XML preview\n  const generateLiveXMLPreview = () => {\n    try {\n      console.log('🚀 Generating live XML preview...');\n      const xmlContent = generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n      setCurrentXMLContent(xmlContent);\n      setXmlLastUpdated(new Date().toISOString());\n      console.log('✅ Live XML preview updated, length:', xmlContent.length);\n    } catch (error) {\n      console.error('❌ Failed to generate live XML preview:', error);\n      setCurrentXMLContent('Error generating XML: ' + error.message);\n    }\n  };\n\n  return (\n    <div className=\"purchase-order-container\">\n      {/* Page Header */}\n      <header className=\"page-header\">\n        <h1>Purchase Order Management System</h1>\n        <p>Create, edit, and manage purchase orders with ease</p>\n      </header>\n\n      {/* Real-time Status Indicator */}\n      <div className=\"status-indicator\">\n        <div className=\"status-grid\">\n          <div className=\"status-item\">\n            <span className=\"status-label\">📊 Total Fields:</span>\n            <span className=\"status-value\">{getFormStats().totalFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">🏢 Company:</span>\n            <span className=\"status-value\">{getFormStats().companyFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">📋 Purchase Order:</span>\n            <span className=\"status-value\">{getFormStats().purchaseOrderFields}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">📝 Changes:</span>\n            <span className=\"status-value\">{getFormStats().totalChanges}</span>\n          </div>\n          <div className=\"status-item\">\n            <span className=\"status-label\">🕒 Last Modified:</span>\n            <span className=\"status-value\">\n              {new Date(getFormStats().lastModified).toLocaleTimeString()}\n            </span>\n          </div>\n          {lastExportTime && (\n            <div className=\"status-item\">\n              <span className=\"status-label\">📄 Last Export:</span>\n              <span className=\"status-value\">\n                {new Date(lastExportTime).toLocaleTimeString()}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Purchase Order Form */}\n      <div className=\"container\">\n        <div className=\"form-content\">\n          {/* Header Section */}\n          <div className=\"section-container\">\n            <div className=\"header-section\">\n              {/* Section-level Drag and Drop */}\n              <DndContext \n                sensors={sensors}\n                collisionDetection={closestCenter}\n                onDragEnd={handleSectionDragEnd}\n              >\n                <SortableContext \n                  items={sectionOrder}\n                  strategy={verticalListSortingStrategy}\n                >\n                  {/* Section 1: Company Info */}\n                  <div id=\"section1\" className=\"sortable-section\">\n                    <Section1CompanyInfo \n                      companyFields={companyFields}\n                      sensors={sensors}\n                      onCompanyDragEnd={handleCompanyDragEnd}\n                      onAddCompanyField={handleAddCompanyField}\n                      onRemoveCompanyField={handleRemoveCompanyField}\n                      onLabelChange={handleCompanyFieldLabelChange}\n                      onContentChange={handleContentChange}\n                      lastModified={lastModified}\n                    />\n                  </div>\n                  \n                  {/* Section 2: Purchase Order */}\n                  <div id=\"section2\" className=\"sortable-section\">\n                    <Section2PurchaseOrder \n                      purchaseOrderFields={purchaseOrderFields}\n                      sensors={sensors}\n                      onPurchaseOrderDragEnd={handlePurchaseOrderDragEnd}\n                      onAddPurchaseOrderField={handleAddPurchaseOrderField}\n                      onRemovePurchaseOrderField={handleRemovePurchaseOrderField}\n                      onLabelChange={handlePurchaseOrderFieldLabelChange}\n                      onContentChange={handleContentChange}\n                      lastModified={poLastModified}\n                    />\n                  </div>\n                </SortableContext>\n              </DndContext>\n            </div>\n          </div>\n\n          {/* Section 3: Vendor and Ship To */}\n          <Section3VendorShipTo \n            vendorFields={vendorFields}\n            shipToFields={shipToFields}\n            sensors={sensors}\n            onVendorDragEnd={handleVendorDragEnd}\n            onShipToDragEnd={handleShipToDragEnd}\n          />\n\n          {/* Shipping Details */}\n          <div className=\"shipping-details\">\n            <div className=\"section-header\">REQUISITIONER</div>\n            <div className=\"section-header\">SHIP VIA</div>\n            <div className=\"section-header\">F.O.B.</div>\n            <div className=\"section-header\">SHIPPING TERMS</div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Requisitioner name\" /></div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping method\" /></div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"FOB terms\" /></div>\n            <div className=\"shipping-field\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Shipping terms\" /></div>\n          </div>\n\n          {/* Items Table */}\n          <table className=\"itemtable\">\n            <thead>\n              <tr>\n                <th></th>\n                <th colSpan=\"3\">Item#</th>\n                <th colSpan=\"12\">Description</th>\n                <th colSpan=\"2\">Qty</th>\n                <th colSpan=\"3\">Rate</th>\n                <th colSpan=\"3\">Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              {[1, 2, 3, 4, 5].map((row) => (\n                <tr key={row} className=\"draggable-row\">\n                  <td></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Item number\" /></td>\n                  <td colSpan=\"12\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Item description\" /></td>\n                  <td colSpan=\"2\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Qty\" /></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" /></td>\n                  <td colSpan=\"3\"><span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" /></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          {/* Comments and Totals */}\n          <div className=\"comments-totals-section\">\n            <div className=\"comments-section\">\n              <div className=\"section-header\">Comments or Special Instructions</div>\n              <div className=\"comments-content\">\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter comments or special instructions...\" />\n              </div>\n            </div>\n            \n            <div className=\"totals-section\">\n              <div className=\"total-row\">\n                <span>SUBTOTAL:</span>\n                <span className=\"calculated-field\">$0.00</span>\n              </div>\n              <div className=\"total-row\">\n                <span>TAX:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row\">\n                <span>SHIPPING:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row\">\n                <span>OTHER:</span>\n                <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"$0.00\" />\n              </div>\n              <div className=\"total-row total-final\">\n                <span>TOTAL:</span>\n                <span className=\"calculated-field total-field\">$0.00</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Contact Information */}\n          <div className=\"contact-section\">\n            <strong>Contact Information:</strong><br />\n            <span className=\"editable-field\" contentEditable=\"true\" data-placeholder=\"Enter contact information here\" />\n          </div>\n\n          {/* Convert Button */}\n          <div className=\"button-section\">\n            <button className=\"btn export-html-btn\" onClick={handleExportToHTML}>\n              📄 Convert to HTML\n            </button>\n            <button className=\"btn preview-btn\" onClick={togglePreviewMode}>\n              {isPreviewMode ? '👁️ Hide Preview' : '👁️ Show Preview'}\n            </button>\n          </div>\n\n          {/* Change History Display */}\n          {changeHistory.length > 0 && (\n            <div className=\"change-history-section\">\n              <div className=\"section-header\">\n                📝 Change History ({changeHistory.length} changes)\n                <button className=\"clear-history-btn\" onClick={clearChangeHistory}>\n                  🗑️ Clear\n                </button>\n              </div>\n              <div className=\"change-list\">\n                {changeHistory.slice(0, 10).map((change) => (\n                  <div key={change.id} className=\"change-item\">\n                    <span className=\"change-time\">\n                      {new Date(change.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className=\"change-type\">{change.type}</span>\n                    <span className=\"change-field\">{change.fieldId}</span>\n                    <span className=\"change-old\">{change.oldValue || 'empty'}</span>\n                    <span className=\"change-arrow\">→</span>\n                    <span className=\"change-new\">{change.newValue || 'empty'}</span>\n                  </div>\n                ))}\n                {changeHistory.length > 10 && (\n                  <div className=\"change-more\">\n                    ... and {changeHistory.length - 10} more changes\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Live HTML Preview */}\n          {isPreviewMode && (\n            <div className=\"html-preview-section\">\n              <div className=\"section-header\">\n                🔍 Live HTML Preview\n                <button className=\"copy-html-btn\" onClick={() => {\n                  navigator.clipboard.writeText(generateLiveHTMLPreview());\n                  console.log('📋 HTML copied to clipboard!');\n                }}>\n                  📋 Copy HTML\n                </button>\n              </div>\n              <div className=\"preview-container\">\n                <iframe\n                  title=\"HTML Preview\"\n                  srcDoc={generateLiveHTMLPreview()}\n                  className=\"html-preview-frame\"\n                  sandbox=\"allow-scripts\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Live XML Preview */}\n          <div className=\"xml-preview-section\">\n            <div className=\"section-header\">\n              📄 Live XML Preview\n              <button className=\"copy-xml-btn\" onClick={() => {\n                navigator.clipboard.writeText(currentXMLContent);\n                console.log('📋 XML copied to clipboard!');\n              }}>\n                📋 Copy XML\n              </button>\n            </div>\n            <div className=\"preview-container\">\n              <pre className=\"xml-preview-content\">\n                {currentXMLContent || 'XML will be generated when you open the XML Generator Modal'}\n              </pre>\n            </div>\n          </div>\n\n          {/* XML Generator Modal */}\n          <XMLGeneratorModal\n            isOpen={isXMLModalOpen}\n            onClose={() => setIsXMLModalOpen(false)}\n            formData={xmlFormData}\n            onRefresh={() => {\n              // Refresh form data if needed\n              console.log('🔄 Refreshing form data...');\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PurchaseOrderForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}