{"ast":null,"code":"var _jsxFileName = \"/Users/waleed/Documents/GitHub/Cadbury3/src/components/XMLGeneratorModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './XMLGeneratorModal.css';\nimport { generateXMLTemplate } from '../templates/PurchaseOrderTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst XMLGeneratorModal = ({\n  isOpen,\n  onClose,\n  formData,\n  onRefresh\n}) => {\n  _s();\n  const [xmlContent, setXmlContent] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState(null);\n  const modalRef = useRef(null);\n  const xmlOutputRef = useRef(null);\n\n  // Initialize XML generator when component mounts\n  useEffect(() => {\n    if (isOpen && !window.XML_GENERATOR) {\n      initializeXMLGenerator();\n    }\n  }, [isOpen]);\n\n  // Initialize the XML generator module\n  const initializeXMLGenerator = () => {\n    // Create a global UTILS object for field mapping\n    window.UTILS = {\n      getFieldValues: () => {\n        return {\n          companyName: formData.companyName || 'Your Company Name',\n          companyAddress: formData.companyAddress || 'Your Company Address',\n          companyCityState: formData.companyCityState || 'City, State ZIP',\n          companyPhone: formData.companyPhone || 'Your Company Phone',\n          companyFax: formData.companyFax || 'Your Company Fax',\n          companyWebsite: formData.companyWebsite || 'Your Company Website',\n          poNumber: formData.poNumber || 'PO-001',\n          poDate: formData.poDate || new Date().toLocaleDateString(),\n          vendorCompany: formData.vendorCompany || 'Vendor Company',\n          vendorContact: formData.vendorContact || 'Vendor Contact',\n          vendorAddress: formData.vendorAddress || 'Vendor Address',\n          vendorCityState: formData.vendorCityState || 'City, ST ZIP',\n          vendorPhone: formData.vendorPhone || 'Vendor Phone',\n          shipToName: formData.shipToName || 'Ship To Name',\n          shipToCompany: formData.shipToCompany || 'Ship To Company',\n          shipToAddress: formData.shipToAddress || 'Ship To Address',\n          shipToCityState: formData.shipToCityState || 'City, ST ZIP',\n          shipToPhone: formData.shipToPhone || 'Ship To Phone',\n          shipToFax: formData.shipToFax || '',\n          requisitioner: formData.requisitioner || 'Requisitioner Name',\n          shipVia: formData.shipVia || 'Standard Shipping',\n          fob: formData.fob || 'FOB Origin',\n          shippingTerms: formData.shippingTerms || 'Net 30',\n          comments: formData.comments || 'No special instructions',\n          subtotal: formData.subtotal || '$0.00',\n          tax: formData.tax || '$0.00',\n          shipping: formData.shipping || '$0.00',\n          other: formData.other || '$0.00',\n          total: formData.total || '$0.00',\n          contactInfo: formData.contactInfo || 'Contact information here'\n        };\n      },\n      getDynamicFieldMapping: () => {\n        return {\n          companyName: '[data-field-id=\"company-name\"]',\n          companyAddress: '[data-field-id=\"company-address\"]',\n          companyCityState: '[data-field-id=\"company-city-state\"]',\n          companyPhone: '[data-field-id=\"company-phone\"]',\n          companyFax: '[data-field-id=\"company-fax\"]',\n          companyWebsite: '[data-field-id=\"company-website\"]',\n          poNumber: '[data-field-id=\"po-number\"]',\n          poDate: '[data-field-id=\"po-date\"]',\n          vendorCompany: '[data-field-id=\"vendor-company\"]',\n          vendorContact: '[data-field-id=\"vendor-contact\"]',\n          vendorAddress: '[data-field-id=\"vendor-address\"]',\n          vendorCityState: '[data-field-id=\"vendor-city-state\"]',\n          vendorPhone: '[data-field-id=\"vendor-phone\"]',\n          shipToName: '[data-field-id=\"ship-to-name\"]',\n          shipToCompany: '[data-field-id=\"ship-to-company\"]',\n          shipToAddress: '[data-field-id=\"ship-to-address\"]',\n          shipToCityState: '[data-field-id=\"ship-to-city-state\"]',\n          shipToPhone: '[data-field-id=\"ship-to-phone\"]'\n        };\n      },\n      findFieldByLabel: (label, section) => {\n        // Find fields by label and section\n        const elements = document.querySelectorAll('.editable-field');\n        for (let element of elements) {\n          var _element$closest;\n          const parentSection = ((_element$closest = element.closest('.section-header')) === null || _element$closest === void 0 ? void 0 : _element$closest.textContent) || '';\n          if (parentSection.toLowerCase().includes(section.toLowerCase()) && element.textContent.toLowerCase().includes(label.toLowerCase())) {\n            return element;\n          }\n        }\n        return null;\n      }\n    };\n\n    // Create global functions for the modal\n    window.MAIN_APP = {\n      showError: message => {\n        setError(message);\n        setTimeout(() => setError(null), 5000);\n      },\n      showSuccess: message => {\n        console.log('✅ Success:', message);\n      },\n      updateXmlContent: content => {\n        setXmlContent(content);\n      }\n    };\n\n    // Create global currency formatter\n    window.CURRENCY_FORMATTER = {\n      format: value => {\n        if (!value || value.toString().trim() === '') return '$0.00';\n        const cleanValue = value.toString().replace(/[$,\\s]/g, '');\n        if (isNaN(cleanValue) || cleanValue === '') return '$0.00';\n        const number = parseFloat(cleanValue);\n        return '$' + number.toLocaleString('en-US', {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2\n        });\n      }\n    };\n\n    // Create global drag and drop module\n    window.DRAG_AND_DROP = {\n      getCurrentCommentsOrder: () => {\n        // Return the current order of comments and totals sections\n        return {\n          leftSection: 'comments',\n          rightSection: 'totals'\n        };\n      }\n    };\n\n    // Create the XML generator object\n    window.XML_GENERATOR = {\n      // Generate XML using the working template function\n      generateXml: function () {\n        console.log('🚀 Using generateXMLTemplate function...');\n\n        // Convert formData to the format expected by generateXMLTemplate\n        const companyFields = [{\n          id: 'company-name',\n          label: 'Company Name:',\n          value: formData.companyName || 'Your Company Name'\n        }, {\n          id: 'company-address',\n          label: 'Street Address:',\n          value: formData.companyAddress || 'Your Company Address'\n        }, {\n          id: 'company-city-state',\n          label: 'City, ST ZIP:',\n          value: formData.companyCityState || 'City, State ZIP'\n        }, {\n          id: 'company-phone',\n          label: 'Phone:',\n          value: formData.companyPhone || 'Your Company Phone'\n        }, {\n          id: 'company-fax',\n          label: 'Fax:',\n          value: formData.companyFax || 'Your Company Fax'\n        }, {\n          id: 'company-website',\n          label: 'Website:',\n          value: formData.companyWebsite || 'Your Company Website'\n        }];\n        const purchaseOrderFields = [{\n          id: 'po-title',\n          label: 'Purchase Order',\n          value: 'Purchase Order',\n          isTitle: true\n        }, {\n          id: 'po-date',\n          label: 'DATE:',\n          value: formData.poDate || new Date().toLocaleDateString()\n        }, {\n          id: 'po-number',\n          label: 'PO #:',\n          value: formData.poNumber || 'PO-001'\n        }];\n        const vendorFields = [{\n          id: 'vendor-company',\n          label: 'Company:',\n          value: formData.vendorCompany || 'Vendor Company'\n        }, {\n          id: 'vendor-contact',\n          label: 'Contact:',\n          value: formData.vendorContact || 'Vendor Contact'\n        }, {\n          id: 'vendor-address',\n          label: 'Address:',\n          value: formData.vendorAddress || 'Vendor Address'\n        }, {\n          id: 'vendor-city-state',\n          label: 'City/State:',\n          value: formData.vendorCityState || 'City, ST ZIP'\n        }, {\n          id: 'vendor-phone',\n          label: 'Phone:',\n          value: formData.vendorPhone || 'Vendor Phone'\n        }];\n        const shipToFields = [{\n          id: 'ship-to-name',\n          label: 'Name:',\n          value: formData.shipToName || 'Ship To Name'\n        }, {\n          id: 'ship-to-company',\n          label: 'Company:',\n          value: formData.shipToCompany || 'Ship To Company'\n        }, {\n          id: 'ship-to-address',\n          label: 'Address:',\n          value: formData.shipToAddress || 'Ship To Address'\n        }, {\n          id: 'ship-to-city-state',\n          label: 'City/State:',\n          value: formData.shipToCityState || 'City, ST ZIP'\n        }, {\n          id: 'ship-to-phone',\n          label: 'Phone:',\n          value: formData.shipToPhone || 'Ship To Phone'\n        }];\n\n        // Default section order\n        const sectionOrder = ['section1', 'section2'];\n\n        // Use the working generateXMLTemplate function\n        return generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n      },\n      // Display XML content in modal\n      displayXmlModal: function (xmlContent) {\n        console.log('🔄 displayXmlModal called');\n        if (window.MAIN_APP && window.MAIN_APP.updateXmlContent) {\n          window.MAIN_APP.updateXmlContent(xmlContent);\n        }\n      },\n      // Convert form data to XML and display in modal\n      convertToXml: function () {\n        console.log('🔄 Converting form to XML...');\n        try {\n          const xmlContent = this.generateXml();\n          this.displayXmlModal(xmlContent);\n          console.log('✅ XML conversion completed');\n        } catch (error) {\n          console.error('❌ XML conversion failed:', error);\n          if (window.MAIN_APP && window.MAIN_APP.showError) {\n            window.MAIN_APP.showError('Failed to generate XML. Please check the console for details.');\n          }\n        }\n      }\n    };\n\n    // Global functions for the modal\n    window.closeXmlModal = function () {\n      if (window.MAIN_APP && window.MAIN_APP.closeModal) {\n        window.MAIN_APP.closeModal();\n      }\n    };\n    window.copyXmlToClipboard = function () {\n      const xmlText = window.MAIN_APP ? window.MAIN_APP.getXmlContent() : '';\n      if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard.writeText(xmlText).then(() => {\n          if (window.MAIN_APP && window.MAIN_APP.showSuccess) {\n            window.MAIN_APP.showSuccess('XML copied to clipboard!');\n          }\n        }).catch(err => {\n          console.error('Failed to copy XML to clipboard:', err);\n        });\n      }\n    };\n    window.downloadXml = function () {\n      const xmlText = window.MAIN_APP ? window.MAIN_APP.getXmlContent() : '';\n      const blob = new Blob([xmlText], {\n        type: 'application/xml'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'purchase-order.xml';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      if (window.MAIN_APP && window.MAIN_APP.showSuccess) {\n        window.MAIN_APP.showSuccess('XML file downloaded!');\n      }\n    };\n    console.log('✅ XML Generator module loaded successfully');\n  };\n\n  // Generate XML when modal opens\n  useEffect(() => {\n    if (isOpen && window.XML_GENERATOR) {\n      generateXML();\n    }\n  }, [isOpen, formData]);\n\n  // Generate XML content\n  const generateXML = async () => {\n    setIsGenerating(true);\n    setError(null);\n    try {\n      if (window.XML_GENERATOR) {\n        const xml = window.XML_GENERATOR.generateXml();\n        setXmlContent(xml);\n\n        // Update MAIN_APP functions\n        window.MAIN_APP.updateXmlContent = content => setXmlContent(content);\n        window.MAIN_APP.closeModal = onClose;\n        window.MAIN_APP.getXmlContent = () => xmlContent;\n      }\n    } catch (err) {\n      setError('Failed to generate XML: ' + err.message);\n      console.error('XML generation error:', err);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Handle refresh\n  const handleRefresh = () => {\n    if (onRefresh) {\n      onRefresh();\n    }\n    generateXML();\n  };\n\n  // Handle copy to clipboard\n  const handleCopyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(xmlContent);\n      // You can add a success notification here\n    } catch (err) {\n      console.error('Failed to copy to clipboard:', err);\n    }\n  };\n\n  // Handle download\n  const handleDownload = () => {\n    const blob = new Blob([xmlContent], {\n      type: 'application/xml'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'purchase-order.xml';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"xml-modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"xml-modal\",\n      ref: modalRef,\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"xml-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCC4 XML Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"xml-modal-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [\"\\u274C \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"xml-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn refresh-btn\",\n            onClick: handleRefresh,\n            disabled: isGenerating,\n            children: \"\\uD83D\\uDD04 Refresh XML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn copy-btn\",\n            onClick: handleCopyToClipboard,\n            disabled: !xmlContent,\n            children: \"\\uD83D\\uDCCB Copy to Clipboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn download-btn\",\n            onClick: handleDownload,\n            disabled: !xmlContent,\n            children: \"\\uD83D\\uDCBE Download XML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"xml-output-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"xml-output-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Generated XML\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"xml-info\",\n              children: xmlContent ? `${xmlContent.length} characters` : 'No XML generated'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"xml-output\",\n            ref: xmlOutputRef,\n            children: isGenerating ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading\",\n              children: \"\\uD83D\\uDD04 Generating XML...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this) : xmlContent ? /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"xml-content\",\n              children: xmlContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-content\",\n              children: \"No XML content available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_s(XMLGeneratorModal, \"OM2+vACHqKVAtn1mCBBTqAVkG6Q=\");\n_c = XMLGeneratorModal;\nexport default XMLGeneratorModal;\nvar _c;\n$RefreshReg$(_c, \"XMLGeneratorModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","generateXMLTemplate","jsxDEV","_jsxDEV","XMLGeneratorModal","isOpen","onClose","formData","onRefresh","_s","xmlContent","setXmlContent","isGenerating","setIsGenerating","error","setError","modalRef","xmlOutputRef","window","XML_GENERATOR","initializeXMLGenerator","UTILS","getFieldValues","companyName","companyAddress","companyCityState","companyPhone","companyFax","companyWebsite","poNumber","poDate","Date","toLocaleDateString","vendorCompany","vendorContact","vendorAddress","vendorCityState","vendorPhone","shipToName","shipToCompany","shipToAddress","shipToCityState","shipToPhone","shipToFax","requisitioner","shipVia","fob","shippingTerms","comments","subtotal","tax","shipping","other","total","contactInfo","getDynamicFieldMapping","findFieldByLabel","label","section","elements","document","querySelectorAll","element","_element$closest","parentSection","closest","textContent","toLowerCase","includes","MAIN_APP","showError","message","setTimeout","showSuccess","console","log","updateXmlContent","content","CURRENCY_FORMATTER","format","value","toString","trim","cleanValue","replace","isNaN","number","parseFloat","toLocaleString","minimumFractionDigits","maximumFractionDigits","DRAG_AND_DROP","getCurrentCommentsOrder","leftSection","rightSection","generateXml","companyFields","id","purchaseOrderFields","isTitle","vendorFields","shipToFields","sectionOrder","displayXmlModal","convertToXml","closeXmlModal","closeModal","copyXmlToClipboard","xmlText","getXmlContent","navigator","clipboard","writeText","then","catch","err","downloadXml","blob","Blob","type","url","URL","createObjectURL","a","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","generateXML","xml","handleRefresh","handleCopyToClipboard","handleDownload","className","onClick","children","ref","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","disabled","length","_c","$RefreshReg$"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/components/XMLGeneratorModal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './XMLGeneratorModal.css';\nimport { generateXMLTemplate } from '../templates/PurchaseOrderTemplate';\n\nconst XMLGeneratorModal = ({ isOpen, onClose, formData, onRefresh }) => {\n  const [xmlContent, setXmlContent] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [error, setError] = useState(null);\n  const modalRef = useRef(null);\n  const xmlOutputRef = useRef(null);\n\n  // Initialize XML generator when component mounts\n  useEffect(() => {\n    if (isOpen && !window.XML_GENERATOR) {\n      initializeXMLGenerator();\n    }\n  }, [isOpen]);\n\n  // Initialize the XML generator module\n  const initializeXMLGenerator = () => {\n    // Create a global UTILS object for field mapping\n    window.UTILS = {\n      getFieldValues: () => {\n        return {\n          companyName: formData.companyName || 'Your Company Name',\n          companyAddress: formData.companyAddress || 'Your Company Address',\n          companyCityState: formData.companyCityState || 'City, State ZIP',\n          companyPhone: formData.companyPhone || 'Your Company Phone',\n          companyFax: formData.companyFax || 'Your Company Fax',\n          companyWebsite: formData.companyWebsite || 'Your Company Website',\n          poNumber: formData.poNumber || 'PO-001',\n          poDate: formData.poDate || new Date().toLocaleDateString(),\n          vendorCompany: formData.vendorCompany || 'Vendor Company',\n          vendorContact: formData.vendorContact || 'Vendor Contact',\n          vendorAddress: formData.vendorAddress || 'Vendor Address',\n          vendorCityState: formData.vendorCityState || 'City, ST ZIP',\n          vendorPhone: formData.vendorPhone || 'Vendor Phone',\n          shipToName: formData.shipToName || 'Ship To Name',\n          shipToCompany: formData.shipToCompany || 'Ship To Company',\n          shipToAddress: formData.shipToAddress || 'Ship To Address',\n          shipToCityState: formData.shipToCityState || 'City, ST ZIP',\n          shipToPhone: formData.shipToPhone || 'Ship To Phone',\n          shipToFax: formData.shipToFax || '',\n          requisitioner: formData.requisitioner || 'Requisitioner Name',\n          shipVia: formData.shipVia || 'Standard Shipping',\n          fob: formData.fob || 'FOB Origin',\n          shippingTerms: formData.shippingTerms || 'Net 30',\n          comments: formData.comments || 'No special instructions',\n          subtotal: formData.subtotal || '$0.00',\n          tax: formData.tax || '$0.00',\n          shipping: formData.shipping || '$0.00',\n          other: formData.other || '$0.00',\n          total: formData.total || '$0.00',\n          contactInfo: formData.contactInfo || 'Contact information here'\n        };\n      },\n      \n      getDynamicFieldMapping: () => {\n        return {\n          companyName: '[data-field-id=\"company-name\"]',\n          companyAddress: '[data-field-id=\"company-address\"]',\n          companyCityState: '[data-field-id=\"company-city-state\"]',\n          companyPhone: '[data-field-id=\"company-phone\"]',\n          companyFax: '[data-field-id=\"company-fax\"]',\n          companyWebsite: '[data-field-id=\"company-website\"]',\n          poNumber: '[data-field-id=\"po-number\"]',\n          poDate: '[data-field-id=\"po-date\"]',\n          vendorCompany: '[data-field-id=\"vendor-company\"]',\n          vendorContact: '[data-field-id=\"vendor-contact\"]',\n          vendorAddress: '[data-field-id=\"vendor-address\"]',\n          vendorCityState: '[data-field-id=\"vendor-city-state\"]',\n          vendorPhone: '[data-field-id=\"vendor-phone\"]',\n          shipToName: '[data-field-id=\"ship-to-name\"]',\n          shipToCompany: '[data-field-id=\"ship-to-company\"]',\n          shipToAddress: '[data-field-id=\"ship-to-address\"]',\n          shipToCityState: '[data-field-id=\"ship-to-city-state\"]',\n          shipToPhone: '[data-field-id=\"ship-to-phone\"]'\n        };\n      },\n      \n      findFieldByLabel: (label, section) => {\n        // Find fields by label and section\n        const elements = document.querySelectorAll('.editable-field');\n        for (let element of elements) {\n          const parentSection = element.closest('.section-header')?.textContent || '';\n          if (parentSection.toLowerCase().includes(section.toLowerCase()) && \n              element.textContent.toLowerCase().includes(label.toLowerCase())) {\n            return element;\n          }\n        }\n        return null;\n      }\n    };\n\n    // Create global functions for the modal\n    window.MAIN_APP = {\n      showError: (message) => {\n        setError(message);\n        setTimeout(() => setError(null), 5000);\n      },\n      showSuccess: (message) => {\n        console.log('✅ Success:', message);\n      },\n      updateXmlContent: (content) => {\n        setXmlContent(content);\n      }\n    };\n\n    // Create global currency formatter\n    window.CURRENCY_FORMATTER = {\n      format: (value) => {\n        if (!value || value.toString().trim() === '') return '$0.00';\n        const cleanValue = value.toString().replace(/[$,\\s]/g, '');\n        if (isNaN(cleanValue) || cleanValue === '') return '$0.00';\n        const number = parseFloat(cleanValue);\n        return '$' + number.toLocaleString('en-US', { \n          minimumFractionDigits: 2, \n          maximumFractionDigits: 2 \n        });\n      }\n    };\n\n    // Create global drag and drop module\n    window.DRAG_AND_DROP = {\n      getCurrentCommentsOrder: () => {\n        // Return the current order of comments and totals sections\n        return { leftSection: 'comments', rightSection: 'totals' };\n      }\n    };\n\n    // Create the XML generator object\n    window.XML_GENERATOR = {\n      // Generate XML using the working template function\n      generateXml: function() {\n        console.log('🚀 Using generateXMLTemplate function...');\n        \n        // Convert formData to the format expected by generateXMLTemplate\n        const companyFields = [\n          { id: 'company-name', label: 'Company Name:', value: formData.companyName || 'Your Company Name' },\n          { id: 'company-address', label: 'Street Address:', value: formData.companyAddress || 'Your Company Address' },\n          { id: 'company-city-state', label: 'City, ST ZIP:', value: formData.companyCityState || 'City, State ZIP' },\n          { id: 'company-phone', label: 'Phone:', value: formData.companyPhone || 'Your Company Phone' },\n          { id: 'company-fax', label: 'Fax:', value: formData.companyFax || 'Your Company Fax' },\n          { id: 'company-website', label: 'Website:', value: formData.companyWebsite || 'Your Company Website' }\n        ];\n\n        const purchaseOrderFields = [\n          { id: 'po-title', label: 'Purchase Order', value: 'Purchase Order', isTitle: true },\n          { id: 'po-date', label: 'DATE:', value: formData.poDate || new Date().toLocaleDateString() },\n          { id: 'po-number', label: 'PO #:', value: formData.poNumber || 'PO-001' }\n        ];\n\n        const vendorFields = [\n          { id: 'vendor-company', label: 'Company:', value: formData.vendorCompany || 'Vendor Company' },\n          { id: 'vendor-contact', label: 'Contact:', value: formData.vendorContact || 'Vendor Contact' },\n          { id: 'vendor-address', label: 'Address:', value: formData.vendorAddress || 'Vendor Address' },\n          { id: 'vendor-city-state', label: 'City/State:', value: formData.vendorCityState || 'City, ST ZIP' },\n          { id: 'vendor-phone', label: 'Phone:', value: formData.vendorPhone || 'Vendor Phone' }\n        ];\n\n        const shipToFields = [\n          { id: 'ship-to-name', label: 'Name:', value: formData.shipToName || 'Ship To Name' },\n          { id: 'ship-to-company', label: 'Company:', value: formData.shipToCompany || 'Ship To Company' },\n          { id: 'ship-to-address', label: 'Address:', value: formData.shipToAddress || 'Ship To Address' },\n          { id: 'ship-to-city-state', label: 'City/State:', value: formData.shipToCityState || 'City, ST ZIP' },\n          { id: 'ship-to-phone', label: 'Phone:', value: formData.shipToPhone || 'Ship To Phone' }\n        ];\n\n        // Default section order\n        const sectionOrder = ['section1', 'section2'];\n\n        // Use the working generateXMLTemplate function\n        return generateXMLTemplate(companyFields, purchaseOrderFields, vendorFields, shipToFields, sectionOrder);\n      },\n\n      // Display XML content in modal\n      displayXmlModal: function(xmlContent) {\n        console.log('🔄 displayXmlModal called');\n        if (window.MAIN_APP && window.MAIN_APP.updateXmlContent) {\n          window.MAIN_APP.updateXmlContent(xmlContent);\n        }\n      },\n\n      // Convert form data to XML and display in modal\n      convertToXml: function() {\n        console.log('🔄 Converting form to XML...');\n        \n        try {\n          const xmlContent = this.generateXml();\n          this.displayXmlModal(xmlContent);\n          console.log('✅ XML conversion completed');\n        } catch (error) {\n          console.error('❌ XML conversion failed:', error);\n          if (window.MAIN_APP && window.MAIN_APP.showError) {\n            window.MAIN_APP.showError('Failed to generate XML. Please check the console for details.');\n          }\n        }\n      }\n    };\n\n    // Global functions for the modal\n    window.closeXmlModal = function() {\n      if (window.MAIN_APP && window.MAIN_APP.closeModal) {\n        window.MAIN_APP.closeModal();\n      }\n    };\n\n    window.copyXmlToClipboard = function() {\n      const xmlText = window.MAIN_APP ? window.MAIN_APP.getXmlContent() : '';\n      if (navigator.clipboard && navigator.clipboard.writeText) {\n        navigator.clipboard.writeText(xmlText).then(() => {\n          if (window.MAIN_APP && window.MAIN_APP.showSuccess) {\n            window.MAIN_APP.showSuccess('XML copied to clipboard!');\n          }\n        }).catch(err => {\n          console.error('Failed to copy XML to clipboard:', err);\n        });\n      }\n    };\n\n    window.downloadXml = function() {\n      const xmlText = window.MAIN_APP ? window.MAIN_APP.getXmlContent() : '';\n      const blob = new Blob([xmlText], { type: 'application/xml' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'purchase-order.xml';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      \n      if (window.MAIN_APP && window.MAIN_APP.showSuccess) {\n        window.MAIN_APP.showSuccess('XML file downloaded!');\n      }\n    };\n\n    console.log('✅ XML Generator module loaded successfully');\n  };\n\n  // Generate XML when modal opens\n  useEffect(() => {\n    if (isOpen && window.XML_GENERATOR) {\n      generateXML();\n    }\n  }, [isOpen, formData]);\n\n  // Generate XML content\n  const generateXML = async () => {\n    setIsGenerating(true);\n    setError(null);\n    \n    try {\n      if (window.XML_GENERATOR) {\n        const xml = window.XML_GENERATOR.generateXml();\n        setXmlContent(xml);\n        \n        // Update MAIN_APP functions\n        window.MAIN_APP.updateXmlContent = (content) => setXmlContent(content);\n        window.MAIN_APP.closeModal = onClose;\n        window.MAIN_APP.getXmlContent = () => xmlContent;\n      }\n    } catch (err) {\n      setError('Failed to generate XML: ' + err.message);\n      console.error('XML generation error:', err);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Handle refresh\n  const handleRefresh = () => {\n    if (onRefresh) {\n      onRefresh();\n    }\n    generateXML();\n  };\n\n  // Handle copy to clipboard\n  const handleCopyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(xmlContent);\n      // You can add a success notification here\n    } catch (err) {\n      console.error('Failed to copy to clipboard:', err);\n    }\n  };\n\n  // Handle download\n  const handleDownload = () => {\n    const blob = new Blob([xmlContent], { type: 'application/xml' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'purchase-order.xml';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"xml-modal-overlay\" onClick={onClose}>\n      <div className=\"xml-modal\" ref={modalRef} onClick={(e) => e.stopPropagation()}>\n        <div className=\"xml-modal-header\">\n          <h2>📄 XML Generator</h2>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"xml-modal-content\">\n          {error && (\n            <div className=\"error-message\">\n              ❌ {error}\n            </div>\n          )}\n          \n          <div className=\"xml-controls\">\n            <button \n              className=\"btn refresh-btn\" \n              onClick={handleRefresh}\n              disabled={isGenerating}\n            >\n              🔄 Refresh XML\n            </button>\n            <button \n              className=\"btn copy-btn\" \n              onClick={handleCopyToClipboard}\n              disabled={!xmlContent}\n            >\n              📋 Copy to Clipboard\n            </button>\n            <button \n              className=\"btn download-btn\" \n              onClick={handleDownload}\n              disabled={!xmlContent}\n            >\n              💾 Download XML\n            </button>\n          </div>\n          \n          <div className=\"xml-output-container\">\n            <div className=\"xml-output-header\">\n              <h3>Generated XML</h3>\n              <span className=\"xml-info\">\n                {xmlContent ? `${xmlContent.length} characters` : 'No XML generated'}\n              </span>\n            </div>\n            \n            <div className=\"xml-output\" ref={xmlOutputRef}>\n              {isGenerating ? (\n                <div className=\"loading\">🔄 Generating XML...</div>\n              ) : xmlContent ? (\n                <pre className=\"xml-content\">{xmlContent}</pre>\n              ) : (\n                <div className=\"no-content\">No XML content available</div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default XMLGeneratorModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}