{"ast":null,"code":"var _jsxFileName = \"/Users/waleed/Documents/GitHub/Cadbury3/src/components/Section1CompanyInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DndContext, closestCenter, useDroppable } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport SortableCompanyField from './SortableCompanyField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Section1CompanyInfo({\n  companyFields,\n  sensors,\n  onCompanyDragEnd,\n  onAddCompanyField,\n  onRemoveCompanyField,\n  onLabelChange,\n  onContentChange,\n  lastModified,\n  dragListeners,\n  dragAttributes\n}) {\n  _s();\n  const [isPaletteOver, setIsPaletteOver] = useState(false);\n\n  // Make the section droppable for palette fields\n  const {\n    isOver,\n    setNodeRef\n  } = useDroppable({\n    id: 'section1',\n    data: {\n      type: 'section',\n      sectionNumber: 1,\n      accepts: 'palette-fields'\n    }\n  });\n\n  // Update palette over state\n  React.useEffect(() => {\n    setIsPaletteOver(isOver);\n  }, [isOver]);\n\n  // Handler for adding new company fields\n  const handleAddField = () => {\n    const newField = {\n      id: `company-field-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      label: 'New Field:',\n      placeholder: 'Enter field value'\n    };\n    onAddCompanyField(newField);\n  };\n\n  // Log field changes to console for tracking\n  React.useEffect(() => {\n    if (companyFields.length > 0) {\n      console.log('Company Fields Updated:', {\n        totalFields: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map((field, index) => ({\n          position: index + 1,\n          id: field.id,\n          label: field.label,\n          placeholder: field.placeholder\n        }))\n      });\n    }\n  }, [companyFields, lastModified]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    className: `section-1-company-info ${isPaletteOver ? 'palette-over' : ''}`,\n    \"data-palette-over\": isPaletteOver,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [\"COMPANY INFO\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"drag-indicator\",\n        children: \"::\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      collisionDetection: closestCenter,\n      onDragEnd: onCompanyDragEnd,\n      children: /*#__PURE__*/_jsxDEV(SortableContext, {\n        items: companyFields.map(field => field.id),\n        strategy: verticalListSortingStrategy,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"company-fields-container\",\n          children: companyFields.map(field => /*#__PURE__*/_jsxDEV(SortableCompanyField, {\n            field: field,\n            onRemove: onRemoveCompanyField,\n            onLabelChange: onLabelChange,\n            onContentChange: onContentChange,\n            section: \"company\"\n          }, field.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-field-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"add-field-btn\",\n        onClick: handleAddField,\n        title: \"Add new company field\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), isPaletteOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-indicator\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-message\",\n        children: \"Drop field here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Section1CompanyInfo, \"GXxFcxpkEgIxM79KJGEuwx6jQwU=\", false, function () {\n  return [useDroppable];\n});\n_c = Section1CompanyInfo;\nexport default Section1CompanyInfo;\nvar _c;\n$RefreshReg$(_c, \"Section1CompanyInfo\");","map":{"version":3,"names":["React","useState","DndContext","closestCenter","useDroppable","SortableContext","verticalListSortingStrategy","SortableCompanyField","jsxDEV","_jsxDEV","Section1CompanyInfo","companyFields","sensors","onCompanyDragEnd","onAddCompanyField","onRemoveCompanyField","onLabelChange","onContentChange","lastModified","dragListeners","dragAttributes","_s","isPaletteOver","setIsPaletteOver","isOver","setNodeRef","id","data","type","sectionNumber","accepts","useEffect","handleAddField","newField","Date","now","Math","random","toString","substr","label","placeholder","length","console","log","totalFields","toLocaleString","fields","map","field","index","position","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","collisionDetection","onDragEnd","items","strategy","onRemove","section","onClick","title","_c","$RefreshReg$"],"sources":["/Users/waleed/Documents/GitHub/Cadbury3/src/components/Section1CompanyInfo.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { DndContext, closestCenter, useDroppable } from '@dnd-kit/core';\nimport { SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport SortableCompanyField from './SortableCompanyField';\n\nfunction Section1CompanyInfo({ \n  companyFields, \n  sensors, \n  onCompanyDragEnd,\n  onAddCompanyField,\n  onRemoveCompanyField,\n  onLabelChange,\n  onContentChange,\n  lastModified,\n  dragListeners,\n  dragAttributes\n}) {\n  const [isPaletteOver, setIsPaletteOver] = useState(false);\n  \n  // Make the section droppable for palette fields\n  const { isOver, setNodeRef } = useDroppable({\n    id: 'section1',\n    data: {\n      type: 'section',\n      sectionNumber: 1,\n      accepts: 'palette-fields'\n    }\n  });\n\n  // Update palette over state\n  React.useEffect(() => {\n    setIsPaletteOver(isOver);\n  }, [isOver]);\n\n  // Handler for adding new company fields\n  const handleAddField = () => {\n    const newField = {\n      id: `company-field-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      label: 'New Field:',\n      placeholder: 'Enter field value'\n    };\n    onAddCompanyField(newField);\n  };\n\n  // Log field changes to console for tracking\n  React.useEffect(() => {\n    if (companyFields.length > 0) {\n              console.log('Company Fields Updated:', {\n        totalFields: companyFields.length,\n        lastModified: new Date(lastModified).toLocaleString(),\n        fields: companyFields.map((field, index) => ({\n          position: index + 1,\n          id: field.id,\n          label: field.label,\n          placeholder: field.placeholder\n        }))\n      });\n    }\n  }, [companyFields, lastModified]);\n\n  return (\n    <div \n      ref={setNodeRef}\n      className={`section-1-company-info ${isPaletteOver ? 'palette-over' : ''}`}\n      data-palette-over={isPaletteOver}\n    >\n      {/* Section Header */}\n      <div className=\"section-header\">\n        COMPANY INFO\n        <span className=\"drag-indicator\">\n          ::\n        </span>\n      </div>\n      \n      {/* Company Fields with Drag and Drop */}\n      <DndContext \n        sensors={sensors}\n        collisionDetection={closestCenter}\n        onDragEnd={onCompanyDragEnd}\n      >\n        <SortableContext \n          items={companyFields.map(field => field.id)}\n          strategy={verticalListSortingStrategy}\n        >\n          <div className=\"company-fields-container\">\n            {companyFields.map(field => (\n              <SortableCompanyField \n                key={field.id} \n                field={field} \n                onRemove={onRemoveCompanyField}\n                onLabelChange={onLabelChange}\n                onContentChange={onContentChange}\n                section=\"company\"\n              />\n            ))}\n          </div>\n        </SortableContext>\n      </DndContext>\n      \n      {/* Add Field Button */}\n      <div className=\"add-field-section\">\n        <button \n          type=\"button\" \n          className=\"add-field-btn\"\n          onClick={handleAddField}\n          title=\"Add new company field\"\n        >\n          +\n        </button>\n      </div>\n      \n      {/* Drop indicator when palette field is over */}\n      {isPaletteOver && (\n        <div className=\"drop-indicator\">\n          <div className=\"drop-message\">\n            Drop field here\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Section1CompanyInfo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,EAAEC,aAAa,EAAEC,YAAY,QAAQ,eAAe;AACvE,SAASC,eAAe,EAAEC,2BAA2B,QAAQ,mBAAmB;AAChF,OAAOC,oBAAoB,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,mBAAmBA,CAAC;EAC3BC,aAAa;EACbC,OAAO;EACPC,gBAAgB;EAChBC,iBAAiB;EACjBC,oBAAoB;EACpBC,aAAa;EACbC,eAAe;EACfC,YAAY;EACZC,aAAa;EACbC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAM;IAAEuB,MAAM;IAAEC;EAAW,CAAC,GAAGrB,YAAY,CAAC;IAC1CsB,EAAE,EAAE,UAAU;IACdC,IAAI,EAAE;MACJC,IAAI,EAAE,SAAS;MACfC,aAAa,EAAE,CAAC;MAChBC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;;EAEF;EACA9B,KAAK,CAAC+B,SAAS,CAAC,MAAM;IACpBR,gBAAgB,CAACC,MAAM,CAAC;EAC1B,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,QAAQ,GAAG;MACfP,EAAE,EAAE,iBAAiBQ,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAC5EC,KAAK,EAAE,YAAY;MACnBC,WAAW,EAAE;IACf,CAAC;IACD3B,iBAAiB,CAACmB,QAAQ,CAAC;EAC7B,CAAC;;EAED;EACAjC,KAAK,CAAC+B,SAAS,CAAC,MAAM;IACpB,IAAIpB,aAAa,CAAC+B,MAAM,GAAG,CAAC,EAAE;MACpBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;QAC7CC,WAAW,EAAElC,aAAa,CAAC+B,MAAM;QACjCxB,YAAY,EAAE,IAAIgB,IAAI,CAAChB,YAAY,CAAC,CAAC4B,cAAc,CAAC,CAAC;QACrDC,MAAM,EAAEpC,aAAa,CAACqC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;UAC3CC,QAAQ,EAAED,KAAK,GAAG,CAAC;UACnBxB,EAAE,EAAEuB,KAAK,CAACvB,EAAE;UACZc,KAAK,EAAES,KAAK,CAACT,KAAK;UAClBC,WAAW,EAAEQ,KAAK,CAACR;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC9B,aAAa,EAAEO,YAAY,CAAC,CAAC;EAEjC,oBACET,OAAA;IACE2C,GAAG,EAAE3B,UAAW;IAChB4B,SAAS,EAAE,0BAA0B/B,aAAa,GAAG,cAAc,GAAG,EAAE,EAAG;IAC3E,qBAAmBA,aAAc;IAAAgC,QAAA,gBAGjC7C,OAAA;MAAK4C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAAC,cAE9B,eAAA7C,OAAA;QAAM4C,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAC;MAEjC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGNjD,OAAA,CAACP,UAAU;MACTU,OAAO,EAAEA,OAAQ;MACjB+C,kBAAkB,EAAExD,aAAc;MAClCyD,SAAS,EAAE/C,gBAAiB;MAAAyC,QAAA,eAE5B7C,OAAA,CAACJ,eAAe;QACdwD,KAAK,EAAElD,aAAa,CAACqC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACvB,EAAE,CAAE;QAC5CoC,QAAQ,EAAExD,2BAA4B;QAAAgD,QAAA,eAEtC7C,OAAA;UAAK4C,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EACtC3C,aAAa,CAACqC,GAAG,CAACC,KAAK,iBACtBxC,OAAA,CAACF,oBAAoB;YAEnB0C,KAAK,EAAEA,KAAM;YACbc,QAAQ,EAAEhD,oBAAqB;YAC/BC,aAAa,EAAEA,aAAc;YAC7BC,eAAe,EAAEA,eAAgB;YACjC+C,OAAO,EAAC;UAAS,GALZf,KAAK,CAACvB,EAAE;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMd,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGbjD,OAAA;MAAK4C,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChC7C,OAAA;QACEmB,IAAI,EAAC,QAAQ;QACbyB,SAAS,EAAC,eAAe;QACzBY,OAAO,EAAEjC,cAAe;QACxBkC,KAAK,EAAC,uBAAuB;QAAAZ,QAAA,EAC9B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLpC,aAAa,iBACZb,OAAA;MAAK4C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B7C,OAAA;QAAK4C,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAE9B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrC,EAAA,CApHQX,mBAAmB;EAAA,QAeKN,YAAY;AAAA;AAAA+D,EAAA,GAfpCzD,mBAAmB;AAsH5B,eAAeA,mBAAmB;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}